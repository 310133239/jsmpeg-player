{"version":3,"sources":["../src/mpeg1.js"],"names":["JSMpeg","BaseDecoder","MPEG1","options","Decoder","Base","call","bufferSize","videoBufferSize","bufferMode","streaming","BitBuffer","MODE","EVICT","EXPAND","bits","customIntraQuantMatrix","Uint8Array","customNonIntraQuantMatrix","blockData","Int32Array","currentFrame","decodeFirstFrame","prototype","Object","create","constructor","write","pts","buffers","hasSequenceHeader","findStartCode","START","SEQUENCE","decodeSequenceHeader","decode","PICTURE","bufferedBytes","byteLength","index","decodePicture","advanceDecodedTime","frameRate","readHuffman","codeTable","state","read","newWidth","newHeight","skip","PICTURE_RATE","width","height","initBuffers","destination","resize","i","ZIG_ZAG","intraQuantMatrix","idx","nonIntraQuantMatrix","DEFAULT_INTRA_QUANT_MATRIX","DEFAULT_NON_INTRA_QUANT_MATRIX","mbWidth","mbHeight","mbSize","codedWidth","codedHeight","codedSize","halfWidth","halfHeight","currentY","Uint8ClampedArray","currentY32","Uint32Array","buffer","currentCr","currentCr32","currentCb","currentCb32","forwardY","forwardY32","forwardCr","forwardCr32","forwardCb","forwardCb32","pictureType","fullPelForward","forwardFCode","forwardRSize","forwardF","skipOutput","PICTURE_TYPE","B","PREDICTIVE","code","findNextStartCode","EXTENSION","USER_DATA","SLICE_FIRST","SLICE_LAST","decodeSlice","rewind","render","INTRA","tmpY","tmpY32","tmpCr","tmpCr32","tmpCb","tmpCb32","quantizerScale","sliceBegin","slice","macroblockAddress","motionFwH","motionFwHPrev","motionFwV","motionFwVPrev","dcPredictorY","dcPredictorCr","dcPredictorCb","decodeMacroblock","nextBytesAreStartCode","mbRow","mbCol","macroblockType","macroblockIntra","macroblockMotFw","increment","t","MACROBLOCK_ADDRESS_INCREMENT","copyMacroblock","mbTable","MACROBLOCK_TYPE","decodeMotionVectors","cbp","CODE_BLOCK_PATTERN","block","mask","decodeBlock","d","r","MOTION","Math","abs","motionH","motionV","sY","sCr","sCb","scan","H","V","oddH","oddV","src","dest","last","dY","dCb","dCr","x","y1","y2","y","cr1","cr2","cr","cb1","cb2","cb","n","quantMatrix","predictor","dctSize","DCT_DC_SIZE_LUMINANCE","DCT_DC_SIZE_CHROMINANCE","differential","level","run","coeff","DCT_COEFF","dezigZagged","PREMULTIPLIER_MATRIX","destArray","destIndex","CopyValueToDestination","IDCT","CopyBlockToDestination","Fill","AddValueToDestination","AddBlockToDestination","value","b1","b3","b4","b6","b7","tmp1","tmp2","m0","x0","x1","x2","x3","x4","y3","y4","y5","y6","y7","Int16Array","MACROBLOCK_TYPE_INTRA","Int8Array","MACROBLOCK_TYPE_PREDICTIVE","MACROBLOCK_TYPE_B"],"mappings":"AAAA;AACA;;AAEA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,WAAxB;;AAEA,IAAIC,QAAQ,SAARA,KAAQ,CAASC,OAAT,EAAkB;AAC7BH,QAAOI,OAAP,CAAeC,IAAf,CAAoBC,IAApB,CAAyB,IAAzB,EAA+BH,OAA/B;;AAEA,KAAII,aAAaJ,QAAQK,eAAR,IAA2B,MAAI,IAAhD;AACA,KAAIC,aAAaN,QAAQO,SAAR,GACdV,OAAOW,SAAP,CAAiBC,IAAjB,CAAsBC,KADR,GAEdb,OAAOW,SAAP,CAAiBC,IAAjB,CAAsBE,MAFzB;;AAIA,MAAKC,IAAL,GAAY,IAAIf,OAAOW,SAAX,CAAqBJ,UAArB,EAAiCE,UAAjC,CAAZ;;AAEA,MAAKO,sBAAL,GAA8B,IAAIC,UAAJ,CAAe,EAAf,CAA9B;AACA,MAAKC,yBAAL,GAAiC,IAAID,UAAJ,CAAe,EAAf,CAAjC;AACA,MAAKE,SAAL,GAAiB,IAAIC,UAAJ,CAAe,EAAf,CAAjB;;AAEA,MAAKC,YAAL,GAAoB,CAApB;AACA,MAAKC,gBAAL,GAAwBnB,QAAQmB,gBAAR,KAA6B,KAArD;AACA,CAhBD;;AAmBApB,MAAMqB,SAAN,GAAkBC,OAAOC,MAAP,CAAcxB,YAAYsB,SAA1B,CAAlB;AACArB,MAAMqB,SAAN,CAAgBG,WAAhB,GAA8BxB,KAA9B;;AAEAA,MAAMqB,SAAN,CAAgBI,KAAhB,GAAwB,UAASC,GAAT,EAAcC,OAAd,EAAuB;AAC9C7B,QAAOI,OAAP,CAAeC,IAAf,CAAoBkB,SAApB,CAA8BI,KAA9B,CAAoCrB,IAApC,CAAyC,IAAzC,EAA+CsB,GAA/C,EAAoDC,OAApD;;AAEA,KAAI,CAAC,KAAKC,iBAAV,EAA6B;AAC5B,MAAI,KAAKf,IAAL,CAAUgB,aAAV,CAAwB7B,MAAM8B,KAAN,CAAYC,QAApC,MAAkD,CAAC,CAAvD,EAA0D;AACzD,UAAO,KAAP;AACA;AACD,OAAKC,oBAAL;;AAEA,MAAI,KAAKZ,gBAAT,EAA2B;AAC1B,QAAKa,MAAL;AACA;AACD;AACD,CAbD;;AAeAjC,MAAMqB,SAAN,CAAgBY,MAAhB,GAAyB,YAAW;AACnC,KAAI,CAAC,KAAKL,iBAAV,EAA6B;AAC5B,SAAO,KAAP;AACA;;AAED,KAAI,KAAKf,IAAL,CAAUgB,aAAV,CAAwB7B,MAAM8B,KAAN,CAAYI,OAApC,MAAiD,CAAC,CAAtD,EAAyD;AACxD,MAAIC,gBAAgB,KAAKtB,IAAL,CAAUuB,UAAV,IAAwB,KAAKvB,IAAL,CAAUwB,KAAV,IAAmB,CAA3C,CAApB;AACA,SAAO,KAAP;AACA;;AAED,MAAKC,aAAL;AACA,MAAKC,kBAAL,CAAwB,IAAE,KAAKC,SAA/B;AACA,QAAO,IAAP;AACA,CAbD;;AAeAxC,MAAMqB,SAAN,CAAgBoB,WAAhB,GAA8B,UAASC,SAAT,EAAoB;AACjD,KAAIC,QAAQ,CAAZ;AACA,IAAG;AACFA,UAAQD,UAAUC,QAAQ,KAAK9B,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAlB,CAAR;AACA,EAFD,QAESD,SAAS,CAAT,IAAcD,UAAUC,KAAV,MAAqB,CAF5C;AAGA,QAAOD,UAAUC,QAAM,CAAhB,CAAP;AACA,CAND;;AASA;;AAEA3C,MAAMqB,SAAN,CAAgBmB,SAAhB,GAA4B,EAA5B;AACAxC,MAAMqB,SAAN,CAAgBW,oBAAhB,GAAuC,YAAW;AACjD,KAAIa,WAAW,KAAKhC,IAAL,CAAU+B,IAAV,CAAe,EAAf,CAAf;AAAA,KACCE,YAAY,KAAKjC,IAAL,CAAU+B,IAAV,CAAe,EAAf,CADb;;AAGA;AACA,MAAK/B,IAAL,CAAUkC,IAAV,CAAe,CAAf;;AAEA,MAAKP,SAAL,GAAiBxC,MAAMgD,YAAN,CAAmB,KAAKnC,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAnB,CAAjB;;AAEA;AACA,MAAK/B,IAAL,CAAUkC,IAAV,CAAe,KAAK,CAAL,GAAS,EAAT,GAAc,CAA7B;;AAEA,KAAIF,aAAa,KAAKI,KAAlB,IAA2BH,cAAc,KAAKI,MAAlD,EAA0D;AACzD,OAAKD,KAAL,GAAaJ,QAAb;AACA,OAAKK,MAAL,GAAcJ,SAAd;;AAEA,OAAKK,WAAL;;AAEA,MAAI,KAAKC,WAAT,EAAsB;AACrB,QAAKA,WAAL,CAAiBC,MAAjB,CAAwBR,QAAxB,EAAkCC,SAAlC;AACA;AACD;;AAED,KAAI,KAAKjC,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAJ,EAAuB;AAAE;AACxB,OAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC5B,QAAKxC,sBAAL,CAA4Bd,MAAMuD,OAAN,CAAcD,CAAd,CAA5B,IAAgD,KAAKzC,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAhD;AACA;AACD,OAAKY,gBAAL,GAAwB,KAAK1C,sBAA7B;AACA;;AAED,KAAI,KAAKD,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAJ,EAAuB;AAAE;AACxB,OAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC5B,OAAIG,MAAMzD,MAAMuD,OAAN,CAAcD,CAAd,CAAV;AACA,QAAKtC,yBAAL,CAA+ByC,GAA/B,IAAsC,KAAK5C,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAtC;AACA;AACD,OAAKc,mBAAL,GAA2B,KAAK1C,yBAAhC;AACA;;AAED,MAAKY,iBAAL,GAAyB,IAAzB;AACA,CAvCD;;AAyCA5B,MAAMqB,SAAN,CAAgB8B,WAAhB,GAA8B,YAAW;AACxC,MAAKK,gBAAL,GAAwBxD,MAAM2D,0BAA9B;AACA,MAAKD,mBAAL,GAA2B1D,MAAM4D,8BAAjC;;AAEA,MAAKC,OAAL,GAAgB,KAAKZ,KAAL,GAAa,EAAd,IAAqB,CAApC;AACA,MAAKa,QAAL,GAAiB,KAAKZ,MAAL,GAAc,EAAf,IAAsB,CAAtC;AACA,MAAKa,MAAL,GAAc,KAAKF,OAAL,GAAe,KAAKC,QAAlC;;AAEA,MAAKE,UAAL,GAAkB,KAAKH,OAAL,IAAgB,CAAlC;AACA,MAAKI,WAAL,GAAmB,KAAKH,QAAL,IAAiB,CAApC;AACA,MAAKI,SAAL,GAAiB,KAAKF,UAAL,GAAkB,KAAKC,WAAxC;;AAEA,MAAKE,SAAL,GAAiB,KAAKN,OAAL,IAAgB,CAAjC;AACA,MAAKO,UAAL,GAAkB,KAAKN,QAAL,IAAiB,CAAnC;;AAEA;AACA,MAAKO,QAAL,GAAgB,IAAIC,iBAAJ,CAAsB,KAAKJ,SAA3B,CAAhB;AACA,MAAKK,UAAL,GAAkB,IAAIC,WAAJ,CAAgB,KAAKH,QAAL,CAAcI,MAA9B,CAAlB;;AAEA,MAAKC,SAAL,GAAiB,IAAIJ,iBAAJ,CAAsB,KAAKJ,SAAL,IAAkB,CAAxC,CAAjB;AACA,MAAKS,WAAL,GAAmB,IAAIH,WAAJ,CAAgB,KAAKE,SAAL,CAAeD,MAA/B,CAAnB;;AAEA,MAAKG,SAAL,GAAiB,IAAIN,iBAAJ,CAAsB,KAAKJ,SAAL,IAAkB,CAAxC,CAAjB;AACA,MAAKW,WAAL,GAAmB,IAAIL,WAAJ,CAAgB,KAAKI,SAAL,CAAeH,MAA/B,CAAnB;;AAGA,MAAKK,QAAL,GAAgB,IAAIR,iBAAJ,CAAsB,KAAKJ,SAA3B,CAAhB;AACA,MAAKa,UAAL,GAAkB,IAAIP,WAAJ,CAAgB,KAAKM,QAAL,CAAcL,MAA9B,CAAlB;;AAEA,MAAKO,SAAL,GAAiB,IAAIV,iBAAJ,CAAsB,KAAKJ,SAAL,IAAkB,CAAxC,CAAjB;AACA,MAAKe,WAAL,GAAmB,IAAIT,WAAJ,CAAgB,KAAKQ,SAAL,CAAeP,MAA/B,CAAnB;;AAEA,MAAKS,SAAL,GAAiB,IAAIZ,iBAAJ,CAAsB,KAAKJ,SAAL,IAAkB,CAAxC,CAAjB;AACA,MAAKiB,WAAL,GAAmB,IAAIX,WAAJ,CAAgB,KAAKU,SAAL,CAAeT,MAA/B,CAAnB;AACA,CAlCD;;AAqCA;;AAEAzE,MAAMqB,SAAN,CAAgBgD,QAAhB,GAA2B,IAA3B;AACArE,MAAMqB,SAAN,CAAgBqD,SAAhB,GAA4B,IAA5B;AACA1E,MAAMqB,SAAN,CAAgBuD,SAAhB,GAA4B,IAA5B;;AAEA5E,MAAMqB,SAAN,CAAgB+D,WAAhB,GAA8B,CAA9B;;AAEA;AACApF,MAAMqB,SAAN,CAAgByD,QAAhB,GAA2B,IAA3B;AACA9E,MAAMqB,SAAN,CAAgB2D,SAAhB,GAA4B,IAA5B;AACAhF,MAAMqB,SAAN,CAAgB6D,SAAhB,GAA4B,IAA5B;;AAEAlF,MAAMqB,SAAN,CAAgBgE,cAAhB,GAAiC,KAAjC;AACArF,MAAMqB,SAAN,CAAgBiE,YAAhB,GAA+B,CAA/B;AACAtF,MAAMqB,SAAN,CAAgBkE,YAAhB,GAA+B,CAA/B;AACAvF,MAAMqB,SAAN,CAAgBmE,QAAhB,GAA2B,CAA3B;;AAEAxF,MAAMqB,SAAN,CAAgBiB,aAAhB,GAAgC,UAASmD,UAAT,EAAqB;AACpD,MAAKtE,YAAL;;AAEA,MAAKN,IAAL,CAAUkC,IAAV,CAAe,EAAf,EAHoD,CAGhC;AACpB,MAAKqC,WAAL,GAAmB,KAAKvE,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAnB;AACA,MAAK/B,IAAL,CAAUkC,IAAV,CAAe,EAAf,EALoD,CAKhC;;AAEpB;AACA,KAAI,KAAKqC,WAAL,IAAoB,CAApB,IAAyB,KAAKA,WAAL,IAAoBpF,MAAM0F,YAAN,CAAmBC,CAApE,EAAuE;AACtE;AACA;;AAED;AACA,KAAI,KAAKP,WAAL,KAAqBpF,MAAM0F,YAAN,CAAmBE,UAA5C,EAAwD;AACvD,OAAKP,cAAL,GAAsB,KAAKxE,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAtB;AACA,OAAK0C,YAAL,GAAoB,KAAKzE,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAApB;AACA,MAAI,KAAK0C,YAAL,KAAsB,CAA1B,EAA6B;AAC5B;AACA;AACA;AACD,OAAKC,YAAL,GAAoB,KAAKD,YAAL,GAAoB,CAAxC;AACA,OAAKE,QAAL,GAAgB,KAAK,KAAKD,YAA1B;AACA;;AAED,KAAIM,OAAO,CAAX;AACA,IAAG;AACFA,SAAO,KAAKhF,IAAL,CAAUiF,iBAAV,EAAP;AACA,EAFD,QAESD,SAAS7F,MAAM8B,KAAN,CAAYiE,SAArB,IAAkCF,SAAS7F,MAAM8B,KAAN,CAAYkE,SAFhE;;AAKA,QAAOH,QAAQ7F,MAAM8B,KAAN,CAAYmE,WAApB,IAAmCJ,QAAQ7F,MAAM8B,KAAN,CAAYoE,UAA9D,EAA0E;AACzE,OAAKC,WAAL,CAAiBN,OAAO,UAAxB;AACAA,SAAO,KAAKhF,IAAL,CAAUiF,iBAAV,EAAP;AACA;;AAED,KAAID,SAAS,CAAC,CAAd,EAAiB;AAChB;AACA;AACA,OAAKhF,IAAL,CAAUuF,MAAV,CAAiB,EAAjB;AACA;;AAED;AACA,KAAI,KAAKhD,WAAT,EAAsB;AACrB,OAAKA,WAAL,CAAiBiD,MAAjB,CAAwB,KAAKhC,QAA7B,EAAuC,KAAKK,SAA5C,EAAuD,KAAKE,SAA5D;AACA;;AAED;AACA,KACC,KAAKQ,WAAL,KAAqBpF,MAAM0F,YAAN,CAAmBY,KAAxC,IACA,KAAKlB,WAAL,KAAqBpF,MAAM0F,YAAN,CAAmBE,UAFzC,EAGE;AACD,MACCW,OAAO,KAAKzB,QADb;AAAA,MAEC0B,SAAS,KAAKzB,UAFf;AAAA,MAGC0B,QAAQ,KAAKzB,SAHd;AAAA,MAIC0B,UAAU,KAAKzB,WAJhB;AAAA,MAKC0B,QAAQ,KAAKzB,SALd;AAAA,MAMC0B,UAAU,KAAKzB,WANhB;;AAQA,OAAKL,QAAL,GAAgB,KAAKT,QAArB;AACA,OAAKU,UAAL,GAAkB,KAAKR,UAAvB;AACA,OAAKS,SAAL,GAAiB,KAAKN,SAAtB;AACA,OAAKO,WAAL,GAAmB,KAAKN,WAAxB;AACA,OAAKO,SAAL,GAAiB,KAAKN,SAAtB;AACA,OAAKO,WAAL,GAAmB,KAAKN,WAAxB;;AAEA,OAAKR,QAAL,GAAgBkC,IAAhB;AACA,OAAKhC,UAAL,GAAkBiC,MAAlB;AACA,OAAK9B,SAAL,GAAiB+B,KAAjB;AACA,OAAK9B,WAAL,GAAmB+B,OAAnB;AACA,OAAK9B,SAAL,GAAiB+B,KAAjB;AACA,OAAK9B,WAAL,GAAmB+B,OAAnB;AACA;AACD,CAzED;;AA4EA;;AAEA5G,MAAMqB,SAAN,CAAgBwF,cAAhB,GAAiC,CAAjC;AACA7G,MAAMqB,SAAN,CAAgByF,UAAhB,GAA6B,KAA7B;;AAEA9G,MAAMqB,SAAN,CAAgB8E,WAAhB,GAA8B,UAASY,KAAT,EAAgB;AAC7C,MAAKD,UAAL,GAAkB,IAAlB;AACA,MAAKE,iBAAL,GAAyB,CAACD,QAAQ,CAAT,IAAc,KAAKlD,OAAnB,GAA6B,CAAtD;;AAEA;AACA,MAAKoD,SAAL,GAAiB,KAAKC,aAAL,GAAqB,CAAtC;AACA,MAAKC,SAAL,GAAiB,KAAKC,aAAL,GAAqB,CAAtC;AACA,MAAKC,YAAL,GAAqB,GAArB;AACA,MAAKC,aAAL,GAAqB,GAArB;AACA,MAAKC,aAAL,GAAqB,GAArB;;AAEA,MAAKV,cAAL,GAAsB,KAAKhG,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAtB;;AAEA;AACA,QAAO,KAAK/B,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAP,EAA0B;AACzB,OAAK/B,IAAL,CAAUkC,IAAV,CAAe,CAAf;AACA;;AAED,IAAG;AACF,OAAKyE,gBAAL;AACA,EAFD,QAES,CAAC,KAAK3G,IAAL,CAAU4G,qBAAV,EAFV;AAGA,CArBD;;AAwBA;;AAEAzH,MAAMqB,SAAN,CAAgB2F,iBAAhB,GAAoC,CAApC;AACAhH,MAAMqB,SAAN,CAAgBqG,KAAhB,GAAwB,CAAxB;AACA1H,MAAMqB,SAAN,CAAgBsG,KAAhB,GAAwB,CAAxB;;AAEA3H,MAAMqB,SAAN,CAAgBuG,cAAhB,GAAiC,CAAjC;AACA5H,MAAMqB,SAAN,CAAgBwG,eAAhB,GAAkC,KAAlC;AACA7H,MAAMqB,SAAN,CAAgByG,eAAhB,GAAkC,KAAlC;;AAEA9H,MAAMqB,SAAN,CAAgB4F,SAAhB,GAA4B,CAA5B;AACAjH,MAAMqB,SAAN,CAAgB8F,SAAhB,GAA4B,CAA5B;AACAnH,MAAMqB,SAAN,CAAgB6F,aAAhB,GAAgC,CAAhC;AACAlH,MAAMqB,SAAN,CAAgB+F,aAAhB,GAAgC,CAAhC;;AAEApH,MAAMqB,SAAN,CAAgBmG,gBAAhB,GAAmC,YAAW;AAC7C;AACA,KACCO,YAAY,CADb;AAAA,KAECC,IAAI,KAAKvF,WAAL,CAAiBzC,MAAMiI,4BAAvB,CAFL;;AAIA,QAAOD,MAAM,EAAb,EAAiB;AAChB;AACAA,MAAI,KAAKvF,WAAL,CAAiBzC,MAAMiI,4BAAvB,CAAJ;AACA;AACD,QAAOD,MAAM,EAAb,EAAiB;AAChB;AACAD,eAAa,EAAb;AACAC,MAAI,KAAKvF,WAAL,CAAiBzC,MAAMiI,4BAAvB,CAAJ;AACA;AACDF,cAAaC,CAAb;;AAEA;AACA,KAAI,KAAKlB,UAAT,EAAqB;AACpB;AACA;AACA,OAAKA,UAAL,GAAkB,KAAlB;AACA,OAAKE,iBAAL,IAA0Be,SAA1B;AACA,EALD,MAMK;AACJ,MAAI,KAAKf,iBAAL,GAAyBe,SAAzB,IAAsC,KAAKhE,MAA/C,EAAuD;AACtD;AACA;AACA;AACD,MAAIgE,YAAY,CAAhB,EAAmB;AAClB;AACA,QAAKV,YAAL,GAAqB,GAArB;AACA,QAAKC,aAAL,GAAqB,GAArB;AACA,QAAKC,aAAL,GAAqB,GAArB;;AAEA;AACA,OAAI,KAAKnC,WAAL,KAAqBpF,MAAM0F,YAAN,CAAmBE,UAA5C,EAAwD;AACvD,SAAKqB,SAAL,GAAiB,KAAKC,aAAL,GAAqB,CAAtC;AACA,SAAKC,SAAL,GAAiB,KAAKC,aAAL,GAAqB,CAAtC;AACA;AACD;;AAED;AACA,SAAOW,YAAY,CAAnB,EAAsB;AACrB,QAAKf,iBAAL;AACA,QAAKU,KAAL,GAAc,KAAKV,iBAAL,GAAyB,KAAKnD,OAA/B,GAAwC,CAArD;AACA,QAAK8D,KAAL,GAAa,KAAKX,iBAAL,GAAyB,KAAKnD,OAA3C;AACA,QAAKqE,cAAL,CACC,KAAKjB,SADN,EACiB,KAAKE,SADtB,EAEC,KAAKrC,QAFN,EAEgB,KAAKE,SAFrB,EAEgC,KAAKE,SAFrC;AAIA6C;AACA;AACD,OAAKf,iBAAL;AACA;AACD,MAAKU,KAAL,GAAc,KAAKV,iBAAL,GAAyB,KAAKnD,OAA/B,GAAwC,CAArD;AACA,MAAK8D,KAAL,GAAa,KAAKX,iBAAL,GAAyB,KAAKnD,OAA3C;;AAEA;AACA,KAAIsE,UAAUnI,MAAMoI,eAAN,CAAsB,KAAKhD,WAA3B,CAAd;AACA,MAAKwC,cAAL,GAAsB,KAAKnF,WAAL,CAAiB0F,OAAjB,CAAtB;AACA,MAAKN,eAAL,GAAwB,KAAKD,cAAL,GAAsB,IAA9C;AACA,MAAKE,eAAL,GAAwB,KAAKF,cAAL,GAAsB,IAA9C;;AAEA;AACA,KAAI,CAAC,KAAKA,cAAL,GAAsB,IAAvB,MAAiC,CAArC,EAAwC;AACvC,OAAKf,cAAL,GAAsB,KAAKhG,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAtB;AACA;;AAED,KAAI,KAAKiF,eAAT,EAA0B;AACzB;AACA,OAAKZ,SAAL,GAAiB,KAAKC,aAAL,GAAqB,CAAtC;AACA,OAAKC,SAAL,GAAiB,KAAKC,aAAL,GAAqB,CAAtC;AACA,EAJD,MAKK;AACJ;AACA,OAAKC,YAAL,GAAoB,GAApB;AACA,OAAKC,aAAL,GAAqB,GAArB;AACA,OAAKC,aAAL,GAAqB,GAArB;;AAEA,OAAKc,mBAAL;AACA,OAAKH,cAAL,CACC,KAAKjB,SADN,EACiB,KAAKE,SADtB,EAEC,KAAKrC,QAFN,EAEgB,KAAKE,SAFrB,EAEgC,KAAKE,SAFrC;AAIA;;AAED;AACA,KAAIoD,MAAO,CAAC,KAAKV,cAAL,GAAsB,IAAvB,MAAiC,CAAlC,GACP,KAAKnF,WAAL,CAAiBzC,MAAMuI,kBAAvB,CADO,GAEN,KAAKV,eAAL,GAAuB,IAAvB,GAA8B,CAFlC;;AAIA,MAAK,IAAIW,QAAQ,CAAZ,EAAeC,OAAO,IAA3B,EAAiCD,QAAQ,CAAzC,EAA4CA,OAA5C,EAAqD;AACpD,MAAI,CAACF,MAAMG,IAAP,MAAiB,CAArB,EAAwB;AACvB,QAAKC,WAAL,CAAiBF,KAAjB;AACA;AACDC,WAAS,CAAT;AACA;AACD,CAlGD;;AAqGAzI,MAAMqB,SAAN,CAAgBgH,mBAAhB,GAAsC,YAAW;AAChD,KAAIxC,IAAJ;AAAA,KAAU8C,CAAV;AAAA,KAAaC,IAAI,CAAjB;;AAEA;AACA,KAAI,KAAKd,eAAT,EAA0B;AACzB;AACAjC,SAAO,KAAKpD,WAAL,CAAiBzC,MAAM6I,MAAvB,CAAP;AACA,MAAKhD,SAAS,CAAV,IAAiB,KAAKL,QAAL,KAAkB,CAAvC,EAA2C;AAC1CoD,OAAI,KAAK/H,IAAL,CAAU+B,IAAV,CAAe,KAAK2C,YAApB,CAAJ;AACAoD,OAAI,CAAEG,KAAKC,GAAL,CAASlD,IAAT,IAAiB,CAAlB,IAAwB,KAAKN,YAA9B,IAA8CqD,CAA9C,GAAkD,CAAtD;AACA,OAAI/C,OAAO,CAAX,EAAc;AACb8C,QAAI,CAACA,CAAL;AACA;AACD,GAND,MAOK;AACJA,OAAI9C,IAAJ;AACA;;AAED,OAAKqB,aAAL,IAAsByB,CAAtB;AACA,MAAI,KAAKzB,aAAL,GAAqB,CAAC,KAAK1B,QAAL,IAAiB,CAAlB,IAAuB,CAAhD,EAAmD;AAClD,QAAK0B,aAAL,IAAsB,KAAK1B,QAAL,IAAiB,CAAvC;AACA,GAFD,MAGK,IAAI,KAAK0B,aAAL,GAAuB,CAAC,KAAK1B,QAAP,IAAoB,CAA9C,EAAkD;AACtD,QAAK0B,aAAL,IAAsB,KAAK1B,QAAL,IAAiB,CAAvC;AACA;;AAED,OAAKyB,SAAL,GAAiB,KAAKC,aAAtB;AACA,MAAI,KAAK7B,cAAT,EAAyB;AACxB,QAAK4B,SAAL,KAAmB,CAAnB;AACA;;AAED;AACApB,SAAO,KAAKpD,WAAL,CAAiBzC,MAAM6I,MAAvB,CAAP;AACA,MAAKhD,SAAS,CAAV,IAAiB,KAAKL,QAAL,KAAkB,CAAvC,EAA2C;AAC1CoD,OAAI,KAAK/H,IAAL,CAAU+B,IAAV,CAAe,KAAK2C,YAApB,CAAJ;AACAoD,OAAI,CAAEG,KAAKC,GAAL,CAASlD,IAAT,IAAiB,CAAlB,IAAwB,KAAKN,YAA9B,IAA8CqD,CAA9C,GAAkD,CAAtD;AACA,OAAI/C,OAAO,CAAX,EAAc;AACb8C,QAAI,CAACA,CAAL;AACA;AACD,GAND,MAOK;AACJA,OAAI9C,IAAJ;AACA;;AAED,OAAKuB,aAAL,IAAsBuB,CAAtB;AACA,MAAI,KAAKvB,aAAL,GAAqB,CAAC,KAAK5B,QAAL,IAAiB,CAAlB,IAAuB,CAAhD,EAAmD;AAClD,QAAK4B,aAAL,IAAsB,KAAK5B,QAAL,IAAiB,CAAvC;AACA,GAFD,MAGK,IAAI,KAAK4B,aAAL,GAAuB,CAAC,KAAK5B,QAAP,IAAoB,CAA9C,EAAkD;AACtD,QAAK4B,aAAL,IAAsB,KAAK5B,QAAL,IAAiB,CAAvC;AACA;;AAED,OAAK2B,SAAL,GAAiB,KAAKC,aAAtB;AACA,MAAI,KAAK/B,cAAT,EAAyB;AACxB,QAAK8B,SAAL,KAAmB,CAAnB;AACA;AACD,EApDD,MAqDK,IAAI,KAAK/B,WAAL,KAAqBpF,MAAM0F,YAAN,CAAmBE,UAA5C,EAAwD;AAC5D;AACA,OAAKqB,SAAL,GAAiB,KAAKC,aAAL,GAAqB,CAAtC;AACA,OAAKC,SAAL,GAAiB,KAAKC,aAAL,GAAqB,CAAtC;AACA;AACD,CA9DD;;AAgEApH,MAAMqB,SAAN,CAAgB6G,cAAhB,GAAiC,UAASc,OAAT,EAAkBC,OAAlB,EAA2BC,EAA3B,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyC;AACzE,KACCnG,KADD,EACQoG,IADR,EAECC,CAFD,EAEIC,CAFJ,EAEOC,IAFP,EAEaC,IAFb,EAGCC,GAHD,EAGMC,IAHN,EAGYC,IAHZ;;AAKA;AACA,KAAIC,KAAK,KAAKtF,UAAd;AAAA,KACCuF,MAAM,KAAKjF,WADZ;AAAA,KAECkF,MAAM,KAAKpF,WAFZ;;AAIA;AACA1B,SAAQ,KAAKe,UAAb;AACAqF,QAAOpG,QAAQ,EAAf;;AAEAqG,KAAIN,WAAW,CAAf;AACAO,KAAIN,WAAW,CAAf;AACAO,QAAO,CAACR,UAAU,CAAX,MAAkB,CAAzB;AACAS,QAAO,CAACR,UAAU,CAAX,MAAkB,CAAzB;;AAEAS,OAAM,CAAC,CAAC,KAAKhC,KAAL,IAAc,CAAf,IAAoB6B,CAArB,IAA0BtG,KAA1B,IAAmC,KAAK0E,KAAL,IAAc,CAAjD,IAAsD2B,CAA5D;AACAK,QAAQ,KAAKjC,KAAL,GAAazE,KAAb,GAAqB,KAAK0E,KAA3B,IAAqC,CAA5C;AACAiC,QAAOD,QAAQ1G,SAAS,CAAjB,CAAP;;AAEA,KAAI+G,CAAJ,EAAOC,EAAP,EAAWC,EAAX,EAAeC,CAAf;AACA,KAAIX,IAAJ,EAAU;AACT,MAAIC,IAAJ,EAAU;AACT,UAAOE,OAAOC,IAAd,EAAoB;AACnBK,SAAKf,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAf,CAA8ByG;AAC9B,SAAKM,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB;AACvBE,UAAKhB,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAf,CAA8ByG;AAC9BS,SAAOF,KAAKC,EAAL,GAAU,CAAX,IAAiB,CAAlB,GAAuB,IAA5B;;AAEAD,UAAKf,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAf,CAA8ByG;AAC9BS,UAAQF,KAAKC,EAAL,GAAU,CAAX,IAAiB,CAAlB,GAAuB,MAA7B;;AAEAA,UAAKhB,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAf,CAA8ByG;AAC9BS,UAAQF,KAAKC,EAAL,GAAU,CAAX,IAAiB,EAAlB,GAAwB,QAA9B;;AAEAD,UAAKf,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAf,CAA8ByG;AAC9BS,UAAQF,KAAKC,EAAL,GAAU,CAAX,IAAiB,EAAlB,GAAwB,UAA9B;;AAEAL,QAAGF,MAAH,IAAaQ,CAAb;AACA;AACDR,YAAQN,QAAQ,CAAhB,CAAmBK,OAAOL,OAAK,CAAZ;AACnB;AACD,GApBD,MAqBK;AACJ,UAAOM,OAAOC,IAAd,EAAoB;AACnBK,SAAKf,GAAGQ,KAAH,CAAL;AACA,SAAKM,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB;AACvBE,UAAKhB,GAAGQ,KAAH,CAAL;AACAS,SAAOF,KAAKC,EAAL,GAAU,CAAX,IAAiB,CAAlB,GAAuB,IAA5B;;AAEAD,UAAKf,GAAGQ,KAAH,CAAL;AACAS,UAAQF,KAAKC,EAAL,GAAU,CAAX,IAAiB,CAAlB,GAAuB,MAA7B;;AAEAA,UAAKhB,GAAGQ,KAAH,CAAL;AACAS,UAAQF,KAAKC,EAAL,GAAU,CAAX,IAAiB,EAAlB,GAAwB,QAA9B;;AAEAD,UAAKf,GAAGQ,KAAH,CAAL;AACAS,UAAQF,KAAKC,EAAL,GAAU,CAAX,IAAiB,EAAlB,GAAwB,UAA9B;;AAEAL,QAAGF,MAAH,IAAaQ,CAAb;AACA;AACDR,YAAQN,QAAQ,CAAhB,CAAmBK,OAAOL,OAAK,CAAZ;AACnB;AACD;AACD,EA3CD,MA4CK;AACJ,MAAII,IAAJ,EAAU;AACT,UAAOE,OAAOC,IAAd,EAAoB;AACnB,SAAKI,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB;AACvBG,SAAOjB,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAV,GAA0B,CAA3B,IAAiC,CAAlC,GAAuC,IAA5C,CAAmDyG;AACnDS,UAAQjB,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAV,GAA0B,CAA3B,IAAiC,CAAlC,GAAuC,MAA7C,CAAsDyG;AACtDS,UAAQjB,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAV,GAA0B,CAA3B,IAAiC,EAAlC,GAAwC,QAA9C,CAAyDyG;AACzDS,UAAQjB,GAAGQ,GAAH,IAAUR,GAAGQ,MAAIzG,KAAP,CAAV,GAA0B,CAA3B,IAAiC,EAAlC,GAAwC,UAA9C,CAA2DyG;;AAE3DG,QAAGF,MAAH,IAAaQ,CAAb;AACA;AACDR,YAAQN,QAAQ,CAAhB,CAAmBK,OAAOL,IAAP;AACnB;AACD,GAZD,MAaK;AACJ,UAAOM,OAAOC,IAAd,EAAoB;AACnB,SAAKI,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB;AACvBG,SAAIjB,GAAGQ,GAAH,CAAJ,CAAaA;AACbS,UAAKjB,GAAGQ,GAAH,KAAW,CAAhB,CAAmBA;AACnBS,UAAKjB,GAAGQ,GAAH,KAAW,EAAhB,CAAoBA;AACpBS,UAAKjB,GAAGQ,GAAH,KAAW,EAAhB,CAAoBA;;AAEpBG,QAAGF,MAAH,IAAaQ,CAAb;AACA;AACDR,YAAQN,QAAQ,CAAhB,CAAmBK,OAAOL,IAAP;AACnB;AACD;AACD;;AAED;;AAEApG,SAAQ,KAAKkB,SAAb;AACAkF,QAAOpG,QAAQ,CAAf;;AAEAqG,KAAKN,UAAQ,CAAT,IAAe,CAAnB;AACAO,KAAKN,UAAQ,CAAT,IAAe,CAAnB;AACAO,QAAO,CAAER,UAAQ,CAAT,GAAc,CAAf,MAAsB,CAA7B;AACAS,QAAO,CAAER,UAAQ,CAAT,GAAc,CAAf,MAAsB,CAA7B;;AAEAS,OAAM,CAAC,CAAC,KAAKhC,KAAL,IAAc,CAAf,IAAoB6B,CAArB,IAA0BtG,KAA1B,IAAmC,KAAK0E,KAAL,IAAc,CAAjD,IAAsD2B,CAA5D;AACAK,QAAQ,KAAKjC,KAAL,GAAazE,KAAb,GAAqB,KAAK0E,KAA3B,IAAqC,CAA5C;AACAiC,QAAOD,QAAQ1G,SAAS,CAAjB,CAAP;;AAEA,KAAImH,GAAJ,EAASC,GAAT,EAAcC,EAAd,EACCC,GADD,EACMC,GADN,EACWC,EADX;AAEA,KAAIjB,IAAJ,EAAU;AACT,MAAIC,IAAJ,EAAU;AACT,UAAOE,OAAOC,IAAd,EAAoB;AACnBQ,UAAMjB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAjB;AACAsH,UAAMnB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAjB;AACAyG;AACA,SAAKM,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB;AACvBK,WAAMlB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAjB;AACAuH,WAAMpB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAjB,CAAiCyG;AACjCY,UAAQF,MAAMC,GAAN,GAAY,CAAb,IAAmB,CAApB,GAAyB,IAA/B;AACAI,UAAQF,MAAMC,GAAN,GAAY,CAAb,IAAmB,CAApB,GAAyB,IAA/B;;AAEAJ,WAAMjB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAjB;AACAsH,WAAMnB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAjB,CAAiCyG;AACjCY,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,CAApB,GAAyB,MAAhC;AACAI,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,CAApB,GAAyB,MAAhC;;AAEAH,WAAMlB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAjB;AACAuH,WAAMpB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAjB,CAAiCyG;AACjCY,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,EAApB,GAA0B,QAAjC;AACAI,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,EAApB,GAA0B,QAAjC;;AAEAJ,WAAMjB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAjB;AACAsH,WAAMnB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAjB,CAAiCyG;AACjCY,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,EAApB,GAA0B,UAAjC;AACAI,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,EAApB,GAA0B,UAAjC;;AAEAT,SAAIJ,IAAJ,IAAYW,EAAZ;AACAR,SAAIH,IAAJ,IAAYc,EAAZ;AACAd;AACA;AACDA,YAAQN,QAAQ,CAAhB,CAAmBK,OAAOL,OAAK,CAAZ;AACnB;AACD,GAhCD,MAiCK;AACJ,UAAOM,OAAOC,IAAd,EAAoB;AACnBQ,UAAMjB,IAAIO,GAAJ,CAAN;AACAa,UAAMnB,IAAIM,GAAJ,CAAN;AACAA;AACA,SAAKM,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB;AACvBK,WAAMlB,IAAIO,GAAJ,CAAN;AACAc,WAAMpB,IAAIM,KAAJ,CAAN;AACAY,UAAQF,MAAMC,GAAN,GAAY,CAAb,IAAmB,CAApB,GAAyB,IAA/B;AACAI,UAAQF,MAAMC,GAAN,GAAY,CAAb,IAAmB,CAApB,GAAyB,IAA/B;;AAEAJ,WAAMjB,IAAIO,GAAJ,CAAN;AACAa,WAAMnB,IAAIM,KAAJ,CAAN;AACAY,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,CAApB,GAAyB,MAAhC;AACAI,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,CAApB,GAAyB,MAAhC;;AAEAH,WAAMlB,IAAIO,GAAJ,CAAN;AACAc,WAAMpB,IAAIM,KAAJ,CAAN;AACAY,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,EAApB,GAA0B,QAAjC;AACAI,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,EAApB,GAA0B,QAAjC;;AAEAJ,WAAMjB,IAAIO,GAAJ,CAAN;AACAa,WAAMnB,IAAIM,KAAJ,CAAN;AACAY,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,EAApB,GAA0B,UAAjC;AACAI,WAASF,MAAMC,GAAN,GAAY,CAAb,IAAmB,EAApB,GAA0B,UAAjC;;AAEAT,SAAIJ,IAAJ,IAAYW,EAAZ;AACAR,SAAIH,IAAJ,IAAYc,EAAZ;AACAd;AACA;AACDA,YAAQN,QAAQ,CAAhB,CAAmBK,OAAOL,OAAK,CAAZ;AACnB;AACD;AACD,EAnED,MAoEK;AACJ,MAAII,IAAJ,EAAU;AACT,UAAOE,OAAOC,IAAd,EAAoB;AACnB,SAAKI,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB;AACvBM,UAAQnB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAX,GAA4B,CAA7B,IAAmC,CAApC,GAAyC,IAA/C;AACAwH,UAAQrB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAX,GAA4B,CAA7B,IAAmC,CAApC,GAAyC,IAA/C,CAAsDyG;;AAEtDY,WAASnB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAX,GAA4B,CAA7B,IAAmC,CAApC,GAAyC,MAAhD;AACAwH,WAASrB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAX,GAA4B,CAA7B,IAAmC,CAApC,GAAyC,MAAhD,CAAyDyG;;AAEzDY,WAASnB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAX,GAA4B,CAA7B,IAAmC,EAApC,GAA0C,QAAjD;AACAwH,WAASrB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAX,GAA4B,CAA7B,IAAmC,EAApC,GAA0C,QAAjD,CAA4DyG;;AAE5DY,WAASnB,IAAIO,GAAJ,IAAWP,IAAIO,MAAIzG,KAAR,CAAX,GAA4B,CAA7B,IAAmC,EAApC,GAA0C,UAAjD;AACAwH,WAASrB,IAAIM,GAAJ,IAAWN,IAAIM,MAAIzG,KAAR,CAAX,GAA4B,CAA7B,IAAmC,EAApC,GAA0C,UAAjD,CAA8DyG;;AAE9DK,SAAIJ,IAAJ,IAAYW,EAAZ;AACAR,SAAIH,IAAJ,IAAYc,EAAZ;AACAd;AACA;AACDA,YAAQN,QAAQ,CAAhB,CAAmBK,OAAOL,IAAP;AACnB;AACD,GArBD,MAsBK;AACJ,UAAOM,OAAOC,IAAd,EAAoB;AACnB,SAAKI,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB;AACvBM,UAAKnB,IAAIO,GAAJ,CAAL;AACAe,UAAKrB,IAAIM,GAAJ,CAAL,CAAeA;;AAEfY,WAAMnB,IAAIO,GAAJ,KAAY,CAAlB;AACAe,WAAMrB,IAAIM,GAAJ,KAAY,CAAlB,CAAqBA;;AAErBY,WAAMnB,IAAIO,GAAJ,KAAY,EAAlB;AACAe,WAAMrB,IAAIM,GAAJ,KAAY,EAAlB,CAAsBA;;AAEtBY,WAAMnB,IAAIO,GAAJ,KAAY,EAAlB;AACAe,WAAMrB,IAAIM,GAAJ,KAAY,EAAlB,CAAsBA;;AAEtBK,SAAIJ,IAAJ,IAAYW,EAAZ;AACAR,SAAIH,IAAJ,IAAYc,EAAZ;AACAd;AACA;AACDA,YAAQN,QAAQ,CAAhB,CAAmBK,OAAOL,IAAP;AACnB;AACD;AACD;AACD,CApOD;;AAuOA;;AAEArJ,MAAMqB,SAAN,CAAgBgG,YAAhB,GAA+B,CAA/B;AACArH,MAAMqB,SAAN,CAAgBiG,aAAhB,GAAgC,CAAhC;AACAtH,MAAMqB,SAAN,CAAgBkG,aAAhB,GAAgC,CAAhC;;AAEAvH,MAAMqB,SAAN,CAAgBJ,SAAhB,GAA4B,IAA5B;;AAEAjB,MAAMqB,SAAN,CAAgBqH,WAAhB,GAA8B,UAASF,KAAT,EAAgB;;AAE7C,KACCkC,IAAI,CADL;AAAA,KAECC,WAFD;;AAIA;AACA,KAAI,KAAK9C,eAAT,EAA0B;AACzB,MACC+C,SADD,EAECC,OAFD;;AAIA;;AAEA,MAAIrC,QAAQ,CAAZ,EAAe;AACdoC,eAAY,KAAKvD,YAAjB;AACAwD,aAAU,KAAKpI,WAAL,CAAiBzC,MAAM8K,qBAAvB,CAAV;AACA,GAHD,MAIK;AACJF,eAAapC,UAAU,CAAV,GAAc,KAAKlB,aAAnB,GAAmC,KAAKC,aAArD;AACAsD,aAAU,KAAKpI,WAAL,CAAiBzC,MAAM+K,uBAAvB,CAAV;AACA;;AAED;AACA,MAAIF,UAAU,CAAd,EAAiB;AAChB,OAAIG,eAAe,KAAKnK,IAAL,CAAU+B,IAAV,CAAeiI,OAAf,CAAnB;AACA,OAAI,CAACG,eAAgB,KAAMH,UAAU,CAAjC,MAA0C,CAA9C,EAAiD;AAChD,SAAK5J,SAAL,CAAe,CAAf,IAAoB2J,YAAYI,YAAhC;AACA,IAFD,MAGK;AACJ,SAAK/J,SAAL,CAAe,CAAf,IAAoB2J,aAAc,CAAC,CAAD,IAAMC,OAAP,GAAiBG,eAAa,CAA3C,CAApB;AACA;AACD,GARD,MASK;AACJ,QAAK/J,SAAL,CAAe,CAAf,IAAoB2J,SAApB;AACA;;AAED;AACA,MAAIpC,QAAQ,CAAZ,EAAe;AACd,QAAKnB,YAAL,GAAoB,KAAKpG,SAAL,CAAe,CAAf,CAApB;AACA,GAFD,MAGK,IAAIuH,UAAU,CAAd,EAAiB;AACrB,QAAKlB,aAAL,GAAqB,KAAKrG,SAAL,CAAe,CAAf,CAArB;AACA,GAFI,MAGA;AACJ,QAAKsG,aAAL,GAAqB,KAAKtG,SAAL,CAAe,CAAf,CAArB;AACA;;AAED;AACA,OAAKA,SAAL,CAAe,CAAf,MAAuB,IAAI,CAA3B;;AAEA0J,gBAAc,KAAKnH,gBAAnB;AACAkH,MAAI,CAAJ;AACA,EA9CD,MA+CK;AACJC,gBAAc,KAAKjH,mBAAnB;AACA;;AAED;AACA,KAAIuH,QAAQ,CAAZ;AACA,QAAO,IAAP,EAAa;AACZ,MACCC,MAAM,CADP;AAAA,MAECC,QAAQ,KAAK1I,WAAL,CAAiBzC,MAAMoL,SAAvB,CAFT;;AAIA,MAAKD,UAAU,MAAX,IAAuBT,IAAI,CAA3B,IAAkC,KAAK7J,IAAL,CAAU+B,IAAV,CAAe,CAAf,MAAsB,CAA5D,EAAgE;AAC/D;AACA;AACA;AACD,MAAIuI,UAAU,MAAd,EAAsB;AACrB;AACAD,SAAM,KAAKrK,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAN;AACAqI,WAAQ,KAAKpK,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAR;AACA,OAAIqI,UAAU,CAAd,EAAiB;AAChBA,YAAQ,KAAKpK,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAR;AACA,IAFD,MAGK,IAAIqI,UAAU,GAAd,EAAmB;AACvBA,YAAQ,KAAKpK,IAAL,CAAU+B,IAAV,CAAe,CAAf,IAAoB,GAA5B;AACA,IAFI,MAGA,IAAIqI,QAAQ,GAAZ,EAAiB;AACrBA,YAAQA,QAAQ,GAAhB;AACA;AACD,GAbD,MAcK;AACJC,SAAMC,SAAS,CAAf;AACAF,WAAQE,QAAQ,IAAhB;AACA,OAAI,KAAKtK,IAAL,CAAU+B,IAAV,CAAe,CAAf,CAAJ,EAAuB;AACtBqI,YAAQ,CAACA,KAAT;AACA;AACD;;AAEDP,OAAKQ,GAAL;AACA,MAAIG,cAAcrL,MAAMuD,OAAN,CAAcmH,CAAd,CAAlB;AACAA;;AAEA;AACAO,YAAU,CAAV;AACA,MAAI,CAAC,KAAKpD,eAAV,EAA2B;AAC1BoD,YAAUA,QAAQ,CAAR,GAAY,CAAC,CAAb,GAAiB,CAA3B;AACA;AACDA,UAASA,QAAQ,KAAKpE,cAAb,GAA8B8D,YAAYU,WAAZ,CAA/B,IAA4D,CAApE;AACA,MAAI,CAACJ,QAAQ,CAAT,MAAgB,CAApB,EAAuB;AACtBA,YAASA,QAAQ,CAAR,GAAY,CAAZ,GAAgB,CAAC,CAA1B;AACA;AACD,MAAIA,QAAQ,IAAZ,EAAkB;AACjBA,WAAQ,IAAR;AACA,GAFD,MAGK,IAAIA,QAAQ,CAAC,IAAb,EAAmB;AACvBA,WAAQ,CAAC,IAAT;AACA;;AAED;AACA,OAAKhK,SAAL,CAAeoK,WAAf,IAA8BJ,QAAQjL,MAAMsL,oBAAN,CAA2BD,WAA3B,CAAtC;AACA;;AAED;AACA,KACCE,SADD,EAECC,SAFD,EAGCnC,IAHD;;AAKA,KAAIb,QAAQ,CAAZ,EAAe;AACd+C,cAAY,KAAKlH,QAAjB;AACAgF,SAAO,KAAKrF,UAAL,GAAkB,CAAzB;AACAwH,cAAa,KAAK9D,KAAL,GAAa,KAAK1D,UAAlB,GAA+B,KAAK2D,KAArC,IAA+C,CAA3D;AACA,MAAI,CAACa,QAAQ,CAAT,MAAgB,CAApB,EAAuB;AACtBgD,gBAAa,CAAb;AACA;AACD,MAAI,CAAChD,QAAQ,CAAT,MAAgB,CAApB,EAAuB;AACtBgD,gBAAa,KAAKxH,UAAL,IAAmB,CAAhC;AACA;AACD,EAVD,MAWK;AACJuH,cAAa/C,UAAU,CAAX,GAAgB,KAAK5D,SAArB,GAAiC,KAAKF,SAAlD;AACA2E,SAAO,CAAC,KAAKrF,UAAL,IAAmB,CAApB,IAAyB,CAAhC;AACAwH,cAAY,CAAE,KAAK9D,KAAL,GAAa,KAAK1D,UAAnB,IAAkC,CAAnC,KAAyC,KAAK2D,KAAL,IAAc,CAAvD,CAAZ;AACA;;AAED,KAAI,KAAKE,eAAT,EAA0B;AACzB;AACA,MAAI6C,MAAM,CAAV,EAAa;AACZ1K,SAAMyL,sBAAN,CAA8B,KAAKxK,SAAL,CAAe,CAAf,IAAoB,GAArB,IAA6B,CAA1D,EAA6DsK,SAA7D,EAAwEC,SAAxE,EAAmFnC,IAAnF;AACA,QAAKpI,SAAL,CAAe,CAAf,IAAoB,CAApB;AACA,GAHD,MAIK;AACJjB,SAAM0L,IAAN,CAAW,KAAKzK,SAAhB;AACAjB,SAAM2L,sBAAN,CAA6B,KAAK1K,SAAlC,EAA6CsK,SAA7C,EAAwDC,SAAxD,EAAmEnC,IAAnE;AACAvJ,UAAO8L,IAAP,CAAY,KAAK3K,SAAjB,EAA4B,CAA5B;AACA;AACD,EAXD,MAYK;AACJ;AACA,MAAIyJ,MAAM,CAAV,EAAa;AACZ1K,SAAM6L,qBAAN,CAA6B,KAAK5K,SAAL,CAAe,CAAf,IAAoB,GAArB,IAA6B,CAAzD,EAA4DsK,SAA5D,EAAuEC,SAAvE,EAAkFnC,IAAlF;AACA,QAAKpI,SAAL,CAAe,CAAf,IAAoB,CAApB;AACA,GAHD,MAIK;AACJjB,SAAM0L,IAAN,CAAW,KAAKzK,SAAhB;AACAjB,SAAM8L,qBAAN,CAA4B,KAAK7K,SAAjC,EAA4CsK,SAA5C,EAAuDC,SAAvD,EAAkEnC,IAAlE;AACAvJ,UAAO8L,IAAP,CAAY,KAAK3K,SAAjB,EAA4B,CAA5B;AACA;AACD;;AAEDyJ,KAAI,CAAJ;AACA,CApKD;;AAsKA1K,MAAM2L,sBAAN,GAA+B,UAASnD,KAAT,EAAgBmB,IAAhB,EAAsBtH,KAAtB,EAA6BgH,IAA7B,EAAmC;AACjE,MAAK,IAAIqB,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,KAAK,CAAL,EAAQrI,SAASgH,OAAK,CAA9C,EAAiD;AAChDM,OAAKtH,QAAM,CAAX,IAAgBmG,MAAMkC,IAAE,CAAR,CAAhB;AACAf,OAAKtH,QAAM,CAAX,IAAgBmG,MAAMkC,IAAE,CAAR,CAAhB;AACAf,OAAKtH,QAAM,CAAX,IAAgBmG,MAAMkC,IAAE,CAAR,CAAhB;AACAf,OAAKtH,QAAM,CAAX,IAAgBmG,MAAMkC,IAAE,CAAR,CAAhB;AACAf,OAAKtH,QAAM,CAAX,IAAgBmG,MAAMkC,IAAE,CAAR,CAAhB;AACAf,OAAKtH,QAAM,CAAX,IAAgBmG,MAAMkC,IAAE,CAAR,CAAhB;AACAf,OAAKtH,QAAM,CAAX,IAAgBmG,MAAMkC,IAAE,CAAR,CAAhB;AACAf,OAAKtH,QAAM,CAAX,IAAgBmG,MAAMkC,IAAE,CAAR,CAAhB;AACA;AACD,CAXD;;AAaA1K,MAAM8L,qBAAN,GAA8B,UAAStD,KAAT,EAAgBmB,IAAhB,EAAsBtH,KAAtB,EAA6BgH,IAA7B,EAAmC;AAChE,MAAK,IAAIqB,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,KAAK,CAAL,EAAQrI,SAASgH,OAAK,CAA9C,EAAiD;AAChDM,OAAKtH,QAAM,CAAX,KAAiBmG,MAAMkC,IAAE,CAAR,CAAjB;AACAf,OAAKtH,QAAM,CAAX,KAAiBmG,MAAMkC,IAAE,CAAR,CAAjB;AACAf,OAAKtH,QAAM,CAAX,KAAiBmG,MAAMkC,IAAE,CAAR,CAAjB;AACAf,OAAKtH,QAAM,CAAX,KAAiBmG,MAAMkC,IAAE,CAAR,CAAjB;AACAf,OAAKtH,QAAM,CAAX,KAAiBmG,MAAMkC,IAAE,CAAR,CAAjB;AACAf,OAAKtH,QAAM,CAAX,KAAiBmG,MAAMkC,IAAE,CAAR,CAAjB;AACAf,OAAKtH,QAAM,CAAX,KAAiBmG,MAAMkC,IAAE,CAAR,CAAjB;AACAf,OAAKtH,QAAM,CAAX,KAAiBmG,MAAMkC,IAAE,CAAR,CAAjB;AACA;AACD,CAXD;;AAaA1K,MAAMyL,sBAAN,GAA+B,UAASM,KAAT,EAAgBpC,IAAhB,EAAsBtH,KAAtB,EAA6BgH,IAA7B,EAAmC;AACjE,MAAK,IAAIqB,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,KAAK,CAAL,EAAQrI,SAASgH,OAAK,CAA9C,EAAiD;AAChDM,OAAKtH,QAAM,CAAX,IAAgB0J,KAAhB;AACApC,OAAKtH,QAAM,CAAX,IAAgB0J,KAAhB;AACApC,OAAKtH,QAAM,CAAX,IAAgB0J,KAAhB;AACApC,OAAKtH,QAAM,CAAX,IAAgB0J,KAAhB;AACApC,OAAKtH,QAAM,CAAX,IAAgB0J,KAAhB;AACApC,OAAKtH,QAAM,CAAX,IAAgB0J,KAAhB;AACApC,OAAKtH,QAAM,CAAX,IAAgB0J,KAAhB;AACApC,OAAKtH,QAAM,CAAX,IAAgB0J,KAAhB;AACA;AACD,CAXD;;AAaA/L,MAAM6L,qBAAN,GAA8B,UAASE,KAAT,EAAgBpC,IAAhB,EAAsBtH,KAAtB,EAA6BgH,IAA7B,EAAmC;AAChE,MAAK,IAAIqB,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,KAAK,CAAL,EAAQrI,SAASgH,OAAK,CAA9C,EAAiD;AAChDM,OAAKtH,QAAM,CAAX,KAAiB0J,KAAjB;AACApC,OAAKtH,QAAM,CAAX,KAAiB0J,KAAjB;AACApC,OAAKtH,QAAM,CAAX,KAAiB0J,KAAjB;AACApC,OAAKtH,QAAM,CAAX,KAAiB0J,KAAjB;AACApC,OAAKtH,QAAM,CAAX,KAAiB0J,KAAjB;AACApC,OAAKtH,QAAM,CAAX,KAAiB0J,KAAjB;AACApC,OAAKtH,QAAM,CAAX,KAAiB0J,KAAjB;AACApC,OAAKtH,QAAM,CAAX,KAAiB0J,KAAjB;AACA;AACD,CAXD;;AAaA/L,MAAM0L,IAAN,GAAa,UAASlD,KAAT,EAAgB;AAC5B;AACA;;AAEA,KACCwD,EADD,EACKC,EADL,EACSC,EADT,EACaC,EADb,EACiBC,EADjB,EACqBC,IADrB,EAC2BC,IAD3B,EACiCC,EADjC,EAECC,EAFD,EAEKC,EAFL,EAESC,EAFT,EAEaC,EAFb,EAEiBC,EAFjB,EAEqBC,EAFrB,EAEyBC,EAFzB,EAE6BC,EAF7B,EAEiCC,EAFjC,EAEqCC,EAFrC;;AAIA;AACA,MAAK,IAAI3J,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AAC3B0I,OAAKxD,MAAM,IAAE,CAAF,GAAIlF,CAAV,CAAL;AACA2I,OAAKzD,MAAM,IAAE,CAAF,GAAIlF,CAAV,IAAekF,MAAM,IAAE,CAAF,GAAIlF,CAAV,CAApB;AACA4I,OAAK1D,MAAM,IAAE,CAAF,GAAIlF,CAAV,IAAekF,MAAM,IAAE,CAAF,GAAIlF,CAAV,CAApB;AACA+I,SAAO7D,MAAM,IAAE,CAAF,GAAIlF,CAAV,IAAekF,MAAM,IAAE,CAAF,GAAIlF,CAAV,CAAtB;AACAgJ,SAAO9D,MAAM,IAAE,CAAF,GAAIlF,CAAV,IAAekF,MAAM,IAAE,CAAF,GAAIlF,CAAV,CAAtB;AACA6I,OAAK3D,MAAM,IAAE,CAAF,GAAIlF,CAAV,IAAekF,MAAM,IAAE,CAAF,GAAIlF,CAAV,CAApB;AACA8I,OAAKC,OAAOC,IAAZ;AACAC,OAAK/D,MAAM,IAAE,CAAF,GAAIlF,CAAV,CAAL;AACAsJ,OAAK,CAAET,KAAG,GAAH,GAASD,KAAG,GAAZ,GAAkB,GAAnB,IAA2B,CAA5B,IAAiCE,EAAtC;AACAI,OAAKI,MAAO,CAACP,OAAOC,IAAR,IAAc,GAAd,GAAoB,GAArB,IAA6B,CAAnC,CAAL;AACAG,OAAKF,KAAKP,EAAV;AACAU,OAAK,CAAE,CAAClE,MAAM,IAAE,CAAF,GAAIlF,CAAV,IAAekF,MAAM,IAAE,CAAF,GAAIlF,CAAV,CAAhB,IAA8B,GAA9B,GAAoC,GAArC,IAA6C,CAA9C,IAAmD2I,EAAxD;AACAU,OAAKJ,KAAKP,EAAV;AACAa,OAAKJ,KAAKC,EAAV;AACAI,OAAKH,KAAKV,EAAV;AACAc,OAAKN,KAAKC,EAAV;AACAM,OAAKL,KAAKV,EAAV;AACAgB,OAAK,CAACT,EAAD,IAAQN,KAAG,GAAH,GAASC,KAAG,GAAZ,GAAkB,GAAnB,IAA2B,CAAlC,CAAL;AACA3D,QAAM,IAAE,CAAF,GAAIlF,CAAV,IAAe8I,KAAKU,EAApB;AACAtE,QAAM,IAAE,CAAF,GAAIlF,CAAV,IAAesJ,KAAKC,EAApB;AACArE,QAAM,IAAE,CAAF,GAAIlF,CAAV,IAAeyJ,KAAKP,EAApB;AACAhE,QAAM,IAAE,CAAF,GAAIlF,CAAV,IAAe0J,KAAKC,EAApB;AACAzE,QAAM,IAAE,CAAF,GAAIlF,CAAV,IAAe0J,KAAKC,EAApB;AACAzE,QAAM,IAAE,CAAF,GAAIlF,CAAV,IAAekJ,KAAKO,EAApB;AACAvE,QAAM,IAAE,CAAF,GAAIlF,CAAV,IAAeuJ,KAAKD,EAApB;AACApE,QAAM,IAAE,CAAF,GAAIlF,CAAV,IAAewJ,KAAKV,EAApB;AACA;;AAED;AACA,MAAK,IAAI9I,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,KAAK,CAA7B,EAAgC;AAC/B0I,OAAKxD,MAAM,IAAElF,CAAR,CAAL;AACA2I,OAAKzD,MAAM,IAAElF,CAAR,IAAakF,MAAM,IAAElF,CAAR,CAAlB;AACA4I,OAAK1D,MAAM,IAAElF,CAAR,IAAakF,MAAM,IAAElF,CAAR,CAAlB;AACA+I,SAAO7D,MAAM,IAAElF,CAAR,IAAakF,MAAM,IAAElF,CAAR,CAApB;AACAgJ,SAAO9D,MAAM,IAAElF,CAAR,IAAakF,MAAM,IAAElF,CAAR,CAApB;AACA6I,OAAK3D,MAAM,IAAElF,CAAR,IAAakF,MAAM,IAAElF,CAAR,CAAlB;AACA8I,OAAKC,OAAOC,IAAZ;AACAC,OAAK/D,MAAM,IAAElF,CAAR,CAAL;AACAsJ,OAAK,CAAET,KAAG,GAAH,GAASD,KAAG,GAAZ,GAAkB,GAAnB,IAA2B,CAA5B,IAAiCE,EAAtC;AACAI,OAAKI,MAAO,CAACP,OAAOC,IAAR,IAAc,GAAd,GAAoB,GAArB,IAA6B,CAAnC,CAAL;AACAG,OAAKF,KAAKP,EAAV;AACAU,OAAK,CAAE,CAAClE,MAAM,IAAElF,CAAR,IAAakF,MAAM,IAAElF,CAAR,CAAd,IAA0B,GAA1B,GAAgC,GAAjC,IAAyC,CAA1C,IAA+C2I,EAApD;AACAU,OAAKJ,KAAKP,EAAV;AACAa,OAAKJ,KAAKC,EAAV;AACAI,OAAKH,KAAKV,EAAV;AACAc,OAAKN,KAAKC,EAAV;AACAM,OAAKL,KAAKV,EAAV;AACAgB,OAAK,CAACT,EAAD,IAAQN,KAAG,GAAH,GAASC,KAAG,GAAZ,GAAkB,GAAnB,IAA2B,CAAlC,CAAL;AACA3D,QAAM,IAAElF,CAAR,IAAc8I,KAAKU,EAAL,GAAU,GAAX,IAAmB,CAAhC;AACAtE,QAAM,IAAElF,CAAR,IAAcsJ,KAAKC,EAAL,GAAU,GAAX,IAAmB,CAAhC;AACArE,QAAM,IAAElF,CAAR,IAAcyJ,KAAKP,EAAL,GAAU,GAAX,IAAmB,CAAhC;AACAhE,QAAM,IAAElF,CAAR,IAAc0J,KAAKC,EAAL,GAAU,GAAX,IAAmB,CAAhC;AACAzE,QAAM,IAAElF,CAAR,IAAc0J,KAAKC,EAAL,GAAU,GAAX,IAAmB,CAAhC;AACAzE,QAAM,IAAElF,CAAR,IAAckJ,KAAKO,EAAL,GAAU,GAAX,IAAmB,CAAhC;AACAvE,QAAM,IAAElF,CAAR,IAAcuJ,KAAKD,EAAL,GAAU,GAAX,IAAmB,CAAhC;AACApE,QAAM,IAAElF,CAAR,IAAcwJ,KAAKV,EAAL,GAAU,GAAX,IAAmB,CAAhC;AACA;AACD,CAnED;;AAsEA;;AAEApM,MAAMgD,YAAN,GAAqB,CACpB,KADoB,EACb,MADa,EACL,MADK,EACG,MADH,EACW,MADX,EACmB,MADnB,EAC2B,MAD3B,EACmC,MADnC,EAEpB,MAFoB,EAEZ,KAFY,EAEL,KAFK,EAEE,KAFF,EAES,KAFT,EAEgB,KAFhB,EAEuB,KAFvB,EAE8B,KAF9B,CAArB;;AAKAhD,MAAMuD,OAAN,GAAgB,IAAIxC,UAAJ,CAAe,CAC7B,CAD6B,EACzB,CADyB,EACrB,CADqB,EAClB,EADkB,EACb,CADa,EACT,CADS,EACL,CADK,EACF,EADE,EAE9B,EAF8B,EAE1B,EAF0B,EAEtB,EAFsB,EAElB,EAFkB,EAEd,EAFc,EAEV,EAFU,EAEL,CAFK,EAED,CAFC,EAG9B,EAH8B,EAG1B,EAH0B,EAGtB,EAHsB,EAGlB,EAHkB,EAGd,EAHc,EAGV,EAHU,EAGN,EAHM,EAGF,EAHE,EAI9B,EAJ8B,EAI1B,EAJ0B,EAItB,EAJsB,EAIjB,CAJiB,EAIb,CAJa,EAIV,EAJU,EAIN,EAJM,EAIF,EAJE,EAK9B,EAL8B,EAK1B,EAL0B,EAKtB,EALsB,EAKlB,EALkB,EAKd,EALc,EAKV,EALU,EAKN,EALM,EAKF,EALE,EAM9B,EAN8B,EAM1B,EAN0B,EAMtB,EANsB,EAMlB,EANkB,EAMd,EANc,EAMV,EANU,EAMN,EANM,EAMF,EANE,EAO9B,EAP8B,EAO1B,EAP0B,EAOtB,EAPsB,EAOlB,EAPkB,EAOd,EAPc,EAOV,EAPU,EAON,EAPM,EAOF,EAPE,EAQ9B,EAR8B,EAQ1B,EAR0B,EAQtB,EARsB,EAQlB,EARkB,EAQd,EARc,EAQV,EARU,EAQN,EARM,EAQF,EARE,CAAf,CAAhB;;AAWAf,MAAM2D,0BAAN,GAAmC,IAAI5C,UAAJ,CAAe,CAChD,CADgD,EAC7C,EAD6C,EACzC,EADyC,EACrC,EADqC,EACjC,EADiC,EAC7B,EAD6B,EACzB,EADyB,EACrB,EADqB,EAEjD,EAFiD,EAE7C,EAF6C,EAEzC,EAFyC,EAErC,EAFqC,EAEjC,EAFiC,EAE7B,EAF6B,EAEzB,EAFyB,EAErB,EAFqB,EAGjD,EAHiD,EAG7C,EAH6C,EAGzC,EAHyC,EAGrC,EAHqC,EAGjC,EAHiC,EAG7B,EAH6B,EAGzB,EAHyB,EAGrB,EAHqB,EAIjD,EAJiD,EAI7C,EAJ6C,EAIzC,EAJyC,EAIrC,EAJqC,EAIjC,EAJiC,EAI7B,EAJ6B,EAIzB,EAJyB,EAIrB,EAJqB,EAKjD,EALiD,EAK7C,EAL6C,EAKzC,EALyC,EAKrC,EALqC,EAKjC,EALiC,EAK7B,EAL6B,EAKzB,EALyB,EAKrB,EALqB,EAMjD,EANiD,EAM7C,EAN6C,EAMzC,EANyC,EAMrC,EANqC,EAMjC,EANiC,EAM7B,EAN6B,EAMzB,EANyB,EAMrB,EANqB,EAOjD,EAPiD,EAO7C,EAP6C,EAOzC,EAPyC,EAOrC,EAPqC,EAOjC,EAPiC,EAO7B,EAP6B,EAOzB,EAPyB,EAOrB,EAPqB,EAQjD,EARiD,EAQ7C,EAR6C,EAQzC,EARyC,EAQrC,EARqC,EAQjC,EARiC,EAQ7B,EAR6B,EAQzB,EARyB,EAQrB,EARqB,CAAf,CAAnC;;AAWAf,MAAM4D,8BAAN,GAAuC,IAAI7C,UAAJ,CAAe,CACrD,EADqD,EACjD,EADiD,EAC7C,EAD6C,EACzC,EADyC,EACrC,EADqC,EACjC,EADiC,EAC7B,EAD6B,EACzB,EADyB,EAErD,EAFqD,EAEjD,EAFiD,EAE7C,EAF6C,EAEzC,EAFyC,EAErC,EAFqC,EAEjC,EAFiC,EAE7B,EAF6B,EAEzB,EAFyB,EAGrD,EAHqD,EAGjD,EAHiD,EAG7C,EAH6C,EAGzC,EAHyC,EAGrC,EAHqC,EAGjC,EAHiC,EAG7B,EAH6B,EAGzB,EAHyB,EAIrD,EAJqD,EAIjD,EAJiD,EAI7C,EAJ6C,EAIzC,EAJyC,EAIrC,EAJqC,EAIjC,EAJiC,EAI7B,EAJ6B,EAIzB,EAJyB,EAKrD,EALqD,EAKjD,EALiD,EAK7C,EAL6C,EAKzC,EALyC,EAKrC,EALqC,EAKjC,EALiC,EAK7B,EAL6B,EAKzB,EALyB,EAMrD,EANqD,EAMjD,EANiD,EAM7C,EAN6C,EAMzC,EANyC,EAMrC,EANqC,EAMjC,EANiC,EAM7B,EAN6B,EAMzB,EANyB,EAOrD,EAPqD,EAOjD,EAPiD,EAO7C,EAP6C,EAOzC,EAPyC,EAOrC,EAPqC,EAOjC,EAPiC,EAO7B,EAP6B,EAOzB,EAPyB,EAQrD,EARqD,EAQjD,EARiD,EAQ7C,EAR6C,EAQzC,EARyC,EAQrC,EARqC,EAQjC,EARiC,EAQ7B,EAR6B,EAQzB,EARyB,CAAf,CAAvC;;AAWAf,MAAMsL,oBAAN,GAA6B,IAAIvK,UAAJ,CAAe,CAC3C,EAD2C,EACvC,EADuC,EACnC,EADmC,EAC/B,EAD+B,EAC3B,EAD2B,EACvB,EADuB,EACnB,EADmB,EACd,CADc,EAE3C,EAF2C,EAEvC,EAFuC,EAEnC,EAFmC,EAE/B,EAF+B,EAE3B,EAF2B,EAEvB,EAFuB,EAEnB,EAFmB,EAEf,EAFe,EAG3C,EAH2C,EAGvC,EAHuC,EAGnC,EAHmC,EAG/B,EAH+B,EAG3B,EAH2B,EAGvB,EAHuB,EAGnB,EAHmB,EAGf,EAHe,EAI3C,EAJ2C,EAIvC,EAJuC,EAInC,EAJmC,EAI/B,EAJ+B,EAI3B,EAJ2B,EAIvB,EAJuB,EAInB,EAJmB,EAIf,EAJe,EAK3C,EAL2C,EAKvC,EALuC,EAKnC,EALmC,EAK/B,EAL+B,EAK3B,EAL2B,EAKvB,EALuB,EAKnB,EALmB,EAKd,CALc,EAM3C,EAN2C,EAMvC,EANuC,EAMnC,EANmC,EAM/B,EAN+B,EAM3B,EAN2B,EAMvB,EANuB,EAMnB,EANmB,EAMd,CANc,EAO3C,EAP2C,EAOvC,EAPuC,EAOnC,EAPmC,EAO/B,EAP+B,EAO3B,EAP2B,EAOvB,EAPuB,EAOlB,CAPkB,EAOd,CAPc,EAQ1C,CAR0C,EAQvC,EARuC,EAQnC,EARmC,EAQ/B,EAR+B,EAQ1B,CAR0B,EAQtB,CARsB,EAQlB,CARkB,EAQd,CARc,CAAf,CAA7B;;AAWA;;AAEA;AACA;;AAEAf,MAAMiI,4BAAN,GAAqC,IAAIiF,UAAJ,CAAe,CAClD,IAAE,CADgD,EAC5C,IAAE,CAD0C,EACtC,CADsC,EACnC;AACf,IAAE,CAFgD,EAE5C,IAAE,CAF0C,EAEtC,CAFsC,EAEnC;AACb,CAHgD,EAG1C,CAH0C,EAGtC,CAHsC,EAGnC;AACf,IAAE,CAJgD,EAI5C,IAAE,CAJ0C,EAItC,CAJsC,EAInC;AACf,IAAE,CALgD,EAK5C,IAAE,CAL0C,EAKtC,CALsC,EAKnC;AACf,IAAE,CANgD,EAM7C,KAAG,CAN0C,EAMtC,CANsC,EAMnC;AAChB,KAAG,CAPgD,EAO7C,KAAG,CAP0C,EAOtC,CAPsC,EAOnC;AACb,CARgD,EAQ1C,CAR0C,EAQtC,CARsC,EAQnC;AACb,CATgD,EAS1C,CAT0C,EAStC,CATsC,EASnC;AAChB,KAAG,CAVgD,EAU7C,KAAG,CAV0C,EAUtC,CAVsC,EAUnC;AAChB,KAAG,CAXgD,EAW7C,KAAG,CAX0C,EAWtC,CAXsC,EAWnC;AACb,CAZgD,EAY1C,CAZ0C,EAYtC,CAZsC,EAYnC;AACb,CAbgD,EAa1C,CAb0C,EAatC,CAbsC,EAanC;AAChB,KAAG,CAdgD,EAc7C,KAAG,CAd0C,EActC,CAdsC,EAcnC;AAChB,KAAG,CAfgD,EAe7C,KAAG,CAf0C,EAetC,CAfsC,EAenC;AACb,CAhBgD,EAgB1C,CAhB0C,EAgBtC,CAhBsC,EAgBnC;AACb,CAjBgD,EAiB1C,CAjB0C,EAiBtC,CAjBsC,EAiBnC;AAChB,KAAG,CAlBgD,EAkB7C,KAAG,CAlB0C,EAkBtC,CAlBsC,EAkBnC;AAChB,KAAG,CAnBgD,EAmB7C,KAAG,CAnB0C,EAmBtC,CAnBsC,EAmBnC;AAChB,KAAG,CApBgD,EAoB7C,KAAG,CApB0C,EAoBtC,CApBsC,EAoBnC;AAChB,KAAG,CArBgD,EAqB7C,KAAG,CArB0C,EAqBtC,CArBsC,EAqBnC;AACd,CAAC,CAtBgD,EAsB7C,KAAG,CAtB0C,EAsBtC,CAtBsC,EAsBnC;AACd,CAAC,CAvBgD,EAuB7C,KAAG,CAvB0C,EAuBtC,CAvBsC,EAuBnC;AAChB,KAAG,CAxBgD,EAwB7C,KAAG,CAxB0C,EAwBtC,CAxBsC,EAwBnC;AAChB,KAAG,CAzBgD,EAyB7C,KAAG,CAzB0C,EAyBtC,CAzBsC,EAyBnC;AAChB,KAAG,CA1BgD,EA0B7C,KAAG,CA1B0C,EA0BtC,CA1BsC,EA0BnC;AAChB,KAAG,CA3BgD,EA2B7C,KAAG,CA3B0C,EA2BtC,CA3BsC,EA2BnC;AACb,CA5BgD,EA4B1C,CA5B0C,EA4BtC,CA5BsC,EA4BnC;AACb,CA7BgD,EA6B1C,CA7B0C,EA6BtC,CA7BsC,EA6BnC;AAChB,KAAG,CA9BgD,EA8B7C,KAAG,CA9B0C,EA8BtC,CA9BsC,EA8BnC;AAChB,KAAG,CA/BgD,EA+B7C,KAAG,CA/B0C,EA+BtC,CA/BsC,EA+BnC;AAChB,KAAG,CAhCgD,EAgC7C,KAAG,CAhC0C,EAgCtC,CAhCsC,EAgCnC;AAChB,KAAG,CAjCgD,EAiC7C,KAAG,CAjC0C,EAiCtC,CAjCsC,EAiCnC;AACb,CAlCgD,EAkC1C,CAlC0C,EAkCvC,EAlCuC,EAkCnC;AACb,CAnCgD,EAmC1C,CAnC0C,EAmCvC,EAnCuC,EAmCnC;AACb,CApCgD,EAoC1C,CApC0C,EAoCvC,EApCuC,EAoCnC;AACb,CArCgD,EAqC1C,CArC0C,EAqCvC,EArCuC,EAqCnC;AACb,CAtCgD,EAsC1C,CAtC0C,EAsCvC,EAtCuC,EAsCnC;AACb,CAvCgD,EAuC1C,CAvC0C,EAuCvC,EAvCuC,EAuCnC;AAChB,KAAG,CAxCgD,EAwC3C,CAAC,CAxC0C,EAwCtC,CAxCsC,EAwCnC;AACd,CAAC,CAzCgD,EAyC7C,KAAG,CAzC0C,EAyCtC,CAzCsC,EAyCnC;AAChB,KAAG,CA1CgD,EA0C7C,KAAG,CA1C0C,EA0CtC,CA1CsC,EA0CnC;AAChB,KAAG,CA3CgD,EA2C7C,KAAG,CA3C0C,EA2CtC,CA3CsC,EA2CnC;AAChB,KAAG,CA5CgD,EA4C7C,KAAG,CA5C0C,EA4CtC,CA5CsC,EA4CnC;AAChB,KAAG,CA7CgD,EA6C7C,KAAG,CA7C0C,EA6CtC,CA7CsC,EA6CnC;AAChB,KAAG,CA9CgD,EA8C7C,KAAG,CA9C0C,EA8CtC,CA9CsC,EA8CnC;AAChB,KAAG,CA/CgD,EA+C7C,KAAG,CA/C0C,EA+CtC,CA/CsC,EA+CnC;AAChB,KAAG,CAhDgD,EAgD3C,CAAC,CAhD0C,EAgDtC,CAhDsC,EAgDnC;AACd,CAAC,CAjDgD,EAiD7C,KAAG,CAjD0C,EAiDtC,CAjDsC,EAiDnC;AAChB,KAAG,CAlDgD,EAkD7C,KAAG,CAlD0C,EAkDtC,CAlDsC,EAkDnC;AAChB,KAAG,CAnDgD,EAmD7C,KAAG,CAnD0C,EAmDtC,CAnDsC,EAmDnC;AAChB,KAAG,CApDgD,EAoD7C,KAAG,CApD0C,EAoDtC,CApDsC,EAoDnC;AAChB,KAAG,CArDgD,EAqD7C,KAAG,CArD0C,EAqDtC,CArDsC,EAqDnC;AAChB,KAAG,CAtDgD,EAsD7C,KAAG,CAtD0C,EAsDtC,CAtDsC,EAsDnC;AAChB,KAAG,CAvDgD,EAuD7C,KAAG,CAvD0C,EAuDtC,CAvDsC,EAuDnC;AACb,CAxDgD,EAwD1C,CAxD0C,EAwDvC,EAxDuC,EAwDnC;AACb,CAzDgD,EAyD1C,CAzD0C,EAyDvC,EAzDuC,EAyDnC;AACb,CA1DgD,EA0D1C,CA1D0C,EA0DvC,EA1DuC,EA0DnC;AACb,CA3DgD,EA2D1C,CA3D0C,EA2DvC,EA3DuC,EA2DnC;AACb,CA5DgD,EA4D1C,CA5D0C,EA4DvC,EA5DuC,EA4DnC;AACb,CA7DgD,EA6D1C,CA7D0C,EA6DvC,EA7DuC,EA6DnC;AACb,CA9DgD,EA8D1C,CA9D0C,EA8DvC,EA9DuC,EA8DnC;AACb,CA/DgD,EA+D1C,CA/D0C,EA+DvC,EA/DuC,EA+DnC;AACb,CAhEgD,EAgE1C,CAhE0C,EAgEvC,EAhEuC,EAgEnC;AACb,CAjEgD,EAiE1C,CAjE0C,EAiEvC,EAjEuC,EAiEnC;AACb,CAlEgD,EAkE1C,CAlE0C,EAkEvC,EAlEuC,EAkEnC;AACb,CAnEgD,EAmE1C,CAnE0C,EAmEvC,EAnEuC,EAmEnC;AACb,CApEgD,EAoE1C,CApE0C,EAoEvC,EApEuC,EAoEnC;AACb,CArEgD,EAqE1C,CArE0C,EAqEvC,EArEuC,EAqEnC;AACb,CAtEgD,EAsE1C,CAtE0C,EAsEvC,EAtEuC,EAsEnC;AACb,CAvEgD,EAuE1C,CAvE0C,EAuEvC,EAvEuC,EAuEnC;AACb,CAxEgD,EAwE1C,CAxE0C,EAwEvC,EAxEuC,EAwEnC;AACb,CAzEgD,EAyE1C,CAzE0C,EAyEvC,EAzEuC,EAyEnC;AACb,CA1EgD,EA0E1C,CA1E0C,EA0EvC,EA1EuC,EA0EnC;AACb,CA3EgD,EA2E1C,CA3E0C,EA2EvC,EA3EuC,CA2EnC;AA3EmC,CAAf,CAArC;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAlN,MAAMmN,qBAAN,GAA8B,IAAIC,SAAJ,CAAc,CAC1C,IAAE,CADwC,EACpC,IAAE,CADkC,EAC3B,CAD2B,EACxB;AACjB,CAAC,CAFwC,EAEpC,IAAE,CAFkC,EAE3B,CAF2B,EAExB;AAChB,CAHwC,EAGlC,CAHkC,EAG9B,IAH8B,EAGxB;AAChB,CAJwC,EAIlC,CAJkC,EAI9B,IAJ8B,CAIxB;AAJwB,CAAd,CAA9B;;AAOApN,MAAMqN,0BAAN,GAAmC,IAAID,SAAJ,CAAc,CAC/C,IAAE,CAD6C,EACzC,IAAE,CADuC,EAChC,CADgC,EAC7B;AAClB,IAAE,CAF6C,EAEzC,IAAE,CAFuC,EAEhC,CAFgC,EAE7B;AAChB,CAH6C,EAGvC,CAHuC,EAGnC,IAHmC,EAG7B;AAClB,IAAE,CAJ6C,EAIzC,IAAE,CAJuC,EAIhC,CAJgC,EAI7B;AAChB,CAL6C,EAKvC,CALuC,EAKnC,IALmC,EAK7B;AAClB,IAAE,CAN6C,EAMzC,IAAE,CANuC,EAMhC,CANgC,EAM7B;AAChB,CAP6C,EAOvC,CAPuC,EAOnC,IAPmC,EAO7B;AAClB,IAAE,CAR6C,EAQ1C,KAAG,CARuC,EAQhC,CARgC,EAQ7B;AACnB,KAAG,CAT6C,EAS1C,KAAG,CATuC,EAShC,CATgC,EAS7B;AACjB,CAAC,CAV6C,EAU1C,KAAG,CAVuC,EAUhC,CAVgC,EAU7B;AAChB,CAX6C,EAWvC,CAXuC,EAWnC,IAXmC,EAW7B;AAChB,CAZ6C,EAYvC,CAZuC,EAYnC,IAZmC,EAY7B;AAChB,CAb6C,EAavC,CAbuC,EAanC,IAbmC,EAa7B;AAChB,CAd6C,EAcvC,CAduC,EAcnC,IAdmC,CAc7B;AAd6B,CAAd,CAAnC;;AAiBApN,MAAMsN,iBAAN,GAA0B,IAAIF,SAAJ,CAAc,CACtC,IAAE,CADoC,EAChC,IAAE,CAD8B,EACvB,CADuB,EACnB;AACnB,IAAE,CAFoC,EAEhC,IAAE,CAF8B,EAEvB,CAFuB,EAEnB;AACnB,IAAE,CAHoC,EAGhC,IAAE,CAH8B,EAGvB,CAHuB,EAGnB;AACnB,IAAE,CAJoC,EAIhC,IAAE,CAJ8B,EAIvB,CAJuB,EAInB;AACjB,CALoC,EAK9B,CAL8B,EAK1B,IAL0B,EAKnB;AACnB,IAAE,CANoC,EAMjC,KAAG,CAN8B,EAMvB,CANuB,EAMnB;AACjB,CAPoC,EAO9B,CAP8B,EAO1B,IAP0B,EAOnB;AACpB,KAAG,CARoC,EAQjC,KAAG,CAR8B,EAQvB,CARuB,EAQnB;AACpB,KAAG,CAToC,EASjC,KAAG,CAT8B,EASvB,CATuB,EASnB;AACjB,CAVoC,EAU9B,CAV8B,EAU1B,IAV0B,EAUnB;AACjB,CAXoC,EAW9B,CAX8B,EAW1B,IAX0B,EAWnB;AACpB,KAAG,CAZoC,EAYjC,KAAG,CAZ8B,EAYvB,CAZuB,EAYnB;AACpB,KAAG,CAboC,EAajC,KAAG,CAb8B,EAavB,CAbuB,EAanB;AACjB,CAdoC,EAc9B,CAd8B,EAc1B,IAd0B,EAcnB;AACjB,CAfoC,EAe9B,CAf8B,EAe1B,IAf0B,EAenB;AAClB,CAAC,CAhBoC,EAgBjC,KAAG,CAhB8B,EAgBvB,CAhBuB,EAgBnB;AACjB,CAjBoC,EAiB9B,CAjB8B,EAiB1B,IAjB0B,EAiBnB;AACpB,KAAG,CAlBoC,EAkBjC,KAAG,CAlB8B,EAkBvB,CAlBuB,EAkBnB;AACjB,CAnBoC,EAmB9B,CAnB8B,EAmB1B,IAnB0B,EAmBnB;AACjB,CApBoC,EAoB9B,CApB8B,EAoB1B,IApB0B,EAoBnB;AACjB,CArBoC,EAqB9B,CArB8B,EAqB1B,IArB0B,EAqBnB;AACjB,CAtBoC,EAsB9B,CAtB8B,EAsB1B,IAtB0B,CAsBnB;AAtBmB,CAAd,CAA1B;;AAyBApN,MAAMoI,eAAN,GAAwB,CACvB,IADuB,EAEvBpI,MAAMmN,qBAFiB,EAGvBnN,MAAMqN,0BAHiB,EAIvBrN,MAAMsN,iBAJiB,CAAxB;;AAOAtN,MAAMuI,kBAAN,GAA2B,IAAI2E,UAAJ,CAAe,CACvC,IAAE,CADqC,EAChC,IAAE,CAD8B,EACzB,CADyB,EACrB;AAClB,IAAE,CAFqC,EAEhC,IAAE,CAF8B,EAEzB,CAFyB,EAErB;AAClB,IAAE,CAHqC,EAGhC,IAAE,CAH8B,EAGzB,CAHyB,EAGrB;AAClB,IAAE,CAJqC,EAIjC,KAAG,CAJ8B,EAIzB,CAJyB,EAIrB;AACnB,KAAG,CALqC,EAKjC,KAAG,CAL8B,EAKzB,CALyB,EAKrB;AAClB,IAAE,CANqC,EAMhC,IAAE,CAN8B,EAMzB,CANyB,EAMrB;AACnB,KAAG,CAPqC,EAOjC,KAAG,CAP8B,EAOzB,CAPyB,EAOrB;AACnB,KAAG,CARqC,EAQjC,KAAG,CAR8B,EAQzB,CARyB,EAQrB;AACnB,KAAG,CATqC,EASjC,KAAG,CAT8B,EASzB,CATyB,EASrB;AACnB,KAAG,CAVqC,EAUjC,KAAG,CAV8B,EAUzB,CAVyB,EAUrB;AACnB,KAAG,CAXqC,EAWjC,KAAG,CAX8B,EAWzB,CAXyB,EAWrB;AACnB,KAAG,CAZqC,EAYjC,KAAG,CAZ8B,EAYzB,CAZyB,EAYrB;AACnB,KAAG,CAbqC,EAajC,KAAG,CAb8B,EAazB,CAbyB,EAarB;AACnB,KAAG,CAdqC,EAcjC,KAAG,CAd8B,EAczB,CAdyB,EAcrB;AAChB,CAfqC,EAe9B,CAf8B,EAe1B,EAf0B,EAerB;AACnB,KAAG,CAhBqC,EAgBjC,KAAG,CAhB8B,EAgBzB,CAhByB,EAgBrB;AACnB,KAAG,CAjBqC,EAiBjC,KAAG,CAjB8B,EAiBzB,CAjByB,EAiBrB;AACnB,KAAG,CAlBqC,EAkBjC,KAAG,CAlB8B,EAkBzB,CAlByB,EAkBrB;AACnB,KAAG,CAnBqC,EAmBjC,KAAG,CAnB8B,EAmBzB,CAnByB,EAmBrB;AACnB,KAAG,CApBqC,EAoBjC,KAAG,CApB8B,EAoBzB,CApByB,EAoBrB;AACnB,KAAG,CArBqC,EAqBjC,KAAG,CArB8B,EAqBzB,CArByB,EAqBrB;AAChB,CAtBqC,EAsB9B,CAtB8B,EAsB1B,EAtB0B,EAsBrB;AACnB,KAAG,CAvBqC,EAuBjC,KAAG,CAvB8B,EAuBzB,CAvByB,EAuBrB;AACnB,KAAG,CAxBqC,EAwBjC,KAAG,CAxB8B,EAwBzB,CAxByB,EAwBrB;AACnB,KAAG,CAzBqC,EAyBjC,KAAG,CAzB8B,EAyBzB,CAzByB,EAyBrB;AAChB,CA1BqC,EA0B9B,CA1B8B,EA0BzB,CA1ByB,EA0BrB;AACnB,KAAG,CA3BqC,EA2BjC,KAAG,CA3B8B,EA2BzB,CA3ByB,EA2BrB;AAChB,CA5BqC,EA4B9B,CA5B8B,EA4BzB,CA5ByB,EA4BrB;AAChB,CA7BqC,EA6B9B,CA7B8B,EA6B1B,EA7B0B,EA6BrB;AAChB,CA9BqC,EA8B9B,CA9B8B,EA8B1B,EA9B0B,EA8BrB;AACnB,KAAG,CA/BqC,EA+BjC,KAAG,CA/B8B,EA+BzB,CA/ByB,EA+BrB;AAChB,CAhCqC,EAgC9B,CAhC8B,EAgC1B,EAhC0B,EAgCrB;AAChB,CAjCqC,EAiC9B,CAjC8B,EAiC1B,EAjC0B,EAiCrB;AAChB,CAlCqC,EAkC9B,CAlC8B,EAkC1B,EAlC0B,EAkCrB;AACnB,KAAG,CAnCqC,EAmCjC,KAAG,CAnC8B,EAmCzB,CAnCyB,EAmCrB;AACnB,KAAG,CApCqC,EAoCjC,KAAG,CApC8B,EAoCzB,CApCyB,EAoCrB;AAChB,CArCqC,EAqC9B,CArC8B,EAqCzB,CArCyB,EAqCrB;AACnB,KAAG,CAtCqC,EAsCjC,KAAG,CAtC8B,EAsCzB,CAtCyB,EAsCrB;AAChB,CAvCqC,EAuC9B,CAvC8B,EAuC1B,EAvC0B,EAuCrB;AAChB,CAxCqC,EAwC9B,CAxC8B,EAwC1B,EAxC0B,EAwCrB;AACnB,KAAG,CAzCqC,EAyCjC,KAAG,CAzC8B,EAyCzB,CAzCyB,EAyCrB;AAChB,CA1CqC,EA0C9B,CA1C8B,EA0CzB,CA1CyB,EA0CrB;AAChB,CA3CqC,EA2C9B,CA3C8B,EA2C1B,EA3C0B,EA2CrB;AACnB,KAAG,CA5CqC,EA4CjC,KAAG,CA5C8B,EA4CzB,CA5CyB,EA4CrB;AAChB,CA7CqC,EA6C9B,CA7C8B,EA6C1B,EA7C0B,EA6CrB;AACnB,KAAG,CA9CqC,EA8CjC,KAAG,CA9C8B,EA8CzB,CA9CyB,EA8CrB;AACnB,KAAG,CA/CqC,EA+CjC,KAAG,CA/C8B,EA+CzB,CA/CyB,EA+CrB;AAChB,CAhDqC,EAgD9B,CAhD8B,EAgD1B,EAhD0B,EAgDrB;AAChB,CAjDqC,EAiD9B,CAjD8B,EAiD1B,EAjD0B,EAiDrB;AACnB,KAAG,CAlDqC,EAkDjC,KAAG,CAlD8B,EAkDzB,CAlDyB,EAkDrB;AAChB,CAnDqC,EAmD9B,CAnD8B,EAmD1B,EAnD0B,EAmDrB;AACnB,KAAG,CApDqC,EAoDjC,KAAG,CApD8B,EAoDzB,CApDyB,EAoDrB;AACnB,KAAG,CArDqC,EAqDjC,KAAG,CArD8B,EAqDzB,CArDyB,EAqDrB;AACnB,KAAG,CAtDqC,EAsDjC,KAAG,CAtD8B,EAsDzB,CAtDyB,EAsDrB;AAChB,CAvDqC,EAuD9B,CAvD8B,EAuD1B,EAvD0B,EAuDrB;AAChB,CAxDqC,EAwD9B,CAxD8B,EAwD1B,EAxD0B,EAwDrB;AAChB,CAzDqC,EAyD9B,CAzD8B,EAyDzB,CAzDyB,EAyDrB;AACnB,KAAG,CA1DqC,EA0DjC,KAAG,CA1D8B,EA0DzB,CA1DyB,EA0DrB;AACnB,KAAG,CA3DqC,EA2DjC,KAAG,CA3D8B,EA2DzB,CA3DyB,EA2DrB;AACnB,KAAG,CA5DqC,EA4DjC,KAAG,CA5D8B,EA4DzB,CA5DyB,EA4DrB;AACnB,KAAG,CA7DqC,EA6DjC,KAAG,CA7D8B,EA6DzB,CA7DyB,EA6DrB;AACnB,KAAG,CA9DqC,EA8DjC,KAAG,CA9D8B,EA8DzB,CA9DyB,EA8DrB;AACnB,KAAG,CA/DqC,EA+DjC,KAAG,CA/D8B,EA+DzB,CA/DyB,EA+DrB;AACnB,KAAG,CAhEqC,EAgEjC,KAAG,CAhE8B,EAgEzB,CAhEyB,EAgErB;AACnB,KAAG,CAjEqC,EAiEjC,KAAG,CAjE8B,EAiEzB,CAjEyB,EAiErB;AACjB,CAAC,CAlEqC,EAkEjC,KAAG,CAlE8B,EAkEzB,CAlEyB,EAkErB;AACnB,KAAG,CAnEqC,EAmEjC,KAAG,CAnE8B,EAmEzB,CAnEyB,EAmErB;AAChB,CApEqC,EAoE9B,CApE8B,EAoE1B,EApE0B,EAoErB;AAChB,CArEqC,EAqE9B,CArE8B,EAqEzB,CArEyB,EAqErB;AACpB,MAAI,CAtEqC,EAsElC,MAAI,CAtE8B,EAsEzB,CAtEyB,EAsErB;AACpB,MAAI,CAvEqC,EAuElC,MAAI,CAvE8B,EAuEzB,CAvEyB,EAuErB;AAChB,CAxEqC,EAwE9B,CAxE8B,EAwEzB,CAxEyB,EAwErB;AAChB,CAzEqC,EAyE9B,CAzE8B,EAyE1B,EAzE0B,EAyErB;AACnB,KAAG,CA1EqC,EA0EjC,KAAG,CA1E8B,EA0EzB,CA1EyB,EA0ErB;AAChB,CA3EqC,EA2E9B,CA3E8B,EA2EzB,CA3EyB,EA2ErB;AAChB,CA5EqC,EA4E9B,CA5E8B,EA4E1B,EA5E0B,EA4ErB;AAChB,CA7EqC,EA6E9B,CA7E8B,EA6E1B,EA7E0B,EA6ErB;AAChB,CA9EqC,EA8E9B,CA9E8B,EA8E1B,EA9E0B,EA8ErB;AACpB,MAAI,CA/EqC,EA+ElC,MAAI,CA/E8B,EA+EzB,CA/EyB,EA+ErB;AACpB,MAAI,CAhFqC,EAgFlC,MAAI,CAhF8B,EAgFzB,CAhFyB,EAgFrB;AACnB,KAAG,CAjFqC,EAiFjC,KAAG,CAjF8B,EAiFzB,CAjFyB,EAiFrB;AACpB,MAAI,CAlFqC,EAkFlC,MAAI,CAlF8B,EAkFzB,CAlFyB,EAkFrB;AACpB,MAAI,CAnFqC,EAmFlC,MAAI,CAnF8B,EAmFzB,CAnFyB,EAmFrB;AACpB,MAAI,CApFqC,EAoFjC,KAAG,CApF8B,EAoFzB,CApFyB,EAoFrB;AACnB,KAAG,CArFqC,EAqFjC,KAAG,CArF8B,EAqFzB,CArFyB,EAqFrB;AACpB,MAAI,CAtFqC,EAsFjC,KAAG,CAtF8B,EAsFzB,CAtFyB,EAsFrB;AACpB,MAAI,CAvFqC,EAuFlC,MAAI,CAvF8B,EAuFzB,CAvFyB,EAuFrB;AACpB,MAAI,CAxFqC,EAwFlC,MAAI,CAxF8B,EAwFzB,CAxFyB,EAwFrB;AACpB,MAAI,CAzFqC,EAyFlC,MAAI,CAzF8B,EAyFzB,CAzFyB,EAyFrB;AACpB,MAAI,CA1FqC,EA0FlC,MAAI,CA1F8B,EA0FzB,CA1FyB,EA0FrB;AAChB,CA3FqC,EA2F9B,CA3F8B,EA2F1B,EA3F0B,EA2FrB;AAChB,CA5FqC,EA4F9B,CA5F8B,EA4F1B,EA5F0B,EA4FrB;AAChB,CA7FqC,EA6F9B,CA7F8B,EA6F1B,EA7F0B,EA6FrB;AACpB,MAAI,CA9FqC,EA8FlC,MAAI,CA9F8B,EA8FzB,CA9FyB,EA8FrB;AACpB,MAAI,CA/FqC,EA+FlC,MAAI,CA/F8B,EA+FzB,CA/FyB,EA+FrB;AAChB,CAhGqC,EAgG9B,CAhG8B,EAgG1B,EAhG0B,EAgGrB;AAChB,CAjGqC,EAiG9B,CAjG8B,EAiG1B,EAjG0B,EAiGrB;AAChB,CAlGqC,EAkG9B,CAlG8B,EAkGzB,CAlGyB,EAkGrB;AAChB,CAnGqC,EAmG9B,CAnG8B,EAmG1B,EAnG0B,EAmGrB;AAChB,CApGqC,EAoG9B,CApG8B,EAoG1B,EApG0B,EAoGrB;AAChB,CArGqC,EAqG9B,CArG8B,EAqG1B,EArG0B,EAqGrB;AAChB,CAtGqC,EAsG9B,CAtG8B,EAsG1B,EAtG0B,EAsGrB;AAChB,CAvGqC,EAuG9B,CAvG8B,EAuG1B,EAvG0B,EAuGrB;AAChB,CAxGqC,EAwG9B,CAxG8B,EAwG1B,EAxG0B,EAwGrB;AAChB,CAzGqC,EAyG9B,CAzG8B,EAyG1B,EAzG0B,EAyGrB;AAChB,CA1GqC,EA0G9B,CA1G8B,EA0G1B,EA1G0B,EA0GrB;AAChB,CA3GqC,EA2G9B,CA3G8B,EA2G1B,EA3G0B,EA2GrB;AAChB,CA5GqC,EA4G9B,CA5G8B,EA4G1B,EA5G0B,EA4GrB;AAChB,CA7GqC,EA6G9B,CA7G8B,EA6G1B,EA7G0B,EA6GrB;AAChB,CA9GqC,EA8G9B,CA9G8B,EA8G1B,EA9G0B,EA8GrB;AAChB,CA/GqC,EA+G9B,CA/G8B,EA+G1B,EA/G0B,EA+GrB;AAChB,CAhHqC,EAgH9B,CAhH8B,EAgH1B,EAhH0B,EAgHrB;AAChB,CAjHqC,EAiH9B,CAjH8B,EAiH1B,EAjH0B,EAiHrB;AAChB,CAlHqC,EAkH9B,CAlH8B,EAkH1B,EAlH0B,EAkHrB;AAChB,CAnHqC,EAmH9B,CAnH8B,EAmH1B,EAnH0B,EAmHrB;AAChB,CApHqC,EAoH9B,CApH8B,EAoH1B,EApH0B,EAoHrB;AAChB,CArHqC,EAqH9B,CArH8B,EAqH1B,EArH0B,EAqHrB;AAChB,CAtHqC,EAsH9B,CAtH8B,EAsH1B,EAtH0B,EAsHrB;AAChB,CAvHqC,EAuH9B,CAvH8B,EAuH1B,EAvH0B,EAuHrB;AAChB,CAxHqC,EAwH9B,CAxH8B,EAwH1B,EAxH0B,EAwHrB;AAChB,CAzHqC,EAyH9B,CAzH8B,EAyH1B,EAzH0B,EAyHrB;AAChB,CA1HqC,EA0H9B,CA1H8B,EA0H1B,EA1H0B,EA0HrB;AAChB,CA3HqC,EA2H9B,CA3H8B,EA2H1B,EA3H0B,EA2HrB;AAChB,CA5HqC,EA4H9B,CA5H8B,EA4H1B,EA5H0B,EA4HrB;AAChB,CA7HqC,EA6H9B,CA7H8B,EA6H1B,EA7H0B,EA6HrB;AAChB,CA9HqC,EA8H9B,CA9H8B,EA8H1B,EA9H0B,CA8HrB;AA9HqB,CAAf,CAA3B;;AAiIAlN,MAAM6I,MAAN,GAAe,IAAIqE,UAAJ,CAAe,CAC3B,IAAE,CADyB,EACpB,IAAE,CADkB,EACb,CADa,EACT;AAClB,IAAE,CAFyB,EAEpB,IAAE,CAFkB,EAEb,CAFa,EAET;AAChB,CAHyB,EAGlB,CAHkB,EAGb,CAHa,EAGT;AAClB,IAAE,CAJyB,EAIpB,IAAE,CAJkB,EAIb,CAJa,EAIT;AAClB,IAAE,CALyB,EAKpB,IAAE,CALkB,EAKb,CALa,EAKT;AAChB,CANyB,EAMlB,CANkB,EAMd,CAAC,CANa,EAMT;AAChB,CAPyB,EAOlB,CAPkB,EAOb,CAPa,EAOT;AAClB,IAAE,CARyB,EAQrB,KAAG,CARkB,EAQb,CARa,EAQT;AACnB,KAAG,CATyB,EASrB,KAAG,CATkB,EASb,CATa,EAST;AAChB,CAVyB,EAUlB,CAVkB,EAUb,CAVa,EAUT;AAChB,CAXyB,EAWlB,CAXkB,EAWd,CAAC,CAXa,EAWT;AACnB,KAAG,CAZyB,EAYrB,KAAG,CAZkB,EAYb,CAZa,EAYT;AACnB,KAAG,CAbyB,EAarB,KAAG,CAbkB,EAab,CAba,EAaT;AACnB,KAAG,CAdyB,EAcrB,KAAG,CAdkB,EAcb,CAda,EAcT;AAChB,CAfyB,EAelB,CAfkB,EAeb,CAfa,EAeT;AAChB,CAhByB,EAgBlB,CAhBkB,EAgBd,CAAC,CAhBa,EAgBT;AACnB,KAAG,CAjByB,EAiBrB,KAAG,CAjBkB,EAiBb,CAjBa,EAiBT;AACjB,CAAC,CAlByB,EAkBrB,KAAG,CAlBkB,EAkBb,CAlBa,EAkBT;AACnB,KAAG,CAnByB,EAmBrB,KAAG,CAnBkB,EAmBb,CAnBa,EAmBT;AACnB,KAAG,CApByB,EAoBrB,KAAG,CApBkB,EAoBb,CApBa,EAoBT;AACnB,KAAG,CArByB,EAqBrB,KAAG,CArBkB,EAqBb,CArBa,EAqBT;AACnB,KAAG,CAtByB,EAsBrB,KAAG,CAtBkB,EAsBb,CAtBa,EAsBT;AACnB,KAAG,CAvByB,EAuBrB,KAAG,CAvBkB,EAuBb,CAvBa,EAuBT;AACjB,CAAC,CAxByB,EAwBrB,KAAG,CAxBkB,EAwBb,CAxBa,EAwBT;AACnB,KAAG,CAzByB,EAyBrB,KAAG,CAzBkB,EAyBb,CAzBa,EAyBT;AAChB,CA1ByB,EA0BlB,CA1BkB,EA0Bd,CAAC,CA1Ba,EA0BT;AACnB,KAAG,CA3ByB,EA2BrB,KAAG,CA3BkB,EA2Bb,CA3Ba,EA2BT;AAChB,CA5ByB,EA4BlB,CA5BkB,EA4Bb,CA5Ba,EA4BT;AAChB,CA7ByB,EA6BlB,CA7BkB,EA6Bd,CAAC,CA7Ba,EA6BT;AAChB,CA9ByB,EA8BlB,CA9BkB,EA8Bb,CA9Ba,EA8BT;AACnB,KAAG,CA/ByB,EA+BrB,KAAG,CA/BkB,EA+Bb,CA/Ba,EA+BT;AAChB,CAhCyB,EAgClB,CAhCkB,EAgCd,CAAC,CAhCa,EAgCT;AAChB,CAjCyB,EAiClB,CAjCkB,EAiCb,CAjCa,EAiCT;AACnB,KAAG,CAlCyB,EAkCrB,KAAG,CAlCkB,EAkCb,CAlCa,EAkCT;AACnB,KAAG,CAnCyB,EAmCrB,KAAG,CAnCkB,EAmCb,CAnCa,EAmCT;AAChB,CApCyB,EAoClB,CApCkB,EAoCd,CAAC,CApCa,EAoCT;AAChB,CArCyB,EAqClB,CArCkB,EAqCb,CArCa,EAqCT;AACnB,KAAG,CAtCyB,EAsCrB,KAAG,CAtCkB,EAsCb,CAtCa,EAsCT;AACnB,KAAG,CAvCyB,EAuCrB,KAAG,CAvCkB,EAuCb,CAvCa,EAuCT;AACnB,KAAG,CAxCyB,EAwCrB,KAAG,CAxCkB,EAwCb,CAxCa,EAwCT;AACnB,KAAG,CAzCyB,EAyCrB,KAAG,CAzCkB,EAyCb,CAzCa,EAyCT;AACnB,KAAG,CA1CyB,EA0CrB,KAAG,CA1CkB,EA0Cb,CA1Ca,EA0CT;AACnB,KAAG,CA3CyB,EA2CrB,KAAG,CA3CkB,EA2Cb,CA3Ca,EA2CT;AAChB,CA5CyB,EA4ClB,CA5CkB,EA4Cd,EA5Cc,EA4CT;AAChB,CA7CyB,EA6ClB,CA7CkB,EA6Cb,CA7Ca,EA6CT;AAChB,CA9CyB,EA8ClB,CA9CkB,EA8Cb,CA9Ca,EA8CT;AAChB,CA/CyB,EA+ClB,CA/CkB,EA+Cd,CAAC,CA/Ca,EA+CT;AACnB,KAAG,CAhDyB,EAgDrB,KAAG,CAhDkB,EAgDb,CAhDa,EAgDT;AAChB,CAjDyB,EAiDlB,CAjDkB,EAiDd,CAAC,CAjDa,EAiDT;AACnB,KAAG,CAlDyB,EAkDrB,KAAG,CAlDkB,EAkDb,CAlDa,EAkDT;AACnB,KAAG,CAnDyB,EAmDrB,KAAG,CAnDkB,EAmDb,CAnDa,EAmDT;AACnB,KAAG,CApDyB,EAoDrB,KAAG,CApDkB,EAoDb,CApDa,EAoDT;AACnB,KAAG,CArDyB,EAqDrB,KAAG,CArDkB,EAqDb,CArDa,EAqDT;AAChB,CAtDyB,EAsDlB,CAtDkB,EAsDf,CAAC,EAtDc,EAsDT;AACnB,KAAG,CAvDyB,EAuDrB,KAAG,CAvDkB,EAuDb,CAvDa,EAuDT;AAChB,CAxDyB,EAwDlB,CAxDkB,EAwDd,EAxDc,EAwDT;AAChB,CAzDyB,EAyDlB,CAzDkB,EAyDd,EAzDc,EAyDT;AAChB,CA1DyB,EA0DlB,CA1DkB,EA0Dd,EA1Dc,EA0DT;AAChB,CA3DyB,EA2DlB,CA3DkB,EA2Dd,EA3Dc,EA2DT;AAChB,CA5DyB,EA4DlB,CA5DkB,EA4Dd,EA5Dc,EA4DT;AAChB,CA7DyB,EA6DlB,CA7DkB,EA6Dd,EA7Dc,EA6DT;AAChB,CA9DyB,EA8DlB,CA9DkB,EA8Df,CAAC,EA9Dc,EA8DT;AAChB,CA/DyB,EA+DlB,CA/DkB,EA+Df,CAAC,EA/Dc,EA+DT;AAChB,CAhEyB,EAgElB,CAhEkB,EAgEf,CAAC,EAhEc,EAgET;AAChB,CAjEyB,EAiElB,CAjEkB,EAiEf,CAAC,EAjEc,EAiET;AAChB,CAlEyB,EAkElB,CAlEkB,EAkEf,CAAC,EAlEc,EAkET;AAChB,CAnEyB,EAmElB,CAnEkB,EAmEf,CAAC,EAnEc,CAmET;AAnES,CAAf,CAAf;;AAsEAlN,MAAM8K,qBAAN,GAA8B,IAAIsC,SAAJ,CAAc,CACzC,IAAE,CADuC,EAClC,IAAE,CADgC,EAC7B,CAD6B,EACzB;AAChB,IAAE,CAFuC,EAElC,IAAE,CAFgC,EAE7B,CAF6B,EAEzB;AAChB,IAAE,CAHuC,EAGlC,IAAE,CAHgC,EAG7B,CAH6B,EAGzB;AACd,CAJuC,EAIhC,CAJgC,EAI7B,CAJ6B,EAIzB;AACd,CALuC,EAKhC,CALgC,EAK7B,CAL6B,EAKzB;AAChB,IAAE,CANuC,EAMlC,IAAE,CANgC,EAM7B,CAN6B,EAMzB;AAChB,IAAE,CAPuC,EAOnC,KAAG,CAPgC,EAO7B,CAP6B,EAOzB;AACd,CARuC,EAQhC,CARgC,EAQ7B,CAR6B,EAQzB;AACjB,KAAG,CATuC,EASnC,KAAG,CATgC,EAS7B,CAT6B,EASzB;AACd,CAVuC,EAUhC,CAVgC,EAU7B,CAV6B,EAUzB;AACd,CAXuC,EAWhC,CAXgC,EAW7B,CAX6B,EAWzB;AACjB,KAAG,CAZuC,EAYnC,KAAG,CAZgC,EAY7B,CAZ6B,EAYzB;AACd,CAbuC,EAahC,CAbgC,EAa7B,CAb6B,EAazB;AACd,CAduC,EAchC,CAdgC,EAc7B,CAd6B,EAczB;AACjB,KAAG,CAfuC,EAenC,KAAG,CAfgC,EAe7B,CAf6B,EAezB;AACjB,KAAG,CAhBuC,EAgBjC,CAAC,CAhBgC,EAgB7B,CAhB6B,EAgBzB;AACd,CAjBuC,EAiBhC,CAjBgC,EAiB7B,CAjB6B,EAiBzB;AACd,CAlBuC,EAkBhC,CAlBgC,EAkB7B,CAlB6B,CAkBzB;AAlByB,CAAd,CAA9B;;AAqBApN,MAAM+K,uBAAN,GAAgC,IAAIqC,SAAJ,CAAc,CAC3C,IAAE,CADyC,EACpC,IAAE,CADkC,EAC/B,CAD+B,EAC3B;AAChB,IAAE,CAFyC,EAEpC,IAAE,CAFkC,EAE/B,CAF+B,EAE3B;AAChB,IAAE,CAHyC,EAGpC,IAAE,CAHkC,EAG/B,CAH+B,EAG3B;AAChB,IAAE,CAJyC,EAIpC,IAAE,CAJkC,EAI/B,CAJ+B,EAI3B;AACd,CALyC,EAKlC,CALkC,EAK/B,CAL+B,EAK3B;AACd,CANyC,EAMlC,CANkC,EAM/B,CAN+B,EAM3B;AACd,CAPyC,EAOlC,CAPkC,EAO/B,CAP+B,EAO3B;AACjB,KAAG,CARyC,EAQpC,IAAE,CARkC,EAQ/B,CAR+B,EAQ3B;AACd,CATyC,EASlC,CATkC,EAS/B,CAT+B,EAS3B;AACjB,KAAG,CAVyC,EAUrC,KAAG,CAVkC,EAU/B,CAV+B,EAU3B;AACd,CAXyC,EAWlC,CAXkC,EAW/B,CAX+B,EAW3B;AACjB,KAAG,CAZyC,EAYrC,KAAG,CAZkC,EAY/B,CAZ+B,EAY3B;AACd,CAbyC,EAalC,CAbkC,EAa/B,CAb+B,EAa3B;AACjB,KAAG,CAdyC,EAcrC,KAAG,CAdkC,EAc/B,CAd+B,EAc3B;AACd,CAfyC,EAelC,CAfkC,EAe/B,CAf+B,EAe3B;AACjB,KAAG,CAhByC,EAgBnC,CAAC,CAhBkC,EAgB/B,CAhB+B,EAgB3B;AACd,CAjByC,EAiBlC,CAjBkC,EAiB/B,CAjB+B,EAiB3B;AACd,CAlByC,EAkBlC,CAlBkC,EAkB/B,CAlB+B,CAkB3B;AAlB2B,CAAd,CAAhC;;AAqBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEApN,MAAMoL,SAAN,GAAkB,IAAIlK,UAAJ,CAAe,CAC9B,IAAE,CAD4B,EACvB,IAAE,CADqB,EACb,CADa,EACT;AACrB,IAAE,CAF4B,EAEvB,IAAE,CAFqB,EAEb,CAFa,EAET;AACnB,CAH4B,EAGrB,CAHqB,EAGlB,MAHkB,EAGT;AACrB,IAAE,CAJ4B,EAIvB,IAAE,CAJqB,EAIb,CAJa,EAIT;AACrB,IAAE,CAL4B,EAKvB,IAAE,CALqB,EAKb,CALa,EAKT;AACtB,KAAG,CAN4B,EAMvB,IAAE,CANqB,EAMb,CANa,EAMT;AACtB,KAAG,CAP4B,EAOxB,KAAG,CAPqB,EAOb,CAPa,EAOT;AACtB,KAAG,CAR4B,EAQxB,KAAG,CARqB,EAQb,CARa,EAQT;AACnB,CAT4B,EASrB,CATqB,EASlB,MATkB,EAST;AACtB,KAAG,CAV4B,EAUxB,KAAG,CAVqB,EAUb,CAVa,EAUT;AACtB,KAAG,CAX4B,EAWxB,KAAG,CAXqB,EAWb,CAXa,EAWT;AACtB,KAAG,CAZ4B,EAYxB,KAAG,CAZqB,EAYb,CAZa,EAYT;AACnB,CAb4B,EAarB,CAbqB,EAalB,MAbkB,EAaT;AACtB,KAAG,CAd4B,EAcxB,KAAG,CAdqB,EAcb,CAda,EAcT;AACnB,CAf4B,EAerB,CAfqB,EAelB,MAfkB,EAeT;AACnB,CAhB4B,EAgBrB,CAhBqB,EAgBlB,MAhBkB,EAgBT;AACtB,KAAG,CAjB4B,EAiBxB,KAAG,CAjBqB,EAiBb,CAjBa,EAiBT;AACtB,KAAG,CAlB4B,EAkBxB,KAAG,CAlBqB,EAkBb,CAlBa,EAkBT;AACtB,KAAG,CAnB4B,EAmBxB,KAAG,CAnBqB,EAmBb,CAnBa,EAmBT;AACtB,KAAG,CApB4B,EAoBxB,KAAG,CApBqB,EAoBb,CApBa,EAoBT;AACnB,CArB4B,EAqBrB,CArBqB,EAqBlB,MArBkB,EAqBT;AACtB,KAAG,CAtB4B,EAsBxB,KAAG,CAtBqB,EAsBb,CAtBa,EAsBT;AACnB,CAvB4B,EAuBrB,CAvBqB,EAuBlB,MAvBkB,EAuBT;AACnB,CAxB4B,EAwBrB,CAxBqB,EAwBlB,MAxBkB,EAwBT;AACnB,CAzB4B,EAyBrB,CAzBqB,EAyBlB,MAzBkB,EAyBT;AACnB,CA1B4B,EA0BrB,CA1BqB,EA0BlB,MA1BkB,EA0BT;AACnB,CA3B4B,EA2BrB,CA3BqB,EA2BlB,MA3BkB,EA2BT;AACtB,KAAG,CA5B4B,EA4BxB,KAAG,CA5BqB,EA4Bb,CA5Ba,EA4BT;AACnB,CA7B4B,EA6BrB,CA7BqB,EA6BlB,MA7BkB,EA6BT;AACtB,KAAG,CA9B4B,EA8BxB,KAAG,CA9BqB,EA8Bb,CA9Ba,EA8BT;AACtB,KAAG,CA/B4B,EA+BxB,KAAG,CA/BqB,EA+Bb,CA/Ba,EA+BT;AACtB,KAAG,CAhC4B,EAgCxB,KAAG,CAhCqB,EAgCb,CAhCa,EAgCT;AACtB,KAAG,CAjC4B,EAiCxB,KAAG,CAjCqB,EAiCb,CAjCa,EAiCT;AACtB,KAAG,CAlC4B,EAkCxB,KAAG,CAlCqB,EAkCb,CAlCa,EAkCT;AACtB,KAAG,CAnC4B,EAmCxB,KAAG,CAnCqB,EAmCb,CAnCa,EAmCT;AACtB,KAAG,CApC4B,EAoCxB,KAAG,CApCqB,EAoCb,CApCa,EAoCT;AACtB,KAAG,CArC4B,EAqCxB,KAAG,CArCqB,EAqCb,CArCa,EAqCT;AACtB,KAAG,CAtC4B,EAsCxB,KAAG,CAtCqB,EAsCb,CAtCa,EAsCT;AACnB,CAvC4B,EAuCrB,CAvCqB,EAuClB,MAvCkB,EAuCT;AACnB,CAxC4B,EAwCrB,CAxCqB,EAwClB,MAxCkB,EAwCT;AACnB,CAzC4B,EAyCrB,CAzCqB,EAyClB,MAzCkB,EAyCT;AACnB,CA1C4B,EA0CrB,CA1CqB,EA0ClB,MA1CkB,EA0CT;AACtB,KAAG,CA3C4B,EA2CxB,KAAG,CA3CqB,EA2Cb,CA3Ca,EA2CT;AACtB,KAAG,CA5C4B,EA4CxB,KAAG,CA5CqB,EA4Cb,CA5Ca,EA4CT;AACtB,KAAG,CA7C4B,EA6CxB,KAAG,CA7CqB,EA6Cb,CA7Ca,EA6CT;AACtB,KAAG,CA9C4B,EA8CxB,KAAG,CA9CqB,EA8Cb,CA9Ca,EA8CT;AACtB,KAAG,CA/C4B,EA+CxB,KAAG,CA/CqB,EA+Cb,CA/Ca,EA+CT;AACnB,CAhD4B,EAgDrB,CAhDqB,EAgDlB,MAhDkB,EAgDT;AACnB,CAjD4B,EAiDrB,CAjDqB,EAiDlB,MAjDkB,EAiDT;AACnB,CAlD4B,EAkDrB,CAlDqB,EAkDlB,MAlDkB,EAkDT;AACnB,CAnD4B,EAmDrB,CAnDqB,EAmDlB,MAnDkB,EAmDT;AACnB,CApD4B,EAoDrB,CApDqB,EAoDlB,MApDkB,EAoDT;AACnB,CArD4B,EAqDrB,CArDqB,EAqDlB,MArDkB,EAqDT;AACnB,CAtD4B,EAsDrB,CAtDqB,EAsDlB,MAtDkB,EAsDT;AACnB,CAvD4B,EAuDrB,CAvDqB,EAuDlB,MAvDkB,EAuDT;AACtB,KAAG,CAxD4B,EAwDxB,KAAG,CAxDqB,EAwDb,CAxDa,EAwDT;AACtB,KAAG,CAzD4B,EAyDxB,KAAG,CAzDqB,EAyDb,CAzDa,EAyDT;AACtB,KAAG,CA1D4B,EA0DxB,KAAG,CA1DqB,EA0Db,CA1Da,EA0DT;AACtB,KAAG,CA3D4B,EA2DxB,KAAG,CA3DqB,EA2Db,CA3Da,EA2DT;AACtB,KAAG,CA5D4B,EA4DxB,KAAG,CA5DqB,EA4Db,CA5Da,EA4DT;AACtB,KAAG,CA7D4B,EA6DxB,KAAG,CA7DqB,EA6Db,CA7Da,EA6DT;AACtB,KAAG,CA9D4B,EA8DxB,KAAG,CA9DqB,EA8Db,CA9Da,EA8DT;AACtB,KAAG,CA/D4B,EA+DxB,KAAG,CA/DqB,EA+Db,CA/Da,EA+DT;AACtB,KAAG,CAhE4B,EAgExB,KAAG,CAhEqB,EAgEb,CAhEa,EAgET;AACtB,KAAG,CAjE4B,EAiExB,KAAG,CAjEqB,EAiEb,CAjEa,EAiET;AACtB,KAAG,CAlE4B,EAkExB,KAAG,CAlEqB,EAkEb,CAlEa,EAkET;AACtB,KAAG,CAnE4B,EAmExB,KAAG,CAnEqB,EAmEb,CAnEa,EAmET;AACtB,KAAG,CApE4B,EAoExB,KAAG,CApEqB,EAoEb,CApEa,EAoET;AACtB,KAAG,CArE4B,EAqExB,KAAG,CArEqB,EAqEb,CArEa,EAqET;AACtB,KAAG,CAtE4B,EAsExB,KAAG,CAtEqB,EAsEb,CAtEa,EAsET;AACtB,KAAG,CAvE4B,EAuExB,KAAG,CAvEqB,EAuEb,CAvEa,EAuET;AACnB,CAxE4B,EAwErB,CAxEqB,EAwElB,MAxEkB,EAwET;AACnB,CAzE4B,EAyErB,CAzEqB,EAyElB,MAzEkB,EAyET;AACnB,CA1E4B,EA0ErB,CA1EqB,EA0ElB,MA1EkB,EA0ET;AACnB,CA3E4B,EA2ErB,CA3EqB,EA2ElB,MA3EkB,EA2ET;AACnB,CA5E4B,EA4ErB,CA5EqB,EA4ElB,MA5EkB,EA4ET;AACnB,CA7E4B,EA6ErB,CA7EqB,EA6ElB,MA7EkB,EA6ET;AACnB,CA9E4B,EA8ErB,CA9EqB,EA8ElB,MA9EkB,EA8ET;AACnB,CA/E4B,EA+ErB,CA/EqB,EA+ElB,MA/EkB,EA+ET;AACvB,MAAI,CAhF4B,EAgFzB,MAAI,CAhFqB,EAgFb,CAhFa,EAgFT;AACvB,MAAI,CAjF4B,EAiFzB,MAAI,CAjFqB,EAiFb,CAjFa,EAiFT;AACvB,MAAI,CAlF4B,EAkFxB,KAAG,CAlFqB,EAkFb,CAlFa,EAkFT;AACvB,MAAI,CAnF4B,EAmFzB,MAAI,CAnFqB,EAmFb,CAnFa,EAmFT;AACtB,KAAG,CApF4B,EAoFxB,KAAG,CApFqB,EAoFb,CApFa,EAoFT;AACpB,CAAC,CArF4B,EAqFzB,MAAI,CArFqB,EAqFb,CArFa,EAqFT;AACtB,KAAG,CAtF4B,EAsFzB,MAAI,CAtFqB,EAsFb,CAtFa,EAsFT;AACvB,MAAI,CAvF4B,EAuFzB,MAAI,CAvFqB,EAuFb,CAvFa,EAuFT;AACtB,KAAG,CAxF4B,EAwFzB,MAAI,CAxFqB,EAwFb,CAxFa,EAwFT;AACvB,MAAI,CAzF4B,EAyFzB,MAAI,CAzFqB,EAyFb,CAzFa,EAyFT;AACvB,MAAI,CA1F4B,EA0FzB,MAAI,CA1FqB,EA0Fb,CA1Fa,EA0FT;AACvB,MAAI,CA3F4B,EA2FzB,MAAI,CA3FqB,EA2Fb,CA3Fa,EA2FT;AACvB,MAAI,CA5F4B,EA4FzB,MAAI,CA5FqB,EA4Fb,CA5Fa,EA4FT;AACvB,MAAI,CA7F4B,EA6FzB,MAAI,CA7FqB,EA6Fb,CA7Fa,EA6FT;AACvB,MAAI,CA9F4B,EA8FzB,MAAI,CA9FqB,EA8Fb,CA9Fa,EA8FT;AACvB,MAAI,CA/F4B,EA+FzB,MAAI,CA/FqB,EA+Fb,CA/Fa,EA+FT;AACvB,MAAI,CAhG4B,EAgGzB,MAAI,CAhGqB,EAgGb,CAhGa,EAgGT;AACvB,MAAI,CAjG4B,EAiGzB,MAAI,CAjGqB,EAiGb,CAjGa,EAiGT;AACvB,MAAI,CAlG4B,EAkGzB,MAAI,CAlGqB,EAkGb,CAlGa,EAkGT;AACvB,MAAI,CAnG4B,EAmGzB,MAAI,CAnGqB,EAmGb,CAnGa,EAmGT;AACvB,MAAI,CApG4B,EAoGzB,MAAI,CApGqB,EAoGb,CApGa,EAoGT;AACnB,CArG4B,EAqGrB,CArGqB,EAqGlB,MArGkB,EAqGT;AACvB,MAAI,CAtG4B,EAsGzB,MAAI,CAtGqB,EAsGb,CAtGa,EAsGT;AACvB,MAAI,CAvG4B,EAuGzB,MAAI,CAvGqB,EAuGb,CAvGa,EAuGT;AACnB,CAxG4B,EAwGrB,CAxGqB,EAwGlB,MAxGkB,EAwGT;AACvB,MAAI,CAzG4B,EAyGzB,MAAI,CAzGqB,EAyGb,CAzGa,EAyGT;AACvB,MAAI,CA1G4B,EA0GzB,MAAI,CA1GqB,EA0Gb,CA1Ga,EA0GT;AACvB,MAAI,CA3G4B,EA2GzB,MAAI,CA3GqB,EA2Gb,CA3Ga,EA2GT;AACvB,MAAI,CA5G4B,EA4GzB,MAAI,CA5GqB,EA4Gb,CA5Ga,EA4GT;AACnB,CA7G4B,EA6GrB,CA7GqB,EA6GlB,MA7GkB,EA6GT;AACnB,CA9G4B,EA8GrB,CA9GqB,EA8GlB,MA9GkB,EA8GT;AACnB,CA/G4B,EA+GrB,CA/GqB,EA+GlB,MA/GkB,EA+GT;AACnB,CAhH4B,EAgHrB,CAhHqB,EAgHlB,MAhHkB,EAgHT;AACnB,CAjH4B,EAiHrB,CAjHqB,EAiHlB,MAjHkB,EAiHT;AACnB,CAlH4B,EAkHrB,CAlHqB,EAkHlB,MAlHkB,EAkHT;AACnB,CAnH4B,EAmHrB,CAnHqB,EAmHlB,MAnHkB,EAmHT;AACnB,CApH4B,EAoHrB,CApHqB,EAoHlB,MApHkB,EAoHT;AACnB,CArH4B,EAqHrB,CArHqB,EAqHlB,MArHkB,EAqHT;AACnB,CAtH4B,EAsHrB,CAtHqB,EAsHlB,MAtHkB,EAsHT;AACnB,CAvH4B,EAuHrB,CAvHqB,EAuHlB,MAvHkB,EAuHT;AACvB,MAAI,CAxH4B,EAwHzB,MAAI,CAxHqB,EAwHb,CAxHa,EAwHT;AACnB,CAzH4B,EAyHrB,CAzHqB,EAyHlB,MAzHkB,EAyHT;AACvB,MAAI,CA1H4B,EA0HzB,MAAI,CA1HqB,EA0Hb,CA1Ha,EA0HT;AACnB,CA3H4B,EA2HrB,CA3HqB,EA2HlB,MA3HkB,EA2HT;AACvB,MAAI,CA5H4B,EA4HzB,MAAI,CA5HqB,EA4Hb,CA5Ha,EA4HT;AACnB,CA7H4B,EA6HrB,CA7HqB,EA6HlB,MA7HkB,EA6HT;AACvB,MAAI,CA9H4B,EA8HzB,MAAI,CA9HqB,EA8Hb,CA9Ha,EA8HT;AACvB,MAAI,CA/H4B,EA+HzB,MAAI,CA/HqB,EA+Hb,CA/Ha,EA+HT;AACvB,MAAI,CAhI4B,EAgIzB,MAAI,CAhIqB,EAgIb,CAhIa,EAgIT;AACvB,MAAI,CAjI4B,EAiIzB,MAAI,CAjIqB,EAiIb,CAjIa,EAiIT;AACvB,MAAI,CAlI4B,EAkIzB,MAAI,CAlIqB,EAkIb,CAlIa,EAkIT;AACvB,MAAI,CAnI4B,EAmIzB,MAAI,CAnIqB,EAmIb,CAnIa,EAmIT;AACvB,MAAI,CApI4B,EAoIzB,MAAI,CApIqB,EAoIb,CApIa,EAoIT;AACvB,MAAI,CArI4B,EAqIzB,MAAI,CArIqB,EAqIb,CArIa,EAqIT;AACvB,MAAI,CAtI4B,EAsIzB,MAAI,CAtIqB,EAsIb,CAtIa,EAsIT;AACvB,MAAI,CAvI4B,EAuIzB,MAAI,CAvIqB,EAuIb,CAvIa,EAuIT;AACvB,MAAI,CAxI4B,EAwIzB,MAAI,CAxIqB,EAwIb,CAxIa,EAwIT;AACvB,MAAI,CAzI4B,EAyIzB,MAAI,CAzIqB,EAyIb,CAzIa,EAyIT;AACvB,MAAI,CA1I4B,EA0IzB,MAAI,CA1IqB,EA0Ib,CA1Ia,EA0IT;AACnB,CA3I4B,EA2IrB,CA3IqB,EA2IlB,MA3IkB,EA2IT;AACnB,CA5I4B,EA4IrB,CA5IqB,EA4IlB,MA5IkB,EA4IT;AACnB,CA7I4B,EA6IrB,CA7IqB,EA6IlB,MA7IkB,EA6IT;AACnB,CA9I4B,EA8IrB,CA9IqB,EA8IlB,MA9IkB,EA8IT;AACnB,CA/I4B,EA+IrB,CA/IqB,EA+IlB,MA/IkB,EA+IT;AACnB,CAhJ4B,EAgJrB,CAhJqB,EAgJlB,MAhJkB,EAgJT;AACnB,CAjJ4B,EAiJrB,CAjJqB,EAiJlB,MAjJkB,EAiJT;AACnB,CAlJ4B,EAkJrB,CAlJqB,EAkJlB,MAlJkB,EAkJT;AACnB,CAnJ4B,EAmJrB,CAnJqB,EAmJlB,MAnJkB,EAmJT;AACnB,CApJ4B,EAoJrB,CApJqB,EAoJlB,MApJkB,EAoJT;AACnB,CArJ4B,EAqJrB,CArJqB,EAqJlB,MArJkB,EAqJT;AACnB,CAtJ4B,EAsJrB,CAtJqB,EAsJlB,MAtJkB,EAsJT;AACnB,CAvJ4B,EAuJrB,CAvJqB,EAuJlB,MAvJkB,EAuJT;AACnB,CAxJ4B,EAwJrB,CAxJqB,EAwJlB,MAxJkB,EAwJT;AACnB,CAzJ4B,EAyJrB,CAzJqB,EAyJlB,MAzJkB,EAyJT;AACnB,CA1J4B,EA0JrB,CA1JqB,EA0JlB,MA1JkB,EA0JT;AACvB,MAAI,CA3J4B,EA2JzB,MAAI,CA3JqB,EA2Jb,CA3Ja,EA2JT;AACvB,MAAI,CA5J4B,EA4JzB,MAAI,CA5JqB,EA4Jb,CA5Ja,EA4JT;AACvB,MAAI,CA7J4B,EA6JzB,MAAI,CA7JqB,EA6Jb,CA7Ja,EA6JT;AACnB,CA9J4B,EA8JrB,CA9JqB,EA8JlB,MA9JkB,EA8JT;AACvB,MAAI,CA/J4B,EA+JzB,MAAI,CA/JqB,EA+Jb,CA/Ja,EA+JT;AACvB,MAAI,CAhK4B,EAgKzB,MAAI,CAhKqB,EAgKb,CAhKa,EAgKT;AACnB,CAjK4B,EAiKrB,CAjKqB,EAiKlB,MAjKkB,EAiKT;AACnB,CAlK4B,EAkKrB,CAlKqB,EAkKlB,MAlKkB,EAkKT;AACvB,MAAI,CAnK4B,EAmKzB,MAAI,CAnKqB,EAmKb,CAnKa,EAmKT;AACnB,CApK4B,EAoKrB,CApKqB,EAoKlB,MApKkB,EAoKT;AACvB,MAAI,CArK4B,EAqKzB,MAAI,CArKqB,EAqKb,CArKa,EAqKT;AACvB,MAAI,CAtK4B,EAsKzB,MAAI,CAtKqB,EAsKb,CAtKa,EAsKT;AACnB,CAvK4B,EAuKrB,CAvKqB,EAuKlB,MAvKkB,EAuKT;AACvB,MAAI,CAxK4B,EAwKzB,MAAI,CAxKqB,EAwKb,CAxKa,EAwKT;AACnB,CAzK4B,EAyKrB,CAzKqB,EAyKlB,MAzKkB,EAyKT;AACvB,MAAI,CA1K4B,EA0KzB,MAAI,CA1KqB,EA0Kb,CA1Ka,EA0KT;AACnB,CA3K4B,EA2KrB,CA3KqB,EA2KlB,MA3KkB,EA2KT;AACvB,MAAI,CA5K4B,EA4KzB,MAAI,CA5KqB,EA4Kb,CA5Ka,EA4KT;AACnB,CA7K4B,EA6KrB,CA7KqB,EA6KlB,MA7KkB,EA6KT;AACnB,CA9K4B,EA8KrB,CA9KqB,EA8KlB,MA9KkB,EA8KT;AACvB,MAAI,CA/K4B,EA+KzB,MAAI,CA/KqB,EA+Kb,CA/Ka,EA+KT;AACnB,CAhL4B,EAgLrB,CAhLqB,EAgLlB,MAhLkB,EAgLT;AACnB,CAjL4B,EAiLrB,CAjLqB,EAiLlB,MAjLkB,EAiLT;AACnB,CAlL4B,EAkLrB,CAlLqB,EAkLlB,MAlLkB,EAkLT;AACnB,CAnL4B,EAmLrB,CAnLqB,EAmLlB,MAnLkB,EAmLT;AACnB,CApL4B,EAoLrB,CApLqB,EAoLlB,MApLkB,EAoLT;AACnB,CArL4B,EAqLrB,CArLqB,EAqLlB,MArLkB,EAqLT;AACnB,CAtL4B,EAsLrB,CAtLqB,EAsLlB,MAtLkB,EAsLT;AACvB,MAAI,CAvL4B,EAuLzB,MAAI,CAvLqB,EAuLb,CAvLa,EAuLT;AACvB,MAAI,CAxL4B,EAwLzB,MAAI,CAxLqB,EAwLb,CAxLa,EAwLT;AACvB,MAAI,CAzL4B,EAyLzB,MAAI,CAzLqB,EAyLb,CAzLa,EAyLT;AACnB,CA1L4B,EA0LrB,CA1LqB,EA0LlB,MA1LkB,EA0LT;AACvB,MAAI,CA3L4B,EA2LzB,MAAI,CA3LqB,EA2Lb,CA3La,EA2LT;AACnB,CA5L4B,EA4LrB,CA5LqB,EA4LlB,MA5LkB,EA4LT;AACvB,MAAI,CA7L4B,EA6LzB,MAAI,CA7LqB,EA6Lb,CA7La,EA6LT;AACnB,CA9L4B,EA8LrB,CA9LqB,EA8LlB,MA9LkB,EA8LT;AACvB,MAAI,CA/L4B,EA+LzB,MAAI,CA/LqB,EA+Lb,CA/La,EA+LT;AACvB,MAAI,CAhM4B,EAgMzB,MAAI,CAhMqB,EAgMb,CAhMa,EAgMT;AACvB,MAAI,CAjM4B,EAiMzB,MAAI,CAjMqB,EAiMb,CAjMa,EAiMT;AACvB,MAAI,CAlM4B,EAkMzB,MAAI,CAlMqB,EAkMb,CAlMa,EAkMT;AACvB,MAAI,CAnM4B,EAmMzB,MAAI,CAnMqB,EAmMb,CAnMa,EAmMT;AACnB,CApM4B,EAoMrB,CApMqB,EAoMlB,MApMkB,EAoMT;AACnB,CArM4B,EAqMrB,CArMqB,EAqMlB,MArMkB,EAqMT;AACnB,CAtM4B,EAsMrB,CAtMqB,EAsMlB,MAtMkB,EAsMT;AACnB,CAvM4B,EAuMrB,CAvMqB,EAuMlB,MAvMkB,EAuMT;AACnB,CAxM4B,EAwMrB,CAxMqB,EAwMlB,MAxMkB,EAwMT;AACnB,CAzM4B,EAyMrB,CAzMqB,EAyMlB,MAzMkB,EAyMT;AACnB,CA1M4B,EA0MrB,CA1MqB,EA0MlB,MA1MkB,EA0MT;AACnB,CA3M4B,EA2MrB,CA3MqB,EA2MlB,MA3MkB,EA2MT;AACnB,CA5M4B,EA4MrB,CA5MqB,EA4MlB,MA5MkB,EA4MT;AACnB,CA7M4B,EA6MrB,CA7MqB,EA6MlB,MA7MkB,EA6MT;AACnB,CA9M4B,EA8MrB,CA9MqB,EA8MlB,MA9MkB,EA8MT;AACnB,CA/M4B,EA+MrB,CA/MqB,EA+MlB,MA/MkB,EA+MT;AACnB,CAhN4B,EAgNrB,CAhNqB,EAgNlB,MAhNkB,EAgNT;AACnB,CAjN4B,EAiNrB,CAjNqB,EAiNlB,MAjNkB,EAiNT;AACnB,CAlN4B,EAkNrB,CAlNqB,EAkNlB,MAlNkB,EAkNT;AACnB,CAnN4B,EAmNrB,CAnNqB,EAmNlB,MAnNkB,EAmNT;AACnB,CApN4B,EAoNrB,CApNqB,EAoNlB,MApNkB,EAoNT;AACnB,CArN4B,EAqNrB,CArNqB,EAqNlB,MArNkB,EAqNT;AACnB,CAtN4B,EAsNrB,CAtNqB,EAsNlB,MAtNkB,EAsNT;AACnB,CAvN4B,EAuNrB,CAvNqB,EAuNlB,MAvNkB,EAuNT;AACnB,CAxN4B,EAwNrB,CAxNqB,EAwNlB,MAxNkB,EAwNT;AACnB,CAzN4B,EAyNrB,CAzNqB,EAyNlB,MAzNkB,EAyNT;AACnB,CA1N4B,EA0NrB,CA1NqB,EA0NlB,MA1NkB,EA0NT;AACnB,CA3N4B,EA2NrB,CA3NqB,EA2NlB,MA3NkB,EA2NT;AACnB,CA5N4B,EA4NrB,CA5NqB,EA4NlB,MA5NkB,EA4NT;AACnB,CA7N4B,EA6NrB,CA7NqB,EA6NlB,MA7NkB,EA6NT;AACnB,CA9N4B,EA8NrB,CA9NqB,EA8NlB,MA9NkB,EA8NT;AACnB,CA/N4B,EA+NrB,CA/NqB,EA+NlB,MA/NkB,EA+NT;AACnB,CAhO4B,EAgOrB,CAhOqB,EAgOlB,MAhOkB,CAgOT;AAhOS,CAAf,CAAlB;;AAmOAlB,MAAM0F,YAAN,GAAqB;AACpBY,QAAO,CADa;AAEpBV,aAAY,CAFQ;AAGpBD,IAAG;AAHiB,CAArB;;AAMA3F,MAAM8B,KAAN,GAAc;AACbC,WAAU,IADG;AAEbkE,cAAa,IAFA;AAGbC,aAAY,IAHC;AAIbhE,UAAS,IAJI;AAKb6D,YAAW,IALE;AAMbC,YAAW;AANE,CAAd;;AASA,eAAehG,KAAf","file":"mpeg1.js","sourcesContent":["// Inspired by Java MPEG-1 Video Decoder and Player by Zoltan Korandi\r\n// https://sourceforge.net/projects/javampeg1video/\r\n\r\nimport JSMpeg from './jsmpeg';\r\nimport BaseDecoder from './decoder';\r\n\r\nlet MPEG1 = function(options) {\r\n\tJSMpeg.Decoder.Base.call(this, options);\r\n\r\n\tvar bufferSize = options.videoBufferSize || 512*1024;\r\n\tvar bufferMode = options.streaming\r\n\t\t? JSMpeg.BitBuffer.MODE.EVICT\r\n\t\t: JSMpeg.BitBuffer.MODE.EXPAND;\r\n\r\n\tthis.bits = new JSMpeg.BitBuffer(bufferSize, bufferMode);\r\n\r\n\tthis.customIntraQuantMatrix = new Uint8Array(64);\r\n\tthis.customNonIntraQuantMatrix = new Uint8Array(64);\r\n\tthis.blockData = new Int32Array(64);\r\n\r\n\tthis.currentFrame = 0;\r\n\tthis.decodeFirstFrame = options.decodeFirstFrame !== false;\r\n};\r\n\r\n\r\nMPEG1.prototype = Object.create(BaseDecoder.prototype);\r\nMPEG1.prototype.constructor = MPEG1;\r\n\r\nMPEG1.prototype.write = function(pts, buffers) {\r\n\tJSMpeg.Decoder.Base.prototype.write.call(this, pts, buffers);\r\n\r\n\tif (!this.hasSequenceHeader) {\r\n\t\tif (this.bits.findStartCode(MPEG1.START.SEQUENCE) === -1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.decodeSequenceHeader();\r\n\r\n\t\tif (this.decodeFirstFrame) {\r\n\t\t\tthis.decode();\r\n\t\t}\r\n\t}\r\n};\r\n\r\nMPEG1.prototype.decode = function() {\r\n\tif (!this.hasSequenceHeader) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (this.bits.findStartCode(MPEG1.START.PICTURE) === -1) {\r\n\t\tvar bufferedBytes = this.bits.byteLength - (this.bits.index >> 3);\r\n\t\treturn false;\r\n\t}\r\n\r\n\tthis.decodePicture();\r\n\tthis.advanceDecodedTime(1/this.frameRate);\r\n\treturn true;\r\n};\r\n\r\nMPEG1.prototype.readHuffman = function(codeTable) {\r\n\tvar state = 0;\r\n\tdo {\r\n\t\tstate = codeTable[state + this.bits.read(1)];\r\n\t} while (state >= 0 && codeTable[state] !== 0);\r\n\treturn codeTable[state+2];\r\n};\r\n\r\n\r\n// Sequence Layer\r\n\r\nMPEG1.prototype.frameRate = 30;\r\nMPEG1.prototype.decodeSequenceHeader = function() {\r\n\tvar newWidth = this.bits.read(12),\r\n\t\tnewHeight = this.bits.read(12);\r\n\r\n\t// skip pixel aspect ratio\r\n\tthis.bits.skip(4);\r\n\r\n\tthis.frameRate = MPEG1.PICTURE_RATE[this.bits.read(4)];\r\n\r\n\t// skip bitRate, marker, bufferSize and constrained bit\r\n\tthis.bits.skip(18 + 1 + 10 + 1);\r\n\r\n\tif (newWidth !== this.width || newHeight !== this.height) {\r\n\t\tthis.width = newWidth;\r\n\t\tthis.height = newHeight;\r\n\r\n\t\tthis.initBuffers();\r\n\r\n\t\tif (this.destination) {\r\n\t\t\tthis.destination.resize(newWidth, newHeight);\r\n\t\t}\r\n\t}\r\n\r\n\tif (this.bits.read(1)) { // load custom intra quant matrix?\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis.customIntraQuantMatrix[MPEG1.ZIG_ZAG[i]] = this.bits.read(8);\r\n\t\t}\r\n\t\tthis.intraQuantMatrix = this.customIntraQuantMatrix;\r\n\t}\r\n\r\n\tif (this.bits.read(1)) { // load custom non intra quant matrix?\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tvar idx = MPEG1.ZIG_ZAG[i];\r\n\t\t\tthis.customNonIntraQuantMatrix[idx] = this.bits.read(8);\r\n\t\t}\r\n\t\tthis.nonIntraQuantMatrix = this.customNonIntraQuantMatrix;\r\n\t}\r\n\r\n\tthis.hasSequenceHeader = true;\r\n};\r\n\r\nMPEG1.prototype.initBuffers = function() {\r\n\tthis.intraQuantMatrix = MPEG1.DEFAULT_INTRA_QUANT_MATRIX;\r\n\tthis.nonIntraQuantMatrix = MPEG1.DEFAULT_NON_INTRA_QUANT_MATRIX;\r\n\r\n\tthis.mbWidth = (this.width + 15) >> 4;\r\n\tthis.mbHeight = (this.height + 15) >> 4;\r\n\tthis.mbSize = this.mbWidth * this.mbHeight;\r\n\r\n\tthis.codedWidth = this.mbWidth << 4;\r\n\tthis.codedHeight = this.mbHeight << 4;\r\n\tthis.codedSize = this.codedWidth * this.codedHeight;\r\n\r\n\tthis.halfWidth = this.mbWidth << 3;\r\n\tthis.halfHeight = this.mbHeight << 3;\r\n\r\n\t// Allocated buffers and resize the canvas\r\n\tthis.currentY = new Uint8ClampedArray(this.codedSize);\r\n\tthis.currentY32 = new Uint32Array(this.currentY.buffer);\r\n\r\n\tthis.currentCr = new Uint8ClampedArray(this.codedSize >> 2);\r\n\tthis.currentCr32 = new Uint32Array(this.currentCr.buffer);\r\n\r\n\tthis.currentCb = new Uint8ClampedArray(this.codedSize >> 2);\r\n\tthis.currentCb32 = new Uint32Array(this.currentCb.buffer);\r\n\r\n\r\n\tthis.forwardY = new Uint8ClampedArray(this.codedSize);\r\n\tthis.forwardY32 = new Uint32Array(this.forwardY.buffer);\r\n\r\n\tthis.forwardCr = new Uint8ClampedArray(this.codedSize >> 2);\r\n\tthis.forwardCr32 = new Uint32Array(this.forwardCr.buffer);\r\n\r\n\tthis.forwardCb = new Uint8ClampedArray(this.codedSize >> 2);\r\n\tthis.forwardCb32 = new Uint32Array(this.forwardCb.buffer);\r\n};\r\n\r\n\r\n// Picture Layer\r\n\r\nMPEG1.prototype.currentY = null;\r\nMPEG1.prototype.currentCr = null;\r\nMPEG1.prototype.currentCb = null;\r\n\r\nMPEG1.prototype.pictureType = 0;\r\n\r\n// Buffers for motion compensation\r\nMPEG1.prototype.forwardY = null;\r\nMPEG1.prototype.forwardCr = null;\r\nMPEG1.prototype.forwardCb = null;\r\n\r\nMPEG1.prototype.fullPelForward = false;\r\nMPEG1.prototype.forwardFCode = 0;\r\nMPEG1.prototype.forwardRSize = 0;\r\nMPEG1.prototype.forwardF = 0;\r\n\r\nMPEG1.prototype.decodePicture = function(skipOutput) {\r\n\tthis.currentFrame++;\r\n\r\n\tthis.bits.skip(10); // skip temporalReference\r\n\tthis.pictureType = this.bits.read(3);\r\n\tthis.bits.skip(16); // skip vbv_delay\r\n\r\n\t// Skip B and D frames or unknown coding type\r\n\tif (this.pictureType <= 0 || this.pictureType >= MPEG1.PICTURE_TYPE.B) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// full_pel_forward, forward_f_code\r\n\tif (this.pictureType === MPEG1.PICTURE_TYPE.PREDICTIVE) {\r\n\t\tthis.fullPelForward = this.bits.read(1);\r\n\t\tthis.forwardFCode = this.bits.read(3);\r\n\t\tif (this.forwardFCode === 0) {\r\n\t\t\t// Ignore picture with zero forward_f_code\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.forwardRSize = this.forwardFCode - 1;\r\n\t\tthis.forwardF = 1 << this.forwardRSize;\r\n\t}\r\n\r\n\tvar code = 0;\r\n\tdo {\r\n\t\tcode = this.bits.findNextStartCode();\r\n\t} while (code === MPEG1.START.EXTENSION || code === MPEG1.START.USER_DATA );\r\n\r\n\r\n\twhile (code >= MPEG1.START.SLICE_FIRST && code <= MPEG1.START.SLICE_LAST) {\r\n\t\tthis.decodeSlice(code & 0x000000FF);\r\n\t\tcode = this.bits.findNextStartCode();\r\n\t}\r\n\r\n\tif (code !== -1) {\r\n\t\t// We found the next start code; rewind 32bits and let the main loop\r\n\t\t// handle it.\r\n\t\tthis.bits.rewind(32);\r\n\t}\r\n\r\n\t// Invoke decode callbacks\r\n\tif (this.destination) {\r\n\t\tthis.destination.render(this.currentY, this.currentCr, this.currentCb);\r\n\t}\r\n\r\n\t// If this is a reference picutre then rotate the prediction pointers\r\n\tif (\r\n\t\tthis.pictureType === MPEG1.PICTURE_TYPE.INTRA ||\r\n\t\tthis.pictureType === MPEG1.PICTURE_TYPE.PREDICTIVE\r\n\t) {\r\n\t\tvar\r\n\t\t\ttmpY = this.forwardY,\r\n\t\t\ttmpY32 = this.forwardY32,\r\n\t\t\ttmpCr = this.forwardCr,\r\n\t\t\ttmpCr32 = this.forwardCr32,\r\n\t\t\ttmpCb = this.forwardCb,\r\n\t\t\ttmpCb32 = this.forwardCb32;\r\n\r\n\t\tthis.forwardY = this.currentY;\r\n\t\tthis.forwardY32 = this.currentY32;\r\n\t\tthis.forwardCr = this.currentCr;\r\n\t\tthis.forwardCr32 = this.currentCr32;\r\n\t\tthis.forwardCb = this.currentCb;\r\n\t\tthis.forwardCb32 = this.currentCb32;\r\n\r\n\t\tthis.currentY = tmpY;\r\n\t\tthis.currentY32 = tmpY32;\r\n\t\tthis.currentCr = tmpCr;\r\n\t\tthis.currentCr32 = tmpCr32;\r\n\t\tthis.currentCb = tmpCb;\r\n\t\tthis.currentCb32 = tmpCb32;\r\n\t}\r\n};\r\n\r\n\r\n// Slice Layer\r\n\r\nMPEG1.prototype.quantizerScale = 0;\r\nMPEG1.prototype.sliceBegin = false;\r\n\r\nMPEG1.prototype.decodeSlice = function(slice) {\r\n\tthis.sliceBegin = true;\r\n\tthis.macroblockAddress = (slice - 1) * this.mbWidth - 1;\r\n\r\n\t// Reset motion vectors and DC predictors\r\n\tthis.motionFwH = this.motionFwHPrev = 0;\r\n\tthis.motionFwV = this.motionFwVPrev = 0;\r\n\tthis.dcPredictorY  = 128;\r\n\tthis.dcPredictorCr = 128;\r\n\tthis.dcPredictorCb = 128;\r\n\r\n\tthis.quantizerScale = this.bits.read(5);\r\n\r\n\t// skip extra bits\r\n\twhile (this.bits.read(1)) {\r\n\t\tthis.bits.skip(8);\r\n\t}\r\n\r\n\tdo {\r\n\t\tthis.decodeMacroblock();\r\n\t} while (!this.bits.nextBytesAreStartCode());\r\n};\r\n\r\n\r\n// Macroblock Layer\r\n\r\nMPEG1.prototype.macroblockAddress = 0;\r\nMPEG1.prototype.mbRow = 0;\r\nMPEG1.prototype.mbCol = 0;\r\n\r\nMPEG1.prototype.macroblockType = 0;\r\nMPEG1.prototype.macroblockIntra = false;\r\nMPEG1.prototype.macroblockMotFw = false;\r\n\r\nMPEG1.prototype.motionFwH = 0;\r\nMPEG1.prototype.motionFwV = 0;\r\nMPEG1.prototype.motionFwHPrev = 0;\r\nMPEG1.prototype.motionFwVPrev = 0;\r\n\r\nMPEG1.prototype.decodeMacroblock = function() {\r\n\t// Decode macroblock_address_increment\r\n\tvar\r\n\t\tincrement = 0,\r\n\t\tt = this.readHuffman(MPEG1.MACROBLOCK_ADDRESS_INCREMENT);\r\n\r\n\twhile (t === 34) {\r\n\t\t// macroblock_stuffing\r\n\t\tt = this.readHuffman(MPEG1.MACROBLOCK_ADDRESS_INCREMENT);\r\n\t}\r\n\twhile (t === 35) {\r\n\t\t// macroblock_escape\r\n\t\tincrement += 33;\r\n\t\tt = this.readHuffman(MPEG1.MACROBLOCK_ADDRESS_INCREMENT);\r\n\t}\r\n\tincrement += t;\r\n\r\n\t// Process any skipped macroblocks\r\n\tif (this.sliceBegin) {\r\n\t\t// The first macroblock_address_increment of each slice is relative\r\n\t\t// to beginning of the preverious row, not the preverious macroblock\r\n\t\tthis.sliceBegin = false;\r\n\t\tthis.macroblockAddress += increment;\r\n\t}\r\n\telse {\r\n\t\tif (this.macroblockAddress + increment >= this.mbSize) {\r\n\t\t\t// Illegal (too large) macroblock_address_increment\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (increment > 1) {\r\n\t\t\t// Skipped macroblocks reset DC predictors\r\n\t\t\tthis.dcPredictorY  = 128;\r\n\t\t\tthis.dcPredictorCr = 128;\r\n\t\t\tthis.dcPredictorCb = 128;\r\n\r\n\t\t\t// Skipped macroblocks in P-pictures reset motion vectors\r\n\t\t\tif (this.pictureType === MPEG1.PICTURE_TYPE.PREDICTIVE) {\r\n\t\t\t\tthis.motionFwH = this.motionFwHPrev = 0;\r\n\t\t\t\tthis.motionFwV = this.motionFwVPrev = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Predict skipped macroblocks\r\n\t\twhile (increment > 1) {\r\n\t\t\tthis.macroblockAddress++;\r\n\t\t\tthis.mbRow = (this.macroblockAddress / this.mbWidth)|0;\r\n\t\t\tthis.mbCol = this.macroblockAddress % this.mbWidth;\r\n\t\t\tthis.copyMacroblock(\r\n\t\t\t\tthis.motionFwH, this.motionFwV,\r\n\t\t\t\tthis.forwardY, this.forwardCr, this.forwardCb\r\n\t\t\t);\r\n\t\t\tincrement--;\r\n\t\t}\r\n\t\tthis.macroblockAddress++;\r\n\t}\r\n\tthis.mbRow = (this.macroblockAddress / this.mbWidth)|0;\r\n\tthis.mbCol = this.macroblockAddress % this.mbWidth;\r\n\r\n\t// Process the current macroblock\r\n\tvar mbTable = MPEG1.MACROBLOCK_TYPE[this.pictureType];\r\n\tthis.macroblockType = this.readHuffman(mbTable);\r\n\tthis.macroblockIntra = (this.macroblockType & 0x01);\r\n\tthis.macroblockMotFw = (this.macroblockType & 0x08);\r\n\r\n\t// Quantizer scale\r\n\tif ((this.macroblockType & 0x10) !== 0) {\r\n\t\tthis.quantizerScale = this.bits.read(5);\r\n\t}\r\n\r\n\tif (this.macroblockIntra) {\r\n\t\t// Intra-coded macroblocks reset motion vectors\r\n\t\tthis.motionFwH = this.motionFwHPrev = 0;\r\n\t\tthis.motionFwV = this.motionFwVPrev = 0;\r\n\t}\r\n\telse {\r\n\t\t// Non-intra macroblocks reset DC predictors\r\n\t\tthis.dcPredictorY = 128;\r\n\t\tthis.dcPredictorCr = 128;\r\n\t\tthis.dcPredictorCb = 128;\r\n\r\n\t\tthis.decodeMotionVectors();\r\n\t\tthis.copyMacroblock(\r\n\t\t\tthis.motionFwH, this.motionFwV,\r\n\t\t\tthis.forwardY, this.forwardCr, this.forwardCb\r\n\t\t);\r\n\t}\r\n\r\n\t// Decode blocks\r\n\tvar cbp = ((this.macroblockType & 0x02) !== 0)\r\n\t\t? this.readHuffman(MPEG1.CODE_BLOCK_PATTERN)\r\n\t\t: (this.macroblockIntra ? 0x3f : 0);\r\n\r\n\tfor (var block = 0, mask = 0x20; block < 6; block++) {\r\n\t\tif ((cbp & mask) !== 0) {\r\n\t\t\tthis.decodeBlock(block);\r\n\t\t}\r\n\t\tmask >>= 1;\r\n\t}\r\n};\r\n\r\n\r\nMPEG1.prototype.decodeMotionVectors = function() {\r\n\tvar code, d, r = 0;\r\n\r\n\t// Forward\r\n\tif (this.macroblockMotFw) {\r\n\t\t// Horizontal forward\r\n\t\tcode = this.readHuffman(MPEG1.MOTION);\r\n\t\tif ((code !== 0) && (this.forwardF !== 1)) {\r\n\t\t\tr = this.bits.read(this.forwardRSize);\r\n\t\t\td = ((Math.abs(code) - 1) << this.forwardRSize) + r + 1;\r\n\t\t\tif (code < 0) {\r\n\t\t\t\td = -d;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\td = code;\r\n\t\t}\r\n\r\n\t\tthis.motionFwHPrev += d;\r\n\t\tif (this.motionFwHPrev > (this.forwardF << 4) - 1) {\r\n\t\t\tthis.motionFwHPrev -= this.forwardF << 5;\r\n\t\t}\r\n\t\telse if (this.motionFwHPrev < ((-this.forwardF) << 4)) {\r\n\t\t\tthis.motionFwHPrev += this.forwardF << 5;\r\n\t\t}\r\n\r\n\t\tthis.motionFwH = this.motionFwHPrev;\r\n\t\tif (this.fullPelForward) {\r\n\t\t\tthis.motionFwH <<= 1;\r\n\t\t}\r\n\r\n\t\t// Vertical forward\r\n\t\tcode = this.readHuffman(MPEG1.MOTION);\r\n\t\tif ((code !== 0) && (this.forwardF !== 1)) {\r\n\t\t\tr = this.bits.read(this.forwardRSize);\r\n\t\t\td = ((Math.abs(code) - 1) << this.forwardRSize) + r + 1;\r\n\t\t\tif (code < 0) {\r\n\t\t\t\td = -d;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\td = code;\r\n\t\t}\r\n\r\n\t\tthis.motionFwVPrev += d;\r\n\t\tif (this.motionFwVPrev > (this.forwardF << 4) - 1) {\r\n\t\t\tthis.motionFwVPrev -= this.forwardF << 5;\r\n\t\t}\r\n\t\telse if (this.motionFwVPrev < ((-this.forwardF) << 4)) {\r\n\t\t\tthis.motionFwVPrev += this.forwardF << 5;\r\n\t\t}\r\n\r\n\t\tthis.motionFwV = this.motionFwVPrev;\r\n\t\tif (this.fullPelForward) {\r\n\t\t\tthis.motionFwV <<= 1;\r\n\t\t}\r\n\t}\r\n\telse if (this.pictureType === MPEG1.PICTURE_TYPE.PREDICTIVE) {\r\n\t\t// No motion information in P-picture, reset vectors\r\n\t\tthis.motionFwH = this.motionFwHPrev = 0;\r\n\t\tthis.motionFwV = this.motionFwVPrev = 0;\r\n\t}\r\n};\r\n\r\nMPEG1.prototype.copyMacroblock = function(motionH, motionV, sY, sCr, sCb) {\r\n\tvar\r\n\t\twidth, scan,\r\n\t\tH, V, oddH, oddV,\r\n\t\tsrc, dest, last;\r\n\r\n\t// We use 32bit writes here\r\n\tvar dY = this.currentY32,\r\n\t\tdCb = this.currentCb32,\r\n\t\tdCr = this.currentCr32;\r\n\r\n\t// Luminance\r\n\twidth = this.codedWidth;\r\n\tscan = width - 16;\r\n\r\n\tH = motionH >> 1;\r\n\tV = motionV >> 1;\r\n\toddH = (motionH & 1) === 1;\r\n\toddV = (motionV & 1) === 1;\r\n\r\n\tsrc = ((this.mbRow << 4) + V) * width + (this.mbCol << 4) + H;\r\n\tdest = (this.mbRow * width + this.mbCol) << 2;\r\n\tlast = dest + (width << 2);\r\n\r\n\tvar x, y1, y2, y;\r\n\tif (oddH) {\r\n\t\tif (oddV) {\r\n\t\t\twhile (dest < last) {\r\n\t\t\t\ty1 = sY[src] + sY[src+width]; src++;\r\n\t\t\t\tfor (x = 0; x < 4; x++) {\r\n\t\t\t\t\ty2 = sY[src] + sY[src+width]; src++;\r\n\t\t\t\t\ty = (((y1 + y2 + 2) >> 2) & 0xff);\r\n\r\n\t\t\t\t\ty1 = sY[src] + sY[src+width]; src++;\r\n\t\t\t\t\ty |= (((y1 + y2 + 2) << 6) & 0xff00);\r\n\r\n\t\t\t\t\ty2 = sY[src] + sY[src+width]; src++;\r\n\t\t\t\t\ty |= (((y1 + y2 + 2) << 14) & 0xff0000);\r\n\r\n\t\t\t\t\ty1 = sY[src] + sY[src+width]; src++;\r\n\t\t\t\t\ty |= (((y1 + y2 + 2) << 22) & 0xff000000);\r\n\r\n\t\t\t\t\tdY[dest++] = y;\r\n\t\t\t\t}\r\n\t\t\t\tdest += scan >> 2; src += scan-1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhile (dest < last) {\r\n\t\t\t\ty1 = sY[src++];\r\n\t\t\t\tfor (x = 0; x < 4; x++) {\r\n\t\t\t\t\ty2 = sY[src++];\r\n\t\t\t\t\ty = (((y1 + y2 + 1) >> 1) & 0xff);\r\n\r\n\t\t\t\t\ty1 = sY[src++];\r\n\t\t\t\t\ty |= (((y1 + y2 + 1) << 7) & 0xff00);\r\n\r\n\t\t\t\t\ty2 = sY[src++];\r\n\t\t\t\t\ty |= (((y1 + y2 + 1) << 15) & 0xff0000);\r\n\r\n\t\t\t\t\ty1 = sY[src++];\r\n\t\t\t\t\ty |= (((y1 + y2 + 1) << 23) & 0xff000000);\r\n\r\n\t\t\t\t\tdY[dest++] = y;\r\n\t\t\t\t}\r\n\t\t\t\tdest += scan >> 2; src += scan-1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tif (oddV) {\r\n\t\t\twhile (dest < last) {\r\n\t\t\t\tfor (x = 0; x < 4; x++) {\r\n\t\t\t\t\ty = (((sY[src] + sY[src+width] + 1) >> 1) & 0xff); src++;\r\n\t\t\t\t\ty |= (((sY[src] + sY[src+width] + 1) << 7) & 0xff00); src++;\r\n\t\t\t\t\ty |= (((sY[src] + sY[src+width] + 1) << 15) & 0xff0000); src++;\r\n\t\t\t\t\ty |= (((sY[src] + sY[src+width] + 1) << 23) & 0xff000000); src++;\r\n\r\n\t\t\t\t\tdY[dest++] = y;\r\n\t\t\t\t}\r\n\t\t\t\tdest += scan >> 2; src += scan;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhile (dest < last) {\r\n\t\t\t\tfor (x = 0; x < 4; x++) {\r\n\t\t\t\t\ty = sY[src]; src++;\r\n\t\t\t\t\ty |= sY[src] << 8; src++;\r\n\t\t\t\t\ty |= sY[src] << 16; src++;\r\n\t\t\t\t\ty |= sY[src] << 24; src++;\r\n\r\n\t\t\t\t\tdY[dest++] = y;\r\n\t\t\t\t}\r\n\t\t\t\tdest += scan >> 2; src += scan;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Chrominance\r\n\r\n\twidth = this.halfWidth;\r\n\tscan = width - 8;\r\n\r\n\tH = (motionH/2) >> 1;\r\n\tV = (motionV/2) >> 1;\r\n\toddH = ((motionH/2) & 1) === 1;\r\n\toddV = ((motionV/2) & 1) === 1;\r\n\r\n\tsrc = ((this.mbRow << 3) + V) * width + (this.mbCol << 3) + H;\r\n\tdest = (this.mbRow * width + this.mbCol) << 1;\r\n\tlast = dest + (width << 1);\r\n\r\n\tvar cr1, cr2, cr,\r\n\t\tcb1, cb2, cb;\r\n\tif (oddH) {\r\n\t\tif (oddV) {\r\n\t\t\twhile (dest < last) {\r\n\t\t\t\tcr1 = sCr[src] + sCr[src+width];\r\n\t\t\t\tcb1 = sCb[src] + sCb[src+width];\r\n\t\t\t\tsrc++;\r\n\t\t\t\tfor (x = 0; x < 2; x++) {\r\n\t\t\t\t\tcr2 = sCr[src] + sCr[src+width];\r\n\t\t\t\t\tcb2 = sCb[src] + sCb[src+width]; src++;\r\n\t\t\t\t\tcr = (((cr1 + cr2 + 2) >> 2) & 0xff);\r\n\t\t\t\t\tcb = (((cb1 + cb2 + 2) >> 2) & 0xff);\r\n\r\n\t\t\t\t\tcr1 = sCr[src] + sCr[src+width];\r\n\t\t\t\t\tcb1 = sCb[src] + sCb[src+width]; src++;\r\n\t\t\t\t\tcr |= (((cr1 + cr2 + 2) << 6) & 0xff00);\r\n\t\t\t\t\tcb |= (((cb1 + cb2 + 2) << 6) & 0xff00);\r\n\r\n\t\t\t\t\tcr2 = sCr[src] + sCr[src+width];\r\n\t\t\t\t\tcb2 = sCb[src] + sCb[src+width]; src++;\r\n\t\t\t\t\tcr |= (((cr1 + cr2 + 2) << 14) & 0xff0000);\r\n\t\t\t\t\tcb |= (((cb1 + cb2 + 2) << 14) & 0xff0000);\r\n\r\n\t\t\t\t\tcr1 = sCr[src] + sCr[src+width];\r\n\t\t\t\t\tcb1 = sCb[src] + sCb[src+width]; src++;\r\n\t\t\t\t\tcr |= (((cr1 + cr2 + 2) << 22) & 0xff000000);\r\n\t\t\t\t\tcb |= (((cb1 + cb2 + 2) << 22) & 0xff000000);\r\n\r\n\t\t\t\t\tdCr[dest] = cr;\r\n\t\t\t\t\tdCb[dest] = cb;\r\n\t\t\t\t\tdest++;\r\n\t\t\t\t}\r\n\t\t\t\tdest += scan >> 2; src += scan-1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhile (dest < last) {\r\n\t\t\t\tcr1 = sCr[src];\r\n\t\t\t\tcb1 = sCb[src];\r\n\t\t\t\tsrc++;\r\n\t\t\t\tfor (x = 0; x < 2; x++) {\r\n\t\t\t\t\tcr2 = sCr[src];\r\n\t\t\t\t\tcb2 = sCb[src++];\r\n\t\t\t\t\tcr = (((cr1 + cr2 + 1) >> 1) & 0xff);\r\n\t\t\t\t\tcb = (((cb1 + cb2 + 1) >> 1) & 0xff);\r\n\r\n\t\t\t\t\tcr1 = sCr[src];\r\n\t\t\t\t\tcb1 = sCb[src++];\r\n\t\t\t\t\tcr |= (((cr1 + cr2 + 1) << 7) & 0xff00);\r\n\t\t\t\t\tcb |= (((cb1 + cb2 + 1) << 7) & 0xff00);\r\n\r\n\t\t\t\t\tcr2 = sCr[src];\r\n\t\t\t\t\tcb2 = sCb[src++];\r\n\t\t\t\t\tcr |= (((cr1 + cr2 + 1) << 15) & 0xff0000);\r\n\t\t\t\t\tcb |= (((cb1 + cb2 + 1) << 15) & 0xff0000);\r\n\r\n\t\t\t\t\tcr1 = sCr[src];\r\n\t\t\t\t\tcb1 = sCb[src++];\r\n\t\t\t\t\tcr |= (((cr1 + cr2 + 1) << 23) & 0xff000000);\r\n\t\t\t\t\tcb |= (((cb1 + cb2 + 1) << 23) & 0xff000000);\r\n\r\n\t\t\t\t\tdCr[dest] = cr;\r\n\t\t\t\t\tdCb[dest] = cb;\r\n\t\t\t\t\tdest++;\r\n\t\t\t\t}\r\n\t\t\t\tdest += scan >> 2; src += scan-1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tif (oddV) {\r\n\t\t\twhile (dest < last) {\r\n\t\t\t\tfor (x = 0; x < 2; x++) {\r\n\t\t\t\t\tcr = (((sCr[src] + sCr[src+width] + 1) >> 1) & 0xff);\r\n\t\t\t\t\tcb = (((sCb[src] + sCb[src+width] + 1) >> 1) & 0xff); src++;\r\n\r\n\t\t\t\t\tcr |= (((sCr[src] + sCr[src+width] + 1) << 7) & 0xff00);\r\n\t\t\t\t\tcb |= (((sCb[src] + sCb[src+width] + 1) << 7) & 0xff00); src++;\r\n\r\n\t\t\t\t\tcr |= (((sCr[src] + sCr[src+width] + 1) << 15) & 0xff0000);\r\n\t\t\t\t\tcb |= (((sCb[src] + sCb[src+width] + 1) << 15) & 0xff0000); src++;\r\n\r\n\t\t\t\t\tcr |= (((sCr[src] + sCr[src+width] + 1) << 23) & 0xff000000);\r\n\t\t\t\t\tcb |= (((sCb[src] + sCb[src+width] + 1) << 23) & 0xff000000); src++;\r\n\r\n\t\t\t\t\tdCr[dest] = cr;\r\n\t\t\t\t\tdCb[dest] = cb;\r\n\t\t\t\t\tdest++;\r\n\t\t\t\t}\r\n\t\t\t\tdest += scan >> 2; src += scan;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhile (dest < last) {\r\n\t\t\t\tfor (x = 0; x < 2; x++) {\r\n\t\t\t\t\tcr = sCr[src];\r\n\t\t\t\t\tcb = sCb[src]; src++;\r\n\r\n\t\t\t\t\tcr |= sCr[src] << 8;\r\n\t\t\t\t\tcb |= sCb[src] << 8; src++;\r\n\r\n\t\t\t\t\tcr |= sCr[src] << 16;\r\n\t\t\t\t\tcb |= sCb[src] << 16; src++;\r\n\r\n\t\t\t\t\tcr |= sCr[src] << 24;\r\n\t\t\t\t\tcb |= sCb[src] << 24; src++;\r\n\r\n\t\t\t\t\tdCr[dest] = cr;\r\n\t\t\t\t\tdCb[dest] = cb;\r\n\t\t\t\t\tdest++;\r\n\t\t\t\t}\r\n\t\t\t\tdest += scan >> 2; src += scan;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n// Block layer\r\n\r\nMPEG1.prototype.dcPredictorY = 0;\r\nMPEG1.prototype.dcPredictorCr = 0;\r\nMPEG1.prototype.dcPredictorCb = 0;\r\n\r\nMPEG1.prototype.blockData = null;\r\n\r\nMPEG1.prototype.decodeBlock = function(block) {\r\n\r\n\tvar\r\n\t\tn = 0,\r\n\t\tquantMatrix;\r\n\r\n\t// Decode DC coefficient of intra-coded blocks\r\n\tif (this.macroblockIntra) {\r\n\t\tvar\r\n\t\t\tpredictor,\r\n\t\t\tdctSize;\r\n\r\n\t\t// DC prediction\r\n\r\n\t\tif (block < 4) {\r\n\t\t\tpredictor = this.dcPredictorY;\r\n\t\t\tdctSize = this.readHuffman(MPEG1.DCT_DC_SIZE_LUMINANCE);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpredictor = (block === 4 ? this.dcPredictorCr : this.dcPredictorCb);\r\n\t\t\tdctSize = this.readHuffman(MPEG1.DCT_DC_SIZE_CHROMINANCE);\r\n\t\t}\r\n\r\n\t\t// Read DC coeff\r\n\t\tif (dctSize > 0) {\r\n\t\t\tvar differential = this.bits.read(dctSize);\r\n\t\t\tif ((differential & (1 << (dctSize - 1))) !== 0) {\r\n\t\t\t\tthis.blockData[0] = predictor + differential;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.blockData[0] = predictor + ((-1 << dctSize)|(differential+1));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.blockData[0] = predictor;\r\n\t\t}\r\n\r\n\t\t// Save predictor value\r\n\t\tif (block < 4) {\r\n\t\t\tthis.dcPredictorY = this.blockData[0];\r\n\t\t}\r\n\t\telse if (block === 4) {\r\n\t\t\tthis.dcPredictorCr = this.blockData[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.dcPredictorCb = this.blockData[0];\r\n\t\t}\r\n\r\n\t\t// Dequantize + premultiply\r\n\t\tthis.blockData[0] <<= (3 + 5);\r\n\r\n\t\tquantMatrix = this.intraQuantMatrix;\r\n\t\tn = 1;\r\n\t}\r\n\telse {\r\n\t\tquantMatrix = this.nonIntraQuantMatrix;\r\n\t}\r\n\r\n\t// Decode AC coefficients (+DC for non-intra)\r\n\tvar level = 0;\r\n\twhile (true) {\r\n\t\tvar\r\n\t\t\trun = 0,\r\n\t\t\tcoeff = this.readHuffman(MPEG1.DCT_COEFF);\r\n\r\n\t\tif ((coeff === 0x0001) && (n > 0) && (this.bits.read(1) === 0)) {\r\n\t\t\t// end_of_block\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (coeff === 0xffff) {\r\n\t\t\t// escape\r\n\t\t\trun = this.bits.read(6);\r\n\t\t\tlevel = this.bits.read(8);\r\n\t\t\tif (level === 0) {\r\n\t\t\t\tlevel = this.bits.read(8);\r\n\t\t\t}\r\n\t\t\telse if (level === 128) {\r\n\t\t\t\tlevel = this.bits.read(8) - 256;\r\n\t\t\t}\r\n\t\t\telse if (level > 128) {\r\n\t\t\t\tlevel = level - 256;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\trun = coeff >> 8;\r\n\t\t\tlevel = coeff & 0xff;\r\n\t\t\tif (this.bits.read(1)) {\r\n\t\t\t\tlevel = -level;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tn += run;\r\n\t\tvar dezigZagged = MPEG1.ZIG_ZAG[n];\r\n\t\tn++;\r\n\r\n\t\t// Dequantize, oddify, clip\r\n\t\tlevel <<= 1;\r\n\t\tif (!this.macroblockIntra) {\r\n\t\t\tlevel += (level < 0 ? -1 : 1);\r\n\t\t}\r\n\t\tlevel = (level * this.quantizerScale * quantMatrix[dezigZagged]) >> 4;\r\n\t\tif ((level & 1) === 0) {\r\n\t\t\tlevel -= level > 0 ? 1 : -1;\r\n\t\t}\r\n\t\tif (level > 2047) {\r\n\t\t\tlevel = 2047;\r\n\t\t}\r\n\t\telse if (level < -2048) {\r\n\t\t\tlevel = -2048;\r\n\t\t}\r\n\r\n\t\t// Save premultiplied coefficient\r\n\t\tthis.blockData[dezigZagged] = level * MPEG1.PREMULTIPLIER_MATRIX[dezigZagged];\r\n\t}\r\n\r\n\t// Move block to its place\r\n\tvar\r\n\t\tdestArray,\r\n\t\tdestIndex,\r\n\t\tscan;\r\n\r\n\tif (block < 4) {\r\n\t\tdestArray = this.currentY;\r\n\t\tscan = this.codedWidth - 8;\r\n\t\tdestIndex = (this.mbRow * this.codedWidth + this.mbCol) << 4;\r\n\t\tif ((block & 1) !== 0) {\r\n\t\t\tdestIndex += 8;\r\n\t\t}\r\n\t\tif ((block & 2) !== 0) {\r\n\t\t\tdestIndex += this.codedWidth << 3;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tdestArray = (block === 4) ? this.currentCb : this.currentCr;\r\n\t\tscan = (this.codedWidth >> 1) - 8;\r\n\t\tdestIndex = ((this.mbRow * this.codedWidth) << 2) + (this.mbCol << 3);\r\n\t}\r\n\r\n\tif (this.macroblockIntra) {\r\n\t\t// Overwrite (no prediction)\r\n\t\tif (n === 1) {\r\n\t\t\tMPEG1.CopyValueToDestination((this.blockData[0] + 128) >> 8, destArray, destIndex, scan);\r\n\t\t\tthis.blockData[0] = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tMPEG1.IDCT(this.blockData);\r\n\t\t\tMPEG1.CopyBlockToDestination(this.blockData, destArray, destIndex, scan);\r\n\t\t\tJSMpeg.Fill(this.blockData, 0);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Add data to the predicted macroblock\r\n\t\tif (n === 1) {\r\n\t\t\tMPEG1.AddValueToDestination((this.blockData[0] + 128) >> 8, destArray, destIndex, scan);\r\n\t\t\tthis.blockData[0] = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tMPEG1.IDCT(this.blockData);\r\n\t\t\tMPEG1.AddBlockToDestination(this.blockData, destArray, destIndex, scan);\r\n\t\t\tJSMpeg.Fill(this.blockData, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tn = 0;\r\n};\r\n\r\nMPEG1.CopyBlockToDestination = function(block, dest, index, scan) {\r\n\tfor (var n = 0; n < 64; n += 8, index += scan+8) {\r\n\t\tdest[index+0] = block[n+0];\r\n\t\tdest[index+1] = block[n+1];\r\n\t\tdest[index+2] = block[n+2];\r\n\t\tdest[index+3] = block[n+3];\r\n\t\tdest[index+4] = block[n+4];\r\n\t\tdest[index+5] = block[n+5];\r\n\t\tdest[index+6] = block[n+6];\r\n\t\tdest[index+7] = block[n+7];\r\n\t}\r\n};\r\n\r\nMPEG1.AddBlockToDestination = function(block, dest, index, scan) {\r\n\tfor (var n = 0; n < 64; n += 8, index += scan+8) {\r\n\t\tdest[index+0] += block[n+0];\r\n\t\tdest[index+1] += block[n+1];\r\n\t\tdest[index+2] += block[n+2];\r\n\t\tdest[index+3] += block[n+3];\r\n\t\tdest[index+4] += block[n+4];\r\n\t\tdest[index+5] += block[n+5];\r\n\t\tdest[index+6] += block[n+6];\r\n\t\tdest[index+7] += block[n+7];\r\n\t}\r\n};\r\n\r\nMPEG1.CopyValueToDestination = function(value, dest, index, scan) {\r\n\tfor (var n = 0; n < 64; n += 8, index += scan+8) {\r\n\t\tdest[index+0] = value;\r\n\t\tdest[index+1] = value;\r\n\t\tdest[index+2] = value;\r\n\t\tdest[index+3] = value;\r\n\t\tdest[index+4] = value;\r\n\t\tdest[index+5] = value;\r\n\t\tdest[index+6] = value;\r\n\t\tdest[index+7] = value;\r\n\t}\r\n};\r\n\r\nMPEG1.AddValueToDestination = function(value, dest, index, scan) {\r\n\tfor (var n = 0; n < 64; n += 8, index += scan+8) {\r\n\t\tdest[index+0] += value;\r\n\t\tdest[index+1] += value;\r\n\t\tdest[index+2] += value;\r\n\t\tdest[index+3] += value;\r\n\t\tdest[index+4] += value;\r\n\t\tdest[index+5] += value;\r\n\t\tdest[index+6] += value;\r\n\t\tdest[index+7] += value;\r\n\t}\r\n};\r\n\r\nMPEG1.IDCT = function(block) {\r\n\t// See http://vsr.informatik.tu-chemnitz.de/~jan/MPEG/HTML/IDCT.html\r\n\t// for more info.\r\n\r\n\tvar\r\n\t\tb1, b3, b4, b6, b7, tmp1, tmp2, m0,\r\n\t\tx0, x1, x2, x3, x4, y3, y4, y5, y6, y7;\r\n\r\n\t// Transform columns\r\n\tfor (var i = 0; i < 8; ++i) {\r\n\t\tb1 = block[4*8+i];\r\n\t\tb3 = block[2*8+i] + block[6*8+i];\r\n\t\tb4 = block[5*8+i] - block[3*8+i];\r\n\t\ttmp1 = block[1*8+i] + block[7*8+i];\r\n\t\ttmp2 = block[3*8+i] + block[5*8+i];\r\n\t\tb6 = block[1*8+i] - block[7*8+i];\r\n\t\tb7 = tmp1 + tmp2;\r\n\t\tm0 = block[0*8+i];\r\n\t\tx4 = ((b6*473 - b4*196 + 128) >> 8) - b7;\r\n\t\tx0 = x4 - (((tmp1 - tmp2)*362 + 128) >> 8);\r\n\t\tx1 = m0 - b1;\r\n\t\tx2 = (((block[2*8+i] - block[6*8+i])*362 + 128) >> 8) - b3;\r\n\t\tx3 = m0 + b1;\r\n\t\ty3 = x1 + x2;\r\n\t\ty4 = x3 + b3;\r\n\t\ty5 = x1 - x2;\r\n\t\ty6 = x3 - b3;\r\n\t\ty7 = -x0 - ((b4*473 + b6*196 + 128) >> 8);\r\n\t\tblock[0*8+i] = b7 + y4;\r\n\t\tblock[1*8+i] = x4 + y3;\r\n\t\tblock[2*8+i] = y5 - x0;\r\n\t\tblock[3*8+i] = y6 - y7;\r\n\t\tblock[4*8+i] = y6 + y7;\r\n\t\tblock[5*8+i] = x0 + y5;\r\n\t\tblock[6*8+i] = y3 - x4;\r\n\t\tblock[7*8+i] = y4 - b7;\r\n\t}\r\n\r\n\t// Transform rows\r\n\tfor (var i = 0; i < 64; i += 8) {\r\n\t\tb1 = block[4+i];\r\n\t\tb3 = block[2+i] + block[6+i];\r\n\t\tb4 = block[5+i] - block[3+i];\r\n\t\ttmp1 = block[1+i] + block[7+i];\r\n\t\ttmp2 = block[3+i] + block[5+i];\r\n\t\tb6 = block[1+i] - block[7+i];\r\n\t\tb7 = tmp1 + tmp2;\r\n\t\tm0 = block[0+i];\r\n\t\tx4 = ((b6*473 - b4*196 + 128) >> 8) - b7;\r\n\t\tx0 = x4 - (((tmp1 - tmp2)*362 + 128) >> 8);\r\n\t\tx1 = m0 - b1;\r\n\t\tx2 = (((block[2+i] - block[6+i])*362 + 128) >> 8) - b3;\r\n\t\tx3 = m0 + b1;\r\n\t\ty3 = x1 + x2;\r\n\t\ty4 = x3 + b3;\r\n\t\ty5 = x1 - x2;\r\n\t\ty6 = x3 - b3;\r\n\t\ty7 = -x0 - ((b4*473 + b6*196 + 128) >> 8);\r\n\t\tblock[0+i] = (b7 + y4 + 128) >> 8;\r\n\t\tblock[1+i] = (x4 + y3 + 128) >> 8;\r\n\t\tblock[2+i] = (y5 - x0 + 128) >> 8;\r\n\t\tblock[3+i] = (y6 - y7 + 128) >> 8;\r\n\t\tblock[4+i] = (y6 + y7 + 128) >> 8;\r\n\t\tblock[5+i] = (x0 + y5 + 128) >> 8;\r\n\t\tblock[6+i] = (y3 - x4 + 128) >> 8;\r\n\t\tblock[7+i] = (y4 - b7 + 128) >> 8;\r\n\t}\r\n};\r\n\r\n\r\n// VLC Tables and Constants\r\n\r\nMPEG1.PICTURE_RATE = [\r\n\t0.000, 23.976, 24.000, 25.000, 29.970, 30.000, 50.000, 59.940,\r\n\t60.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000\r\n];\r\n\r\nMPEG1.ZIG_ZAG = new Uint8Array([\r\n\t 0,  1,  8, 16,  9,  2,  3, 10,\r\n\t17, 24, 32, 25, 18, 11,  4,  5,\r\n\t12, 19, 26, 33, 40, 48, 41, 34,\r\n\t27, 20, 13,  6,  7, 14, 21, 28,\r\n\t35, 42, 49, 56, 57, 50, 43, 36,\r\n\t29, 22, 15, 23, 30, 37, 44, 51,\r\n\t58, 59, 52, 45, 38, 31, 39, 46,\r\n\t53, 60, 61, 54, 47, 55, 62, 63\r\n]);\r\n\r\nMPEG1.DEFAULT_INTRA_QUANT_MATRIX = new Uint8Array([\r\n\t 8, 16, 19, 22, 26, 27, 29, 34,\r\n\t16, 16, 22, 24, 27, 29, 34, 37,\r\n\t19, 22, 26, 27, 29, 34, 34, 38,\r\n\t22, 22, 26, 27, 29, 34, 37, 40,\r\n\t22, 26, 27, 29, 32, 35, 40, 48,\r\n\t26, 27, 29, 32, 35, 40, 48, 58,\r\n\t26, 27, 29, 34, 38, 46, 56, 69,\r\n\t27, 29, 35, 38, 46, 56, 69, 83\r\n]);\r\n\r\nMPEG1.DEFAULT_NON_INTRA_QUANT_MATRIX = new Uint8Array([\r\n\t16, 16, 16, 16, 16, 16, 16, 16,\r\n\t16, 16, 16, 16, 16, 16, 16, 16,\r\n\t16, 16, 16, 16, 16, 16, 16, 16,\r\n\t16, 16, 16, 16, 16, 16, 16, 16,\r\n\t16, 16, 16, 16, 16, 16, 16, 16,\r\n\t16, 16, 16, 16, 16, 16, 16, 16,\r\n\t16, 16, 16, 16, 16, 16, 16, 16,\r\n\t16, 16, 16, 16, 16, 16, 16, 16\r\n]);\r\n\r\nMPEG1.PREMULTIPLIER_MATRIX = new Uint8Array([\r\n\t32, 44, 42, 38, 32, 25, 17,  9,\r\n\t44, 62, 58, 52, 44, 35, 24, 12,\r\n\t42, 58, 55, 49, 42, 33, 23, 12,\r\n\t38, 52, 49, 44, 38, 30, 20, 10,\r\n\t32, 44, 42, 38, 32, 25, 17,  9,\r\n\t25, 35, 33, 30, 25, 20, 14,  7,\r\n\t17, 24, 23, 20, 17, 14,  9,  5,\r\n\t 9, 12, 12, 10,  9,  7,  5,  2\r\n]);\r\n\r\n// MPEG-1 VLC\r\n\r\n//  macroblock_stuffing decodes as 34.\r\n//  macroblock_escape decodes as 35.\r\n\r\nMPEG1.MACROBLOCK_ADDRESS_INCREMENT = new Int16Array([\r\n\t 1*3,  2*3,  0, //   0\r\n\t 3*3,  4*3,  0, //   1  0\r\n\t   0,    0,  1, //   2  1.\r\n\t 5*3,  6*3,  0, //   3  00\r\n\t 7*3,  8*3,  0, //   4  01\r\n\t 9*3, 10*3,  0, //   5  000\r\n\t11*3, 12*3,  0, //   6  001\r\n\t   0,    0,  3, //   7  010.\r\n\t   0,    0,  2, //   8  011.\r\n\t13*3, 14*3,  0, //   9  0000\r\n\t15*3, 16*3,  0, //  10  0001\r\n\t   0,    0,  5, //  11  0010.\r\n\t   0,    0,  4, //  12  0011.\r\n\t17*3, 18*3,  0, //  13  0000 0\r\n\t19*3, 20*3,  0, //  14  0000 1\r\n\t   0,    0,  7, //  15  0001 0.\r\n\t   0,    0,  6, //  16  0001 1.\r\n\t21*3, 22*3,  0, //  17  0000 00\r\n\t23*3, 24*3,  0, //  18  0000 01\r\n\t25*3, 26*3,  0, //  19  0000 10\r\n\t27*3, 28*3,  0, //  20  0000 11\r\n\t  -1, 29*3,  0, //  21  0000 000\r\n\t  -1, 30*3,  0, //  22  0000 001\r\n\t31*3, 32*3,  0, //  23  0000 010\r\n\t33*3, 34*3,  0, //  24  0000 011\r\n\t35*3, 36*3,  0, //  25  0000 100\r\n\t37*3, 38*3,  0, //  26  0000 101\r\n\t   0,    0,  9, //  27  0000 110.\r\n\t   0,    0,  8, //  28  0000 111.\r\n\t39*3, 40*3,  0, //  29  0000 0001\r\n\t41*3, 42*3,  0, //  30  0000 0011\r\n\t43*3, 44*3,  0, //  31  0000 0100\r\n\t45*3, 46*3,  0, //  32  0000 0101\r\n\t   0,    0, 15, //  33  0000 0110.\r\n\t   0,    0, 14, //  34  0000 0111.\r\n\t   0,    0, 13, //  35  0000 1000.\r\n\t   0,    0, 12, //  36  0000 1001.\r\n\t   0,    0, 11, //  37  0000 1010.\r\n\t   0,    0, 10, //  38  0000 1011.\r\n\t47*3,   -1,  0, //  39  0000 0001 0\r\n\t  -1, 48*3,  0, //  40  0000 0001 1\r\n\t49*3, 50*3,  0, //  41  0000 0011 0\r\n\t51*3, 52*3,  0, //  42  0000 0011 1\r\n\t53*3, 54*3,  0, //  43  0000 0100 0\r\n\t55*3, 56*3,  0, //  44  0000 0100 1\r\n\t57*3, 58*3,  0, //  45  0000 0101 0\r\n\t59*3, 60*3,  0, //  46  0000 0101 1\r\n\t61*3,   -1,  0, //  47  0000 0001 00\r\n\t  -1, 62*3,  0, //  48  0000 0001 11\r\n\t63*3, 64*3,  0, //  49  0000 0011 00\r\n\t65*3, 66*3,  0, //  50  0000 0011 01\r\n\t67*3, 68*3,  0, //  51  0000 0011 10\r\n\t69*3, 70*3,  0, //  52  0000 0011 11\r\n\t71*3, 72*3,  0, //  53  0000 0100 00\r\n\t73*3, 74*3,  0, //  54  0000 0100 01\r\n\t   0,    0, 21, //  55  0000 0100 10.\r\n\t   0,    0, 20, //  56  0000 0100 11.\r\n\t   0,    0, 19, //  57  0000 0101 00.\r\n\t   0,    0, 18, //  58  0000 0101 01.\r\n\t   0,    0, 17, //  59  0000 0101 10.\r\n\t   0,    0, 16, //  60  0000 0101 11.\r\n\t   0,    0, 35, //  61  0000 0001 000. -- macroblock_escape\r\n\t   0,    0, 34, //  62  0000 0001 111. -- macroblock_stuffing\r\n\t   0,    0, 33, //  63  0000 0011 000.\r\n\t   0,    0, 32, //  64  0000 0011 001.\r\n\t   0,    0, 31, //  65  0000 0011 010.\r\n\t   0,    0, 30, //  66  0000 0011 011.\r\n\t   0,    0, 29, //  67  0000 0011 100.\r\n\t   0,    0, 28, //  68  0000 0011 101.\r\n\t   0,    0, 27, //  69  0000 0011 110.\r\n\t   0,    0, 26, //  70  0000 0011 111.\r\n\t   0,    0, 25, //  71  0000 0100 000.\r\n\t   0,    0, 24, //  72  0000 0100 001.\r\n\t   0,    0, 23, //  73  0000 0100 010.\r\n\t   0,    0, 22  //  74  0000 0100 011.\r\n]);\r\n\r\n//  macroblock_type bitmap:\r\n//    0x10  macroblock_quant\r\n//    0x08  macroblock_motion_forward\r\n//    0x04  macroblock_motion_backward\r\n//    0x02  macrobkock_pattern\r\n//    0x01  macroblock_intra\r\n//\r\n\r\nMPEG1.MACROBLOCK_TYPE_INTRA = new Int8Array([\r\n\t 1*3,  2*3,     0, //   0\r\n\t  -1,  3*3,     0, //   1  0\r\n\t   0,    0,  0x01, //   2  1.\r\n\t   0,    0,  0x11  //   3  01.\r\n]);\r\n\r\nMPEG1.MACROBLOCK_TYPE_PREDICTIVE = new Int8Array([\r\n\t 1*3,  2*3,     0, //  0\r\n\t 3*3,  4*3,     0, //  1  0\r\n\t   0,    0,  0x0a, //  2  1.\r\n\t 5*3,  6*3,     0, //  3  00\r\n\t   0,    0,  0x02, //  4  01.\r\n\t 7*3,  8*3,     0, //  5  000\r\n\t   0,    0,  0x08, //  6  001.\r\n\t 9*3, 10*3,     0, //  7  0000\r\n\t11*3, 12*3,     0, //  8  0001\r\n\t  -1, 13*3,     0, //  9  00000\r\n\t   0,    0,  0x12, // 10  00001.\r\n\t   0,    0,  0x1a, // 11  00010.\r\n\t   0,    0,  0x01, // 12  00011.\r\n\t   0,    0,  0x11  // 13  000001.\r\n]);\r\n\r\nMPEG1.MACROBLOCK_TYPE_B = new Int8Array([\r\n\t 1*3,  2*3,     0,  //  0\r\n\t 3*3,  5*3,     0,  //  1  0\r\n\t 4*3,  6*3,     0,  //  2  1\r\n\t 8*3,  7*3,     0,  //  3  00\r\n\t   0,    0,  0x0c,  //  4  10.\r\n\t 9*3, 10*3,     0,  //  5  01\r\n\t   0,    0,  0x0e,  //  6  11.\r\n\t13*3, 14*3,     0,  //  7  001\r\n\t12*3, 11*3,     0,  //  8  000\r\n\t   0,    0,  0x04,  //  9  010.\r\n\t   0,    0,  0x06,  // 10  011.\r\n\t18*3, 16*3,     0,  // 11  0001\r\n\t15*3, 17*3,     0,  // 12  0000\r\n\t   0,    0,  0x08,  // 13  0010.\r\n\t   0,    0,  0x0a,  // 14  0011.\r\n\t  -1, 19*3,     0,  // 15  00000\r\n\t   0,    0,  0x01,  // 16  00011.\r\n\t20*3, 21*3,     0,  // 17  00001\r\n\t   0,    0,  0x1e,  // 18  00010.\r\n\t   0,    0,  0x11,  // 19  000001.\r\n\t   0,    0,  0x16,  // 20  000010.\r\n\t   0,    0,  0x1a   // 21  000011.\r\n]);\r\n\r\nMPEG1.MACROBLOCK_TYPE = [\r\n\tnull,\r\n\tMPEG1.MACROBLOCK_TYPE_INTRA,\r\n\tMPEG1.MACROBLOCK_TYPE_PREDICTIVE,\r\n\tMPEG1.MACROBLOCK_TYPE_B\r\n];\r\n\r\nMPEG1.CODE_BLOCK_PATTERN = new Int16Array([\r\n\t  2*3,   1*3,   0,  //   0\r\n\t  3*3,   6*3,   0,  //   1  1\r\n\t  4*3,   5*3,   0,  //   2  0\r\n\t  8*3,  11*3,   0,  //   3  10\r\n\t 12*3,  13*3,   0,  //   4  00\r\n\t  9*3,   7*3,   0,  //   5  01\r\n\t 10*3,  14*3,   0,  //   6  11\r\n\t 20*3,  19*3,   0,  //   7  011\r\n\t 18*3,  16*3,   0,  //   8  100\r\n\t 23*3,  17*3,   0,  //   9  010\r\n\t 27*3,  25*3,   0,  //  10  110\r\n\t 21*3,  28*3,   0,  //  11  101\r\n\t 15*3,  22*3,   0,  //  12  000\r\n\t 24*3,  26*3,   0,  //  13  001\r\n\t    0,     0,  60,  //  14  111.\r\n\t 35*3,  40*3,   0,  //  15  0000\r\n\t 44*3,  48*3,   0,  //  16  1001\r\n\t 38*3,  36*3,   0,  //  17  0101\r\n\t 42*3,  47*3,   0,  //  18  1000\r\n\t 29*3,  31*3,   0,  //  19  0111\r\n\t 39*3,  32*3,   0,  //  20  0110\r\n\t    0,     0,  32,  //  21  1010.\r\n\t 45*3,  46*3,   0,  //  22  0001\r\n\t 33*3,  41*3,   0,  //  23  0100\r\n\t 43*3,  34*3,   0,  //  24  0010\r\n\t    0,     0,   4,  //  25  1101.\r\n\t 30*3,  37*3,   0,  //  26  0011\r\n\t    0,     0,   8,  //  27  1100.\r\n\t    0,     0,  16,  //  28  1011.\r\n\t    0,     0,  44,  //  29  0111 0.\r\n\t 50*3,  56*3,   0,  //  30  0011 0\r\n\t    0,     0,  28,  //  31  0111 1.\r\n\t    0,     0,  52,  //  32  0110 1.\r\n\t    0,     0,  62,  //  33  0100 0.\r\n\t 61*3,  59*3,   0,  //  34  0010 1\r\n\t 52*3,  60*3,   0,  //  35  0000 0\r\n\t    0,     0,   1,  //  36  0101 1.\r\n\t 55*3,  54*3,   0,  //  37  0011 1\r\n\t    0,     0,  61,  //  38  0101 0.\r\n\t    0,     0,  56,  //  39  0110 0.\r\n\t 57*3,  58*3,   0,  //  40  0000 1\r\n\t    0,     0,   2,  //  41  0100 1.\r\n\t    0,     0,  40,  //  42  1000 0.\r\n\t 51*3,  62*3,   0,  //  43  0010 0\r\n\t    0,     0,  48,  //  44  1001 0.\r\n\t 64*3,  63*3,   0,  //  45  0001 0\r\n\t 49*3,  53*3,   0,  //  46  0001 1\r\n\t    0,     0,  20,  //  47  1000 1.\r\n\t    0,     0,  12,  //  48  1001 1.\r\n\t 80*3,  83*3,   0,  //  49  0001 10\r\n\t    0,     0,  63,  //  50  0011 00.\r\n\t 77*3,  75*3,   0,  //  51  0010 00\r\n\t 65*3,  73*3,   0,  //  52  0000 00\r\n\t 84*3,  66*3,   0,  //  53  0001 11\r\n\t    0,     0,  24,  //  54  0011 11.\r\n\t    0,     0,  36,  //  55  0011 10.\r\n\t    0,     0,   3,  //  56  0011 01.\r\n\t 69*3,  87*3,   0,  //  57  0000 10\r\n\t 81*3,  79*3,   0,  //  58  0000 11\r\n\t 68*3,  71*3,   0,  //  59  0010 11\r\n\t 70*3,  78*3,   0,  //  60  0000 01\r\n\t 67*3,  76*3,   0,  //  61  0010 10\r\n\t 72*3,  74*3,   0,  //  62  0010 01\r\n\t 86*3,  85*3,   0,  //  63  0001 01\r\n\t 88*3,  82*3,   0,  //  64  0001 00\r\n\t   -1,  94*3,   0,  //  65  0000 000\r\n\t 95*3,  97*3,   0,  //  66  0001 111\r\n\t    0,     0,  33,  //  67  0010 100.\r\n\t    0,     0,   9,  //  68  0010 110.\r\n\t106*3, 110*3,   0,  //  69  0000 100\r\n\t102*3, 116*3,   0,  //  70  0000 010\r\n\t    0,     0,   5,  //  71  0010 111.\r\n\t    0,     0,  10,  //  72  0010 010.\r\n\t 93*3,  89*3,   0,  //  73  0000 001\r\n\t    0,     0,   6,  //  74  0010 011.\r\n\t    0,     0,  18,  //  75  0010 001.\r\n\t    0,     0,  17,  //  76  0010 101.\r\n\t    0,     0,  34,  //  77  0010 000.\r\n\t113*3, 119*3,   0,  //  78  0000 011\r\n\t103*3, 104*3,   0,  //  79  0000 111\r\n\t 90*3,  92*3,   0,  //  80  0001 100\r\n\t109*3, 107*3,   0,  //  81  0000 110\r\n\t117*3, 118*3,   0,  //  82  0001 001\r\n\t101*3,  99*3,   0,  //  83  0001 101\r\n\t 98*3,  96*3,   0,  //  84  0001 110\r\n\t100*3,  91*3,   0,  //  85  0001 011\r\n\t114*3, 115*3,   0,  //  86  0001 010\r\n\t105*3, 108*3,   0,  //  87  0000 101\r\n\t112*3, 111*3,   0,  //  88  0001 000\r\n\t121*3, 125*3,   0,  //  89  0000 0011\r\n\t    0,     0,  41,  //  90  0001 1000.\r\n\t    0,     0,  14,  //  91  0001 0111.\r\n\t    0,     0,  21,  //  92  0001 1001.\r\n\t124*3, 122*3,   0,  //  93  0000 0010\r\n\t120*3, 123*3,   0,  //  94  0000 0001\r\n\t    0,     0,  11,  //  95  0001 1110.\r\n\t    0,     0,  19,  //  96  0001 1101.\r\n\t    0,     0,   7,  //  97  0001 1111.\r\n\t    0,     0,  35,  //  98  0001 1100.\r\n\t    0,     0,  13,  //  99  0001 1011.\r\n\t    0,     0,  50,  // 100  0001 0110.\r\n\t    0,     0,  49,  // 101  0001 1010.\r\n\t    0,     0,  58,  // 102  0000 0100.\r\n\t    0,     0,  37,  // 103  0000 1110.\r\n\t    0,     0,  25,  // 104  0000 1111.\r\n\t    0,     0,  45,  // 105  0000 1010.\r\n\t    0,     0,  57,  // 106  0000 1000.\r\n\t    0,     0,  26,  // 107  0000 1101.\r\n\t    0,     0,  29,  // 108  0000 1011.\r\n\t    0,     0,  38,  // 109  0000 1100.\r\n\t    0,     0,  53,  // 110  0000 1001.\r\n\t    0,     0,  23,  // 111  0001 0001.\r\n\t    0,     0,  43,  // 112  0001 0000.\r\n\t    0,     0,  46,  // 113  0000 0110.\r\n\t    0,     0,  42,  // 114  0001 0100.\r\n\t    0,     0,  22,  // 115  0001 0101.\r\n\t    0,     0,  54,  // 116  0000 0101.\r\n\t    0,     0,  51,  // 117  0001 0010.\r\n\t    0,     0,  15,  // 118  0001 0011.\r\n\t    0,     0,  30,  // 119  0000 0111.\r\n\t    0,     0,  39,  // 120  0000 0001 0.\r\n\t    0,     0,  47,  // 121  0000 0011 0.\r\n\t    0,     0,  55,  // 122  0000 0010 1.\r\n\t    0,     0,  27,  // 123  0000 0001 1.\r\n\t    0,     0,  59,  // 124  0000 0010 0.\r\n\t    0,     0,  31   // 125  0000 0011 1.\r\n]);\r\n\r\nMPEG1.MOTION = new Int16Array([\r\n\t  1*3,   2*3,   0,  //   0\r\n\t  4*3,   3*3,   0,  //   1  0\r\n\t    0,     0,   0,  //   2  1.\r\n\t  6*3,   5*3,   0,  //   3  01\r\n\t  8*3,   7*3,   0,  //   4  00\r\n\t    0,     0,  -1,  //   5  011.\r\n\t    0,     0,   1,  //   6  010.\r\n\t  9*3,  10*3,   0,  //   7  001\r\n\t 12*3,  11*3,   0,  //   8  000\r\n\t    0,     0,   2,  //   9  0010.\r\n\t    0,     0,  -2,  //  10  0011.\r\n\t 14*3,  15*3,   0,  //  11  0001\r\n\t 16*3,  13*3,   0,  //  12  0000\r\n\t 20*3,  18*3,   0,  //  13  0000 1\r\n\t    0,     0,   3,  //  14  0001 0.\r\n\t    0,     0,  -3,  //  15  0001 1.\r\n\t 17*3,  19*3,   0,  //  16  0000 0\r\n\t   -1,  23*3,   0,  //  17  0000 00\r\n\t 27*3,  25*3,   0,  //  18  0000 11\r\n\t 26*3,  21*3,   0,  //  19  0000 01\r\n\t 24*3,  22*3,   0,  //  20  0000 10\r\n\t 32*3,  28*3,   0,  //  21  0000 011\r\n\t 29*3,  31*3,   0,  //  22  0000 101\r\n\t   -1,  33*3,   0,  //  23  0000 001\r\n\t 36*3,  35*3,   0,  //  24  0000 100\r\n\t    0,     0,  -4,  //  25  0000 111.\r\n\t 30*3,  34*3,   0,  //  26  0000 010\r\n\t    0,     0,   4,  //  27  0000 110.\r\n\t    0,     0,  -7,  //  28  0000 0111.\r\n\t    0,     0,   5,  //  29  0000 1010.\r\n\t 37*3,  41*3,   0,  //  30  0000 0100\r\n\t    0,     0,  -5,  //  31  0000 1011.\r\n\t    0,     0,   7,  //  32  0000 0110.\r\n\t 38*3,  40*3,   0,  //  33  0000 0011\r\n\t 42*3,  39*3,   0,  //  34  0000 0101\r\n\t    0,     0,  -6,  //  35  0000 1001.\r\n\t    0,     0,   6,  //  36  0000 1000.\r\n\t 51*3,  54*3,   0,  //  37  0000 0100 0\r\n\t 50*3,  49*3,   0,  //  38  0000 0011 0\r\n\t 45*3,  46*3,   0,  //  39  0000 0101 1\r\n\t 52*3,  47*3,   0,  //  40  0000 0011 1\r\n\t 43*3,  53*3,   0,  //  41  0000 0100 1\r\n\t 44*3,  48*3,   0,  //  42  0000 0101 0\r\n\t    0,     0,  10,  //  43  0000 0100 10.\r\n\t    0,     0,   9,  //  44  0000 0101 00.\r\n\t    0,     0,   8,  //  45  0000 0101 10.\r\n\t    0,     0,  -8,  //  46  0000 0101 11.\r\n\t 57*3,  66*3,   0,  //  47  0000 0011 11\r\n\t    0,     0,  -9,  //  48  0000 0101 01.\r\n\t 60*3,  64*3,   0,  //  49  0000 0011 01\r\n\t 56*3,  61*3,   0,  //  50  0000 0011 00\r\n\t 55*3,  62*3,   0,  //  51  0000 0100 00\r\n\t 58*3,  63*3,   0,  //  52  0000 0011 10\r\n\t    0,     0, -10,  //  53  0000 0100 11.\r\n\t 59*3,  65*3,   0,  //  54  0000 0100 01\r\n\t    0,     0,  12,  //  55  0000 0100 000.\r\n\t    0,     0,  16,  //  56  0000 0011 000.\r\n\t    0,     0,  13,  //  57  0000 0011 110.\r\n\t    0,     0,  14,  //  58  0000 0011 100.\r\n\t    0,     0,  11,  //  59  0000 0100 010.\r\n\t    0,     0,  15,  //  60  0000 0011 010.\r\n\t    0,     0, -16,  //  61  0000 0011 001.\r\n\t    0,     0, -12,  //  62  0000 0100 001.\r\n\t    0,     0, -14,  //  63  0000 0011 101.\r\n\t    0,     0, -15,  //  64  0000 0011 011.\r\n\t    0,     0, -11,  //  65  0000 0100 011.\r\n\t    0,     0, -13   //  66  0000 0011 111.\r\n]);\r\n\r\nMPEG1.DCT_DC_SIZE_LUMINANCE = new Int8Array([\r\n\t  2*3,   1*3, 0,  //   0\r\n\t  6*3,   5*3, 0,  //   1  1\r\n\t  3*3,   4*3, 0,  //   2  0\r\n\t    0,     0, 1,  //   3  00.\r\n\t    0,     0, 2,  //   4  01.\r\n\t  9*3,   8*3, 0,  //   5  11\r\n\t  7*3,  10*3, 0,  //   6  10\r\n\t    0,     0, 0,  //   7  100.\r\n\t 12*3,  11*3, 0,  //   8  111\r\n\t    0,     0, 4,  //   9  110.\r\n\t    0,     0, 3,  //  10  101.\r\n\t 13*3,  14*3, 0,  //  11  1111\r\n\t    0,     0, 5,  //  12  1110.\r\n\t    0,     0, 6,  //  13  1111 0.\r\n\t 16*3,  15*3, 0,  //  14  1111 1\r\n\t 17*3,    -1, 0,  //  15  1111 11\r\n\t    0,     0, 7,  //  16  1111 10.\r\n\t    0,     0, 8   //  17  1111 110.\r\n]);\r\n\r\nMPEG1.DCT_DC_SIZE_CHROMINANCE = new Int8Array([\r\n\t  2*3,   1*3, 0,  //   0\r\n\t  4*3,   3*3, 0,  //   1  1\r\n\t  6*3,   5*3, 0,  //   2  0\r\n\t  8*3,   7*3, 0,  //   3  11\r\n\t    0,     0, 2,  //   4  10.\r\n\t    0,     0, 1,  //   5  01.\r\n\t    0,     0, 0,  //   6  00.\r\n\t 10*3,   9*3, 0,  //   7  111\r\n\t    0,     0, 3,  //   8  110.\r\n\t 12*3,  11*3, 0,  //   9  1111\r\n\t    0,     0, 4,  //  10  1110.\r\n\t 14*3,  13*3, 0,  //  11  1111 1\r\n\t    0,     0, 5,  //  12  1111 0.\r\n\t 16*3,  15*3, 0,  //  13  1111 11\r\n\t    0,     0, 6,  //  14  1111 10.\r\n\t 17*3,    -1, 0,  //  15  1111 111\r\n\t    0,     0, 7,  //  16  1111 110.\r\n\t    0,     0, 8   //  17  1111 1110.\r\n]);\r\n\r\n//  dct_coeff bitmap:\r\n//    0xff00  run\r\n//    0x00ff  level\r\n\r\n//  Decoded values are unsigned. Sign bit follows in the stream.\r\n\r\n//  Interpretation of the value 0x0001\r\n//    for dc_coeff_first:  run=0, level=1\r\n//    for dc_coeff_next:   If the next bit is 1: run=0, level=1\r\n//                         If the next bit is 0: end_of_block\r\n\r\n//  escape decodes as 0xffff.\r\n\r\nMPEG1.DCT_COEFF = new Int32Array([\r\n\t  1*3,   2*3,      0,  //   0\r\n\t  4*3,   3*3,      0,  //   1  0\r\n\t    0,     0, 0x0001,  //   2  1.\r\n\t  7*3,   8*3,      0,  //   3  01\r\n\t  6*3,   5*3,      0,  //   4  00\r\n\t 13*3,   9*3,      0,  //   5  001\r\n\t 11*3,  10*3,      0,  //   6  000\r\n\t 14*3,  12*3,      0,  //   7  010\r\n\t    0,     0, 0x0101,  //   8  011.\r\n\t 20*3,  22*3,      0,  //   9  0011\r\n\t 18*3,  21*3,      0,  //  10  0001\r\n\t 16*3,  19*3,      0,  //  11  0000\r\n\t    0,     0, 0x0201,  //  12  0101.\r\n\t 17*3,  15*3,      0,  //  13  0010\r\n\t    0,     0, 0x0002,  //  14  0100.\r\n\t    0,     0, 0x0003,  //  15  0010 1.\r\n\t 27*3,  25*3,      0,  //  16  0000 0\r\n\t 29*3,  31*3,      0,  //  17  0010 0\r\n\t 24*3,  26*3,      0,  //  18  0001 0\r\n\t 32*3,  30*3,      0,  //  19  0000 1\r\n\t    0,     0, 0x0401,  //  20  0011 0.\r\n\t 23*3,  28*3,      0,  //  21  0001 1\r\n\t    0,     0, 0x0301,  //  22  0011 1.\r\n\t    0,     0, 0x0102,  //  23  0001 10.\r\n\t    0,     0, 0x0701,  //  24  0001 00.\r\n\t    0,     0, 0xffff,  //  25  0000 01. -- escape\r\n\t    0,     0, 0x0601,  //  26  0001 01.\r\n\t 37*3,  36*3,      0,  //  27  0000 00\r\n\t    0,     0, 0x0501,  //  28  0001 11.\r\n\t 35*3,  34*3,      0,  //  29  0010 00\r\n\t 39*3,  38*3,      0,  //  30  0000 11\r\n\t 33*3,  42*3,      0,  //  31  0010 01\r\n\t 40*3,  41*3,      0,  //  32  0000 10\r\n\t 52*3,  50*3,      0,  //  33  0010 010\r\n\t 54*3,  53*3,      0,  //  34  0010 001\r\n\t 48*3,  49*3,      0,  //  35  0010 000\r\n\t 43*3,  45*3,      0,  //  36  0000 001\r\n\t 46*3,  44*3,      0,  //  37  0000 000\r\n\t    0,     0, 0x0801,  //  38  0000 111.\r\n\t    0,     0, 0x0004,  //  39  0000 110.\r\n\t    0,     0, 0x0202,  //  40  0000 100.\r\n\t    0,     0, 0x0901,  //  41  0000 101.\r\n\t 51*3,  47*3,      0,  //  42  0010 011\r\n\t 55*3,  57*3,      0,  //  43  0000 0010\r\n\t 60*3,  56*3,      0,  //  44  0000 0001\r\n\t 59*3,  58*3,      0,  //  45  0000 0011\r\n\t 61*3,  62*3,      0,  //  46  0000 0000\r\n\t    0,     0, 0x0a01,  //  47  0010 0111.\r\n\t    0,     0, 0x0d01,  //  48  0010 0000.\r\n\t    0,     0, 0x0006,  //  49  0010 0001.\r\n\t    0,     0, 0x0103,  //  50  0010 0101.\r\n\t    0,     0, 0x0005,  //  51  0010 0110.\r\n\t    0,     0, 0x0302,  //  52  0010 0100.\r\n\t    0,     0, 0x0b01,  //  53  0010 0011.\r\n\t    0,     0, 0x0c01,  //  54  0010 0010.\r\n\t 76*3,  75*3,      0,  //  55  0000 0010 0\r\n\t 67*3,  70*3,      0,  //  56  0000 0001 1\r\n\t 73*3,  71*3,      0,  //  57  0000 0010 1\r\n\t 78*3,  74*3,      0,  //  58  0000 0011 1\r\n\t 72*3,  77*3,      0,  //  59  0000 0011 0\r\n\t 69*3,  64*3,      0,  //  60  0000 0001 0\r\n\t 68*3,  63*3,      0,  //  61  0000 0000 0\r\n\t 66*3,  65*3,      0,  //  62  0000 0000 1\r\n\t 81*3,  87*3,      0,  //  63  0000 0000 01\r\n\t 91*3,  80*3,      0,  //  64  0000 0001 01\r\n\t 82*3,  79*3,      0,  //  65  0000 0000 11\r\n\t 83*3,  86*3,      0,  //  66  0000 0000 10\r\n\t 93*3,  92*3,      0,  //  67  0000 0001 10\r\n\t 84*3,  85*3,      0,  //  68  0000 0000 00\r\n\t 90*3,  94*3,      0,  //  69  0000 0001 00\r\n\t 88*3,  89*3,      0,  //  70  0000 0001 11\r\n\t    0,     0, 0x0203,  //  71  0000 0010 11.\r\n\t    0,     0, 0x0104,  //  72  0000 0011 00.\r\n\t    0,     0, 0x0007,  //  73  0000 0010 10.\r\n\t    0,     0, 0x0402,  //  74  0000 0011 11.\r\n\t    0,     0, 0x0502,  //  75  0000 0010 01.\r\n\t    0,     0, 0x1001,  //  76  0000 0010 00.\r\n\t    0,     0, 0x0f01,  //  77  0000 0011 01.\r\n\t    0,     0, 0x0e01,  //  78  0000 0011 10.\r\n\t105*3, 107*3,      0,  //  79  0000 0000 111\r\n\t111*3, 114*3,      0,  //  80  0000 0001 011\r\n\t104*3,  97*3,      0,  //  81  0000 0000 010\r\n\t125*3, 119*3,      0,  //  82  0000 0000 110\r\n\t 96*3,  98*3,      0,  //  83  0000 0000 100\r\n\t   -1, 123*3,      0,  //  84  0000 0000 000\r\n\t 95*3, 101*3,      0,  //  85  0000 0000 001\r\n\t106*3, 121*3,      0,  //  86  0000 0000 101\r\n\t 99*3, 102*3,      0,  //  87  0000 0000 011\r\n\t113*3, 103*3,      0,  //  88  0000 0001 110\r\n\t112*3, 116*3,      0,  //  89  0000 0001 111\r\n\t110*3, 100*3,      0,  //  90  0000 0001 000\r\n\t124*3, 115*3,      0,  //  91  0000 0001 010\r\n\t117*3, 122*3,      0,  //  92  0000 0001 101\r\n\t109*3, 118*3,      0,  //  93  0000 0001 100\r\n\t120*3, 108*3,      0,  //  94  0000 0001 001\r\n\t127*3, 136*3,      0,  //  95  0000 0000 0010\r\n\t139*3, 140*3,      0,  //  96  0000 0000 1000\r\n\t130*3, 126*3,      0,  //  97  0000 0000 0101\r\n\t145*3, 146*3,      0,  //  98  0000 0000 1001\r\n\t128*3, 129*3,      0,  //  99  0000 0000 0110\r\n\t    0,     0, 0x0802,  // 100  0000 0001 0001.\r\n\t132*3, 134*3,      0,  // 101  0000 0000 0011\r\n\t155*3, 154*3,      0,  // 102  0000 0000 0111\r\n\t    0,     0, 0x0008,  // 103  0000 0001 1101.\r\n\t137*3, 133*3,      0,  // 104  0000 0000 0100\r\n\t143*3, 144*3,      0,  // 105  0000 0000 1110\r\n\t151*3, 138*3,      0,  // 106  0000 0000 1010\r\n\t142*3, 141*3,      0,  // 107  0000 0000 1111\r\n\t    0,     0, 0x000a,  // 108  0000 0001 0011.\r\n\t    0,     0, 0x0009,  // 109  0000 0001 1000.\r\n\t    0,     0, 0x000b,  // 110  0000 0001 0000.\r\n\t    0,     0, 0x1501,  // 111  0000 0001 0110.\r\n\t    0,     0, 0x0602,  // 112  0000 0001 1110.\r\n\t    0,     0, 0x0303,  // 113  0000 0001 1100.\r\n\t    0,     0, 0x1401,  // 114  0000 0001 0111.\r\n\t    0,     0, 0x0702,  // 115  0000 0001 0101.\r\n\t    0,     0, 0x1101,  // 116  0000 0001 1111.\r\n\t    0,     0, 0x1201,  // 117  0000 0001 1010.\r\n\t    0,     0, 0x1301,  // 118  0000 0001 1001.\r\n\t148*3, 152*3,      0,  // 119  0000 0000 1101\r\n\t    0,     0, 0x0403,  // 120  0000 0001 0010.\r\n\t153*3, 150*3,      0,  // 121  0000 0000 1011\r\n\t    0,     0, 0x0105,  // 122  0000 0001 1011.\r\n\t131*3, 135*3,      0,  // 123  0000 0000 0001\r\n\t    0,     0, 0x0204,  // 124  0000 0001 0100.\r\n\t149*3, 147*3,      0,  // 125  0000 0000 1100\r\n\t172*3, 173*3,      0,  // 126  0000 0000 0101 1\r\n\t162*3, 158*3,      0,  // 127  0000 0000 0010 0\r\n\t170*3, 161*3,      0,  // 128  0000 0000 0110 0\r\n\t168*3, 166*3,      0,  // 129  0000 0000 0110 1\r\n\t157*3, 179*3,      0,  // 130  0000 0000 0101 0\r\n\t169*3, 167*3,      0,  // 131  0000 0000 0001 0\r\n\t174*3, 171*3,      0,  // 132  0000 0000 0011 0\r\n\t178*3, 177*3,      0,  // 133  0000 0000 0100 1\r\n\t156*3, 159*3,      0,  // 134  0000 0000 0011 1\r\n\t164*3, 165*3,      0,  // 135  0000 0000 0001 1\r\n\t183*3, 182*3,      0,  // 136  0000 0000 0010 1\r\n\t175*3, 176*3,      0,  // 137  0000 0000 0100 0\r\n\t    0,     0, 0x0107,  // 138  0000 0000 1010 1.\r\n\t    0,     0, 0x0a02,  // 139  0000 0000 1000 0.\r\n\t    0,     0, 0x0902,  // 140  0000 0000 1000 1.\r\n\t    0,     0, 0x1601,  // 141  0000 0000 1111 1.\r\n\t    0,     0, 0x1701,  // 142  0000 0000 1111 0.\r\n\t    0,     0, 0x1901,  // 143  0000 0000 1110 0.\r\n\t    0,     0, 0x1801,  // 144  0000 0000 1110 1.\r\n\t    0,     0, 0x0503,  // 145  0000 0000 1001 0.\r\n\t    0,     0, 0x0304,  // 146  0000 0000 1001 1.\r\n\t    0,     0, 0x000d,  // 147  0000 0000 1100 1.\r\n\t    0,     0, 0x000c,  // 148  0000 0000 1101 0.\r\n\t    0,     0, 0x000e,  // 149  0000 0000 1100 0.\r\n\t    0,     0, 0x000f,  // 150  0000 0000 1011 1.\r\n\t    0,     0, 0x0205,  // 151  0000 0000 1010 0.\r\n\t    0,     0, 0x1a01,  // 152  0000 0000 1101 1.\r\n\t    0,     0, 0x0106,  // 153  0000 0000 1011 0.\r\n\t180*3, 181*3,      0,  // 154  0000 0000 0111 1\r\n\t160*3, 163*3,      0,  // 155  0000 0000 0111 0\r\n\t196*3, 199*3,      0,  // 156  0000 0000 0011 10\r\n\t    0,     0, 0x001b,  // 157  0000 0000 0101 00.\r\n\t203*3, 185*3,      0,  // 158  0000 0000 0010 01\r\n\t202*3, 201*3,      0,  // 159  0000 0000 0011 11\r\n\t    0,     0, 0x0013,  // 160  0000 0000 0111 00.\r\n\t    0,     0, 0x0016,  // 161  0000 0000 0110 01.\r\n\t197*3, 207*3,      0,  // 162  0000 0000 0010 00\r\n\t    0,     0, 0x0012,  // 163  0000 0000 0111 01.\r\n\t191*3, 192*3,      0,  // 164  0000 0000 0001 10\r\n\t188*3, 190*3,      0,  // 165  0000 0000 0001 11\r\n\t    0,     0, 0x0014,  // 166  0000 0000 0110 11.\r\n\t184*3, 194*3,      0,  // 167  0000 0000 0001 01\r\n\t    0,     0, 0x0015,  // 168  0000 0000 0110 10.\r\n\t186*3, 193*3,      0,  // 169  0000 0000 0001 00\r\n\t    0,     0, 0x0017,  // 170  0000 0000 0110 00.\r\n\t204*3, 198*3,      0,  // 171  0000 0000 0011 01\r\n\t    0,     0, 0x0019,  // 172  0000 0000 0101 10.\r\n\t    0,     0, 0x0018,  // 173  0000 0000 0101 11.\r\n\t200*3, 205*3,      0,  // 174  0000 0000 0011 00\r\n\t    0,     0, 0x001f,  // 175  0000 0000 0100 00.\r\n\t    0,     0, 0x001e,  // 176  0000 0000 0100 01.\r\n\t    0,     0, 0x001c,  // 177  0000 0000 0100 11.\r\n\t    0,     0, 0x001d,  // 178  0000 0000 0100 10.\r\n\t    0,     0, 0x001a,  // 179  0000 0000 0101 01.\r\n\t    0,     0, 0x0011,  // 180  0000 0000 0111 10.\r\n\t    0,     0, 0x0010,  // 181  0000 0000 0111 11.\r\n\t189*3, 206*3,      0,  // 182  0000 0000 0010 11\r\n\t187*3, 195*3,      0,  // 183  0000 0000 0010 10\r\n\t218*3, 211*3,      0,  // 184  0000 0000 0001 010\r\n\t    0,     0, 0x0025,  // 185  0000 0000 0010 011.\r\n\t215*3, 216*3,      0,  // 186  0000 0000 0001 000\r\n\t    0,     0, 0x0024,  // 187  0000 0000 0010 100.\r\n\t210*3, 212*3,      0,  // 188  0000 0000 0001 110\r\n\t    0,     0, 0x0022,  // 189  0000 0000 0010 110.\r\n\t213*3, 209*3,      0,  // 190  0000 0000 0001 111\r\n\t221*3, 222*3,      0,  // 191  0000 0000 0001 100\r\n\t219*3, 208*3,      0,  // 192  0000 0000 0001 101\r\n\t217*3, 214*3,      0,  // 193  0000 0000 0001 001\r\n\t223*3, 220*3,      0,  // 194  0000 0000 0001 011\r\n\t    0,     0, 0x0023,  // 195  0000 0000 0010 101.\r\n\t    0,     0, 0x010b,  // 196  0000 0000 0011 100.\r\n\t    0,     0, 0x0028,  // 197  0000 0000 0010 000.\r\n\t    0,     0, 0x010c,  // 198  0000 0000 0011 011.\r\n\t    0,     0, 0x010a,  // 199  0000 0000 0011 101.\r\n\t    0,     0, 0x0020,  // 200  0000 0000 0011 000.\r\n\t    0,     0, 0x0108,  // 201  0000 0000 0011 111.\r\n\t    0,     0, 0x0109,  // 202  0000 0000 0011 110.\r\n\t    0,     0, 0x0026,  // 203  0000 0000 0010 010.\r\n\t    0,     0, 0x010d,  // 204  0000 0000 0011 010.\r\n\t    0,     0, 0x010e,  // 205  0000 0000 0011 001.\r\n\t    0,     0, 0x0021,  // 206  0000 0000 0010 111.\r\n\t    0,     0, 0x0027,  // 207  0000 0000 0010 001.\r\n\t    0,     0, 0x1f01,  // 208  0000 0000 0001 1011.\r\n\t    0,     0, 0x1b01,  // 209  0000 0000 0001 1111.\r\n\t    0,     0, 0x1e01,  // 210  0000 0000 0001 1100.\r\n\t    0,     0, 0x1002,  // 211  0000 0000 0001 0101.\r\n\t    0,     0, 0x1d01,  // 212  0000 0000 0001 1101.\r\n\t    0,     0, 0x1c01,  // 213  0000 0000 0001 1110.\r\n\t    0,     0, 0x010f,  // 214  0000 0000 0001 0011.\r\n\t    0,     0, 0x0112,  // 215  0000 0000 0001 0000.\r\n\t    0,     0, 0x0111,  // 216  0000 0000 0001 0001.\r\n\t    0,     0, 0x0110,  // 217  0000 0000 0001 0010.\r\n\t    0,     0, 0x0603,  // 218  0000 0000 0001 0100.\r\n\t    0,     0, 0x0b02,  // 219  0000 0000 0001 1010.\r\n\t    0,     0, 0x0e02,  // 220  0000 0000 0001 0111.\r\n\t    0,     0, 0x0d02,  // 221  0000 0000 0001 1000.\r\n\t    0,     0, 0x0c02,  // 222  0000 0000 0001 1001.\r\n\t    0,     0, 0x0f02   // 223  0000 0000 0001 0110.\r\n]);\r\n\r\nMPEG1.PICTURE_TYPE = {\r\n\tINTRA: 1,\r\n\tPREDICTIVE: 2,\r\n\tB: 3\r\n};\r\n\r\nMPEG1.START = {\r\n\tSEQUENCE: 0xB3,\r\n\tSLICE_FIRST: 0x01,\r\n\tSLICE_LAST: 0xAF,\r\n\tPICTURE: 0x00,\r\n\tEXTENSION: 0xB5,\r\n\tUSER_DATA: 0xB2\r\n};\r\n\r\nexport default MPEG1;\r\n\r\n"]}