{"version":3,"sources":["../src/decoder.js"],"names":["BaseDecoder","options","destination","canPlay","collectTimestamps","streaming","timestamps","timestampIndex","startTime","decodedTime","Object","defineProperty","get","getCurrentTime","prototype","connect","write","pts","buffers","length","push","index","bits","byteLength","time","seek","i","ts","decode","advanceDecodedTime","seconds","newTimestampIndex"],"mappings":"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","file":"decoder.js","sourcesContent":["let BaseDecoder = function(options) {\r\n\tthis.destination = null;\r\n\tthis.canPlay = false;\r\n\r\n\tthis.collectTimestamps = !options.streaming;\r\n\tthis.timestamps = [];\r\n\tthis.timestampIndex = 0;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.decodedTime = 0;\r\n\r\n\tObject.defineProperty(this, 'currentTime', {get: this.getCurrentTime});\r\n};\r\n\r\nBaseDecoder.prototype.connect = function(destination) {\r\n\tthis.destination = destination;\r\n};\r\n\r\nBaseDecoder.prototype.write = function(pts, buffers) {\r\n\tif (this.collectTimestamps) {\r\n\t\tif (this.timestamps.length === 0) {\r\n\t\t\tthis.startTime = pts;\r\n\t\t\tthis.decodedTime = pts;\r\n\t\t}\r\n\t\tthis.timestamps.push({index: this.bits.byteLength << 3, time: pts});\r\n\t}\r\n\r\n\tthis.bits.write(buffers);\r\n\tthis.canPlay = true;\r\n};\r\n\r\nBaseDecoder.prototype.seek = function(time) {\r\n\tif (!this.collectTimestamps) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.timestampIndex = 0;\r\n\tfor (var i = 0; i < this.timestamps.length; i++) {\r\n\t\tif (this.timestamps[i].time > time) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.timestampIndex = i;\r\n\t}\r\n\r\n\tvar ts = this.timestamps[this.timestampIndex];\r\n\tif (ts) {\r\n\t\tthis.bits.index = ts.index;\r\n\t\tthis.decodedTime = ts.time;\r\n\t}\r\n\telse {\r\n\t\tthis.bits.index = 0;\r\n\t\tthis.decodedTime = this.startTime;\r\n\t}\r\n};\r\n\r\nBaseDecoder.prototype.decode = function() {\r\n\tthis.advanceDecodedTime(0);\r\n};\r\n\r\nBaseDecoder.prototype.advanceDecodedTime = function(seconds) {\r\n\tif (this.collectTimestamps) {\r\n\t\tvar newTimestampIndex = -1;\r\n\t\tfor (var i = this.timestampIndex; i < this.timestamps.length; i++) {\r\n\t\t\tif (this.timestamps[i].index > this.bits.index) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tnewTimestampIndex = i;\r\n\t\t}\r\n\r\n\t\t// Did we find a new PTS, different from the last? If so, we don't have\r\n\t\t// to advance the decoded time manually and can instead sync it exactly\r\n\t\t// to the PTS.\r\n\t\tif (\r\n\t\t\tnewTimestampIndex !== -1 && \r\n\t\t\tnewTimestampIndex !== this.timestampIndex\r\n\t\t) {\r\n\t\t\tthis.timestampIndex = newTimestampIndex;\r\n\t\t\tthis.decodedTime = this.timestamps[this.timestampIndex].time;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.decodedTime += seconds;\r\n};\r\n\r\nBaseDecoder.prototype.getCurrentTime = function() {\r\n\treturn this.decodedTime;\r\n};\r\n\r\nexport default BaseDecoder;\r\n"]}