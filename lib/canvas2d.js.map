{"version":3,"sources":["../src/canvas2d.js"],"names":["JSMpeg","CanvasRenderer","options","canvas","document","createElement","width","height","enabled","context","getContext","prototype","destroy","resize","imageData","getImageData","Fill","data","renderProgress","progress","w","h","ctx","fillStyle","fillRect","render","y","cb","cr","YCbCrToRGBA","putImageData","rgba","w2","yIndex1","yIndex2","yNext2Lines","cIndex","cNextLine","rgbaIndex1","rgbaIndex2","rgbaNext2Lines","cols","rows","ccb","ccr","r","g","b","row","col","y1","y2","y3","y4"],"mappings":"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","file":"canvas2d.js","sourcesContent":["import JSMpeg from './jsmpeg';\r\n\r\nlet CanvasRenderer = function(options) {\r\n\tthis.canvas = options.canvas || document.createElement('canvas');\r\n\tthis.width = this.canvas.width;\r\n\tthis.height = this.canvas.height;\r\n\tthis.enabled = true;\r\n\r\n\tthis.context = this.canvas.getContext('2d');\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function() {\r\n\t// Nothing to do here\r\n};\r\n\r\nCanvasRenderer.prototype.resize = function(width, height) {\r\n\tthis.width = width|0;\r\n\tthis.height = height|0;\r\n\r\n\tthis.canvas.width = this.width;\r\n\tthis.canvas.height = this.height;\r\n\r\n\tthis.imageData = this.context.getImageData(0, 0, this.width, this.height);\r\n\tJSMpeg.Fill(this.imageData.data, 255);\r\n};\r\n\r\nCanvasRenderer.prototype.renderProgress = function(progress) {\r\n\tvar \r\n\t\tw = this.canvas.width,\r\n\t\th = this.canvas.height,\r\n\t\tctx = this.context;\r\n\r\n\tctx.fillStyle = '#222';\r\n\tctx.fillRect(0, 0, w, h);\r\n\tctx.fillStyle = '#fff';\r\n\tctx.fillRect(0, h - h * progress, w, h * progress);\r\n};\r\n\r\nCanvasRenderer.prototype.render = function(y, cb, cr) {\r\n\tthis.YCbCrToRGBA(y, cb, cr, this.imageData.data);\r\n\tthis.context.putImageData(this.imageData, 0, 0);\r\n};\r\n\r\nCanvasRenderer.prototype.YCbCrToRGBA = function(y, cb, cr, rgba) {\r\n\tif (!this.enabled) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Chroma values are the same for each block of 4 pixels, so we proccess\r\n\t// 2 lines at a time, 2 neighboring pixels each.\r\n\t// I wish we could use 32bit writes to the RGBA buffer instead of writing\r\n\t// each byte separately, but we need the automatic clamping of the RGBA\r\n\t// buffer.\r\n\t\r\n\tvar w = ((this.width + 15) >> 4) << 4,\r\n\t\tw2 = w >> 1;\r\n\r\n\tvar yIndex1 = 0,\r\n\t\tyIndex2 = w,\r\n\t\tyNext2Lines = w + (w - this.width);\r\n\r\n\tvar cIndex = 0,\r\n\t\tcNextLine = w2 - (this.width >> 1);\r\n\r\n\tvar rgbaIndex1 = 0,\r\n\t\trgbaIndex2 = this.width * 4,\r\n\t\trgbaNext2Lines = this.width * 4;\r\n\r\n\tvar cols = this.width >> 1,\r\n\t\trows = this.height >> 1;\r\n\r\n\tvar ccb, ccr, r, g, b;\r\n\r\n\tfor (var row = 0; row < rows; row++) {\r\n\t\tfor (var col = 0; col < cols; col++) {\r\n\t\t\tccb = cb[cIndex];\r\n\t\t\tccr = cr[cIndex];\r\n\t\t\tcIndex++;\r\n\r\n\t\t\tr = (ccb + ((ccb * 103) >> 8)) - 179;\r\n\t\t\tg = ((ccr * 88) >> 8) - 44 + ((ccb * 183) >> 8) - 91;\r\n\t\t\tb = (ccr + ((ccr * 198) >> 8)) - 227;\r\n\r\n\t\t\t// Line 1\r\n\t\t\tvar y1 = y[yIndex1++];\r\n\t\t\tvar y2 = y[yIndex1++];\r\n\t\t\trgba[rgbaIndex1]   = y1 + r;\r\n\t\t\trgba[rgbaIndex1+1] = y1 - g;\r\n\t\t\trgba[rgbaIndex1+2] = y1 + b;\r\n\t\t\trgba[rgbaIndex1+4] = y2 + r;\r\n\t\t\trgba[rgbaIndex1+5] = y2 - g;\r\n\t\t\trgba[rgbaIndex1+6] = y2 + b;\r\n\t\t\trgbaIndex1 += 8;\r\n\r\n\t\t\t// Line 2\r\n\t\t\tvar y3 = y[yIndex2++];\r\n\t\t\tvar y4 = y[yIndex2++];\r\n\t\t\trgba[rgbaIndex2]   = y3 + r;\r\n\t\t\trgba[rgbaIndex2+1] = y3 - g;\r\n\t\t\trgba[rgbaIndex2+2] = y3 + b;\r\n\t\t\trgba[rgbaIndex2+4] = y4 + r;\r\n\t\t\trgba[rgbaIndex2+5] = y4 - g;\r\n\t\t\trgba[rgbaIndex2+6] = y4 + b;\r\n\t\t\trgbaIndex2 += 8;\r\n\t\t}\r\n\r\n\t\tyIndex1 += yNext2Lines;\r\n\t\tyIndex2 += yNext2Lines;\r\n\t\trgbaIndex1 += rgbaNext2Lines;\r\n\t\trgbaIndex2 += rgbaNext2Lines;\r\n\t\tcIndex += cNextLine;\r\n\t}\r\n};\r\n\r\nexport default CanvasRenderer;\r\n"]}